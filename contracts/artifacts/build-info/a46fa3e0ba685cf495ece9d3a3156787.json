{
	"id": "a46fa3e0ba685cf495ece9d3a3156787",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TrainersERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\n\ncontract TrainersERC721 is AccessControl, ERC721Enumerable {\n    event MintTrainer(uint16, uint256, address);\n\n    using Strings for uint256;\n    using Strings for uint16;\n\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n    bytes32 public constant DEP = keccak256(\"DEP\");\n\n    string public tokenURI_;\n    uint256 public tokenTraker_ = 1;\n\n    mapping(uint256 => uint16) private modelTraker_;\n\n    constructor(\n        string memory _name,\n        string memory _symbol\n    ) ERC721(_name, _symbol) {\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return tokenURI_;\n    }\n\n    function setURI(string calldata _u) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        tokenURI_ = _u;\n    }\n\n    function tokenModel(uint256 _id) external view returns (uint256) {\n        return modelTraker_[_id];\n    }\n\n    function tokenURI(\n        uint256 _id\n    ) public view virtual override returns (string memory) {\n        _requireOwned(_id);\n\n        return\n            string(\n                abi.encodePacked(\n                    _baseURI(),\n                    _id.toString(),\n                    \"?model=\",\n                    modelTraker_[_id].toString()\n                )\n            );\n    }\n\n    function mint(address _to, uint16 _m) public virtual onlyRole(DEP) {\n        uint256 _tokenId = tokenTraker_;\n        modelTraker_[_tokenId] = _m;\n        tokenTraker_ += 1;\n        _mint(_to, _tokenId);\n        emit MintTrainer(_m, _tokenId, _to);\n    }\n\n    function supportsInterface(\n        bytes4 interfaceId\n    )\n        public\n        view\n        virtual\n        override(AccessControl, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 554,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 558,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 562,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 568,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 554,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 558,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 562,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 568,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1678,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1682,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1685,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1689,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f3c5f6ce959f93b7358c3632384c4dc11d8d1ba436f96c5488452743c32709364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205f3c5f6ce959f93b7358c3632384c4dc11d8d1ba436f96c5488452743c32709364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 EXTCODECOPY PUSH0 PUSH13 0xE959F93B7358C3632384C4DC11 0xD8 0xD1 0xBA NUMBER PUSH16 0x96C5488452743C32709364736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205f3c5f6ce959f93b7358c3632384c4dc11d8d1ba436f96c5488452743c32709364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 EXTCODECOPY PUSH0 PUSH13 0xE959F93B7358C3632384C4DC11 0xD8 0xD1 0xBA NUMBER PUSH16 0x96C5488452743C32709364736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f3c5f6ce959f93b7358c3632384c4dc11d8d1ba436f96c5488452743c32709364736f6c63430008140033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TrainersERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208d56b71dbe56cc6bda69bacc84a4fb75b77ed153bc5531bc898f25ebc1f4bc1464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208d56b71dbe56cc6bda69bacc84a4fb75b77ed153bc5531bc898f25ebc1f4bc1464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 JUMP 0xB7 SAR 0xBE JUMP 0xCC PUSH12 0xDA69BACC84A4FB75B77ED153 0xBC SSTORE BALANCE 0xBC DUP10 DUP16 0x25 0xEB 0xC1 DELEGATECALL 0xBC EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208d56b71dbe56cc6bda69bacc84a4fb75b77ed153bc5531bc898f25ebc1f4bc1464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 JUMP 0xB7 SAR 0xBE JUMP 0xCC PUSH12 0xDA69BACC84A4FB75B77ED153 0xBC SSTORE BALANCE 0xBC DUP10 DUP16 0x25 0xEB 0xC1 DELEGATECALL 0xBC EQ PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d56b71dbe56cc6bda69bacc84a4fb75b77ed153bc5531bc898f25ebc1f4bc1464736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TrainersERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205deda1e41b0be97c34bb1088d13033e8522e7a753b740e9af228525209a5895b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205deda1e41b0be97c34bb1088d13033e8522e7a753b740e9af228525209a5895b64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xED LOG1 0xE4 SHL SIGNEXTEND 0xE9 PUSH29 0x34BB1088D13033E8522E7A753B740E9AF228525209A5895B64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205deda1e41b0be97c34bb1088d13033e8522e7a753b740e9af228525209a5895b64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xED LOG1 0xE4 SHL SIGNEXTEND 0xE9 PUSH29 0x34BB1088D13033E8522E7A753B740E9AF228525209A5895B64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205deda1e41b0be97c34bb1088d13033e8522e7a753b740e9af228525209a5895b64736f6c63430008140033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TrainersERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TrainersERC721.sol": {
				"TrainersERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MintTrainer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEP",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_m",
									"type": "uint16"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_u",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "tokenModel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenTraker_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenURI_",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TrainersERC721.sol\":249:2055  contract TrainersERC721 is AccessControl, ERC721Enumerable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TrainersERC721.sol\":594:595  1 */\n  0x01\n    /* \"contracts/TrainersERC721.sol\":564:595  uint256 public tokenTraker_ = 1 */\n  0x0c\n  sstore\n    /* \"contracts/TrainersERC721.sol\":656:818  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TrainersERC721.sol\":741:746  _name */\n  dup2\n    /* \"contracts/TrainersERC721.sol\":748:755  _symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  tag_7\n    /* \"contracts/TrainersERC721.sol\":741:746  _name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/TrainersERC721.sol\":767:811  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_11\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"contracts/TrainersERC721.sol\":767:777  _grantRole */\n  tag_14\n    /* \"contracts/TrainersERC721.sol\":767:811  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/TrainersERC721.sol\":656:818  constructor(... */\n  pop\n  pop\n    /* \"contracts/TrainersERC721.sol\":249:2055  contract TrainersERC721 is AccessControl, ERC721Enumerable {... */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_21\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_20:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_24:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_25:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_33:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_35\n  tag_24\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_37\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_38:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_39:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_43:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_44:\n    /* \"#utility.yul\":1309:1370   */\n  tag_45\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_47\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_25\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_26:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_49:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_50:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_28:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_54\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_54:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_55:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_53:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_8:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_61\n  tag_24\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2994:3091   */\n  tag_62\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_63\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_66:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_57)\n    /* \"#utility.yul\":3222:3885   */\ntag_65:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_69:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_72:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_30:\n    /* \"contracts/TrainersERC721.sol\":249:2055  contract TrainersERC721 is AccessControl, ERC721Enumerable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TrainersERC721.sol\":249:2055  contract TrainersERC721 is AccessControl, ERC721Enumerable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42842e0e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd2401fa4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xad0be4bd\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x6352211e\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x42842e0e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6313bd30\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x1b21c00a\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x2a0acc6a\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x2a0acc6a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x1b21c00a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x081812fc\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0e1a6a9c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TrainersERC721.sol\":1811:2053  function supportsInterface(... */\n    tag_3:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/TrainersERC721.sol\":1811:2053  function supportsInterface(... */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TrainersERC721.sol\":938:1043  function setURI(string calldata _u) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_4:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2276:2327   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2264:2266   */\n      0x20\n        /* \"#utility.yul\":2249:2267   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_43\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_45\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":564:595  uint256 public tokenTraker_ = 1 */\n    tag_8:\n      tag_63\n      sload(0x0c)\n      dup2\n      jump\n    tag_63:\n      mload(0x40)\n        /* \"#utility.yul\":2921:2946   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2909:2911   */\n      0x20\n        /* \"#utility.yul\":2894:2912   */\n      add\n        /* \"contracts/TrainersERC721.sol\":564:595  uint256 public tokenTraker_ = 1 */\n      tag_43\n        /* \"#utility.yul\":2775:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_63)\n        /* \"contracts/TrainersERC721.sol\":1049:1155  function tokenModel(uint256 _id) external view returns (uint256) {... */\n    tag_10:\n      tag_63\n      tag_71\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_71:\n        /* \"contracts/TrainersERC721.sol\":1105:1112  uint256 */\n      0x00\n        /* \"contracts/TrainersERC721.sol\":1131:1148  modelTraker_[_id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TrainersERC721.sol\":1131:1143  modelTraker_ */\n      0x0d\n        /* \"contracts/TrainersERC721.sol\":1131:1148  modelTraker_[_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffff\n      and\n      swap1\n        /* \"contracts/TrainersERC721.sol\":1049:1155  function tokenModel(uint256 _id) external view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_11:\n      tag_45\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_12:\n      tag_63\n      tag_79\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"contracts/TrainersERC721.sol\":426:476  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_13:\n      tag_63\n        /* \"contracts/TrainersERC721.sol\":458:476  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"contracts/TrainersERC721.sol\":426:476  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      tag_45\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_63\n      tag_92\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_16:\n      tag_45\n      tag_96\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_17:\n      tag_45\n      tag_99\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_63\n      tag_102\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":482:528  bytes32 public constant DEP = keccak256(\"DEP\") */\n    tag_19:\n      tag_63\n        /* \"contracts/TrainersERC721.sol\":512:528  keccak256(\"DEP\") */\n      0xb4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe2\n        /* \"contracts/TrainersERC721.sol\":482:528  bytes32 public constant DEP = keccak256(\"DEP\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_20:\n      tag_53\n      tag_109\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_63\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_22:\n      tag_39\n      tag_118\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      tag_49\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      tag_63\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_25:\n      tag_45\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":1551:1805  function mint(address _to, uint16 _m) public virtual onlyRole(DEP) {... */\n    tag_26:\n      tag_45\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_27:\n      tag_45\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":1161:1545  function tokenURI(... */\n    tag_28:\n      tag_49\n      tag_140\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":535:558  string public tokenURI_ */\n    tag_29:\n      tag_49\n      tag_144\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_30:\n      tag_45\n      tag_147\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_31:\n      tag_39\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":1811:2053  function supportsInterface(... */\n    tag_42:\n        /* \"contracts/TrainersERC721.sol\":1983:1987  bool */\n      0x00\n        /* \"contracts/TrainersERC721.sol\":2010:2046  super.supportsInterface(interfaceId) */\n      tag_155\n        /* \"contracts/TrainersERC721.sol\":2034:2045  interfaceId */\n      dup3\n        /* \"contracts/TrainersERC721.sol\":2010:2033  super.supportsInterface */\n      tag_156\n        /* \"contracts/TrainersERC721.sol\":2010:2046  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/TrainersERC721.sol\":2003:2046  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"contracts/TrainersERC721.sol\":1811:2053  function supportsInterface(... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TrainersERC721.sol\":938:1043  function setURI(string calldata _u) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/TrainersERC721.sol\":1022:1031  tokenURI_ */\n      0x0b\n        /* \"contracts/TrainersERC721.sol\":1022:1036  tokenURI_ = _u */\n      tag_161\n        /* \"contracts/TrainersERC721.sol\":1034:1036  _u */\n      dup4\n      dup6\n        /* \"contracts/TrainersERC721.sol\":1022:1031  tokenURI_ */\n      dup4\n        /* \"contracts/TrainersERC721.sol\":1022:1036  tokenURI_ = _u */\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/TrainersERC721.sol\":938:1043  function setURI(string calldata _u) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_165\n      jump\t// in\n    tag_166:\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_171:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9051:9066   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9033:9067   */\n      mstore\n        /* \"#utility.yul\":9083:9101   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9076:9110   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9146:9161   */\n      dup3\n      and\n        /* \"#utility.yul\":9126:9144   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9119:9162   */\n      mstore\n        /* \"#utility.yul\":8968:8986   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_184\n        /* \"#utility.yul\":8793:9168   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1824:1831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1866:1871  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1865  balanceOf */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1852  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1872  index >= balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9365:9397   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9347:9398   */\n      mstore\n        /* \"#utility.yul\":9414:9432   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9407:9441   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9320:9338   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      tag_184\n        /* \"#utility.yul\":9173:9447   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n    tag_200:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1970  _ownedTokens */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_206:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2302:2309  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2330  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2347  index >= totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2401:2402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9347:9398   */\n      mstore\n        /* \"#utility.yul\":9414:9432   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9407:9441   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9320:9338   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      tag_184\n        /* \"#utility.yul\":9173:9447   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2448  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2449:2454  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2455  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_216\n      jump\t// in\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2431:2455  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_221:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_176\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":1551:1805  function mint(address _to, uint16 _m) public virtual onlyRole(DEP) {... */\n    tag_134:\n        /* \"contracts/TrainersERC721.sol\":512:528  keccak256(\"DEP\") */\n      0xb4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_235\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/TrainersERC721.sol\":1647:1659  tokenTraker_ */\n      0x0c\n      dup1\n      sload\n        /* \"contracts/TrainersERC721.sol\":1628:1644  uint256 _tokenId */\n      0x00\n        /* \"contracts/TrainersERC721.sol\":1669:1691  modelTraker_[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TrainersERC721.sol\":1669:1681  modelTraker_ */\n      0x0d\n        /* \"contracts/TrainersERC721.sol\":1669:1691  modelTraker_[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/TrainersERC721.sol\":1669:1696  modelTraker_[_tokenId] = _m */\n      dup1\n      sload\n      not(0xffff)\n      and\n      0xffff\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/TrainersERC721.sol\":1706:1723  tokenTraker_ += 1 */\n      dup3\n      sload\n        /* \"contracts/TrainersERC721.sol\":1647:1659  tokenTraker_ */\n      swap2\n      swap3\n      0x01\n      swap3\n      swap1\n      swap2\n        /* \"contracts/TrainersERC721.sol\":1628:1644  uint256 _tokenId */\n      swap1\n        /* \"contracts/TrainersERC721.sol\":1706:1723  tokenTraker_ += 1 */\n      tag_237\n      swap1\n      dup5\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/TrainersERC721.sol\":1733:1753  _mint(_to, _tokenId) */\n      tag_239\n      swap1\n      pop\n        /* \"contracts/TrainersERC721.sol\":1739:1742  _to */\n      dup5\n        /* \"contracts/TrainersERC721.sol\":1744:1752  _tokenId */\n      dup3\n        /* \"contracts/TrainersERC721.sol\":1733:1738  _mint */\n      tag_240\n        /* \"contracts/TrainersERC721.sol\":1733:1753  _mint(_to, _tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/TrainersERC721.sol\":1768:1798  MintTrainer(_m, _tokenId, _to) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10076:10082   */\n      0xffff\n        /* \"#utility.yul\":10064:10083   */\n      dup6\n      and\n        /* \"#utility.yul\":10046:10084   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10115:10117   */\n      0x20\n        /* \"#utility.yul\":10100:10118   */\n      dup2\n      add\n        /* \"#utility.yul\":10093:10127   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10163:10195   */\n      dup7\n      and\n        /* \"#utility.yul\":10143:10161   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":10136:10196   */\n      mstore\n        /* \"contracts/TrainersERC721.sol\":1768:1798  MintTrainer(_m, _tokenId, _to) */\n      swap1\n      mload\n      0xfcbd9479bb682193b3eb060a58134eda82cf0a141904328119cfb9c15e6e171e\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10034:10036   */\n      0x60\n        /* \"contracts/TrainersERC721.sol\":1768:1798  MintTrainer(_m, _tokenId, _to) */\n      add\n      swap1\n      log1\n        /* \"contracts/TrainersERC721.sol\":1618:1805  {... */\n      pop\n        /* \"contracts/TrainersERC721.sol\":1551:1805  function mint(address _to, uint16 _m) public virtual onlyRole(DEP) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"contracts/TrainersERC721.sol\":1161:1545  function tokenURI(... */\n    tag_141:\n        /* \"contracts/TrainersERC721.sol\":1244:1257  string memory */\n      0x60\n        /* \"contracts/TrainersERC721.sol\":1269:1287  _requireOwned(_id) */\n      tag_248\n        /* \"contracts/TrainersERC721.sol\":1283:1286  _id */\n      dup3\n        /* \"contracts/TrainersERC721.sol\":1269:1282  _requireOwned */\n      tag_172\n        /* \"contracts/TrainersERC721.sol\":1269:1287  _requireOwned(_id) */\n      jump\t// in\n    tag_248:\n      pop\n        /* \"contracts/TrainersERC721.sol\":1379:1389  _baseURI() */\n      tag_249\n        /* \"contracts/TrainersERC721.sol\":1379:1387  _baseURI */\n      tag_250\n        /* \"contracts/TrainersERC721.sol\":1379:1389  _baseURI() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/TrainersERC721.sol\":1411:1425  _id.toString() */\n      tag_251\n        /* \"contracts/TrainersERC721.sol\":1411:1414  _id */\n      dup4\n        /* \"contracts/TrainersERC721.sol\":1411:1423  _id.toString */\n      tag_252\n        /* \"contracts/TrainersERC721.sol\":1411:1425  _id.toString() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/TrainersERC721.sol\":1478:1495  modelTraker_[_id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/TrainersERC721.sol\":1478:1490  modelTraker_ */\n      0x0d\n        /* \"contracts/TrainersERC721.sol\":1478:1495  modelTraker_[_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/TrainersERC721.sol\":1478:1506  modelTraker_[_id].toString() */\n      tag_253\n      swap1\n        /* \"contracts/TrainersERC721.sol\":1478:1495  modelTraker_[_id] */\n      0xffff\n      and\n        /* \"contracts/TrainersERC721.sol\":1478:1504  modelTraker_[_id].toString */\n      tag_252\n        /* \"contracts/TrainersERC721.sol\":1478:1506  modelTraker_[_id].toString() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/TrainersERC721.sol\":1341:1524  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_254\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/TrainersERC721.sol\":1298:1538  return... */\n      swap1\n      pop\n        /* \"contracts/TrainersERC721.sol\":1161:1545  function tokenURI(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TrainersERC721.sol\":535:558  string public tokenURI_ */\n    tag_144:\n      0x0b\n      dup1\n      sload\n      tag_256\n      swap1\n      tag_165\n      jump\t// in\n    tag_256:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_257\n      swap1\n      tag_165\n      jump\t// in\n    tag_257:\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_259\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_258)\n    tag_259:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_260:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_260\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1537:1541  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1638:1649  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1637  super.supportsInterface */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_272\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_274\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2921:2946   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2894:2912   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_184\n        /* \"#utility.yul\":2775:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2613:2620  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2653  address previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2670:2672  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2674:2681  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2683:2687  auth */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2669  super._update */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2688  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2785  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3959  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3966  _allTokens.length */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3937  _allTokensIndex */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3966  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:4000  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0x6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af\n      add\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      jump(tag_293)\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2824:2826  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2820  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2875:2888  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2890:2897  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2874  _removeTokenFromOwnerEnumeration */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2991:2998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2990  _removeTokenFromAllTokensEnumeration */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      jump(tag_300)\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3037:3039  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3033  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3083:3085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3087:3094  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3082  _addTokenToOwnerEnumeration */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3123:3136  previousOwner */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_303\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_155)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_304:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_155)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_155)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_325\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_326\n      jump\t// in\n    tag_325:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_327\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_328\n      swap2\n      dup2\n      add\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      0x01\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_330\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_335\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_334)\n    tag_335:\n      0x60\n      swap2\n      pop\n    tag_334:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_330:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TrainersERC721.sol\":824:932  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_250:\n        /* \"contracts/TrainersERC721.sol\":884:897  string memory */\n      0x60\n        /* \"contracts/TrainersERC721.sol\":916:925  tokenURI_ */\n      0x0b\n        /* \"contracts/TrainersERC721.sol\":909:925  return tokenURI_ */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_349\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_350\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_352\n      jumpi\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_354\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_354:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_355:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_362\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_367\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_367:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9365:9397   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9347:9398   */\n      mstore\n        /* \"#utility.yul\":9414:9432   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9407:9441   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9320:9338   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_184\n        /* \"#utility.yul\":9173:9447   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_373\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_375\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_376\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_376:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_377\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2326   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2276:2327   */\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      tag_184\n        /* \"#utility.yul\":2130:2333   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_374:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_388\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_388:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_387:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_389\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4908  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      tag_393\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4921:4925  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4920  balanceOf */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4954  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4974  _ownedTokensIndex */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4926  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5115  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n      tag_394\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5150  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5165  _ownedTokens */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5246  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5335  _ownedTokensIndex */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5361  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n    tag_394:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5516  _ownedTokensIndex */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5492:5525  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5554  _ownedTokens */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5535:5576  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6155  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6162  _allTokens.length */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6142  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_396\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6165:6166  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6194  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6212  _allTokensIndex */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6575  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_399\n      jumpi\n      tag_399\n      tag_216\n      jump\t// in\n    tag_399:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6591  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6627:6638  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6612  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6613:6623  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6624  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_402\n      jumpi\n      tag_402\n      tag_216\n      jump\t// in\n    tag_402:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6638  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6721  _allTokensIndex */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6747  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6868:6899  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6919  _allTokens */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6925  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_405\n      jumpi\n      tag_405\n      tag_406\n      jump\t// in\n    tag_405:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5942:6932  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3535  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3554:3555  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      tag_409\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3548:3550  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3547  balanceOf */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3555  balanceOf(to) - 1 */\n      tag_410\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_410:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3577  _ownedTokens */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3599  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3626  _ownedTokensIndex */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3644  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_412\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_415\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_418\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_418:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_421\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_421:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_424\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_424:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_427\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_427:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_155\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_436\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_437\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_206\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2921:2946   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2894:2912   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_184\n        /* \"#utility.yul\":2775:2952   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9365:9397   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9347:9398   */\n      mstore\n        /* \"#utility.yul\":9414:9432   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9407:9441   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9320:9338   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_184\n        /* \"#utility.yul\":9173:9447   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_300\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_447\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_447\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_447:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_300\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      swap2\n      and\n      eq\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_450:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_41:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_462:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_463\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_450\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":384:389   */\n      swap4\n        /* \"#utility.yul\":150:395   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":592:1184   */\n    tag_47:\n        /* \"#utility.yul\":663:669   */\n      0x00\n        /* \"#utility.yul\":671:677   */\n      dup1\n        /* \"#utility.yul\":724:726   */\n      0x20\n        /* \"#utility.yul\":712:721   */\n      dup4\n        /* \"#utility.yul\":703:710   */\n      dup6\n        /* \"#utility.yul\":699:722   */\n      sub\n        /* \"#utility.yul\":695:727   */\n      slt\n        /* \"#utility.yul\":692:744   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":740:741   */\n      0x00\n        /* \"#utility.yul\":737:738   */\n      dup1\n        /* \"#utility.yul\":730:742   */\n      revert\n        /* \"#utility.yul\":692:744   */\n    tag_466:\n        /* \"#utility.yul\":780:789   */\n      dup3\n        /* \"#utility.yul\":767:790   */\n      calldataload\n        /* \"#utility.yul\":809:827   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":850:852   */\n      dup1\n        /* \"#utility.yul\":842:848   */\n      dup3\n        /* \"#utility.yul\":839:853   */\n      gt\n        /* \"#utility.yul\":836:870   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":866:867   */\n      0x00\n        /* \"#utility.yul\":863:864   */\n      dup1\n        /* \"#utility.yul\":856:868   */\n      revert\n        /* \"#utility.yul\":836:870   */\n    tag_467:\n        /* \"#utility.yul\":904:910   */\n      dup2\n        /* \"#utility.yul\":893:902   */\n      dup6\n        /* \"#utility.yul\":889:911   */\n      add\n        /* \"#utility.yul\":879:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":949:956   */\n      dup6\n        /* \"#utility.yul\":942:946   */\n      0x1f\n        /* \"#utility.yul\":938:940   */\n      dup4\n        /* \"#utility.yul\":934:947   */\n      add\n        /* \"#utility.yul\":930:957   */\n      slt\n        /* \"#utility.yul\":920:975   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":968:969   */\n      dup1\n        /* \"#utility.yul\":961:973   */\n      revert\n        /* \"#utility.yul\":920:975   */\n    tag_468:\n        /* \"#utility.yul\":1011:1013   */\n      dup2\n        /* \"#utility.yul\":998:1014   */\n      calldataload\n        /* \"#utility.yul\":1037:1039   */\n      dup2\n        /* \"#utility.yul\":1029:1035   */\n      dup2\n        /* \"#utility.yul\":1026:1040   */\n      gt\n        /* \"#utility.yul\":1023:1057   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":1053:1054   */\n      0x00\n        /* \"#utility.yul\":1050:1051   */\n      dup1\n        /* \"#utility.yul\":1043:1055   */\n      revert\n        /* \"#utility.yul\":1023:1057   */\n    tag_469:\n        /* \"#utility.yul\":1098:1105   */\n      dup7\n        /* \"#utility.yul\":1093:1095   */\n      0x20\n        /* \"#utility.yul\":1084:1090   */\n      dup3\n        /* \"#utility.yul\":1080:1082   */\n      dup6\n        /* \"#utility.yul\":1076:1091   */\n      add\n        /* \"#utility.yul\":1072:1096   */\n      add\n        /* \"#utility.yul\":1069:1106   */\n      gt\n        /* \"#utility.yul\":1066:1123   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":1119:1120   */\n      0x00\n        /* \"#utility.yul\":1116:1117   */\n      dup1\n        /* \"#utility.yul\":1109:1121   */\n      revert\n        /* \"#utility.yul\":1066:1123   */\n    tag_470:\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1142:1153   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":1172:1178   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":592:1184   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1189:1439   */\n    tag_451:\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1284:1397   */\n    tag_472:\n        /* \"#utility.yul\":1298:1304   */\n      dup4\n        /* \"#utility.yul\":1295:1296   */\n      dup2\n        /* \"#utility.yul\":1292:1305   */\n      lt\n        /* \"#utility.yul\":1284:1397   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":1374:1385   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1368:1386   */\n      mload\n        /* \"#utility.yul\":1355:1366   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1348:1387   */\n      mstore\n        /* \"#utility.yul\":1320:1322   */\n      0x20\n        /* \"#utility.yul\":1313:1323   */\n      add\n        /* \"#utility.yul\":1284:1397   */\n      jump(tag_472)\n    tag_474:\n      pop\n      pop\n        /* \"#utility.yul\":1431:1432   */\n      0x00\n        /* \"#utility.yul\":1413:1429   */\n      swap2\n      add\n        /* \"#utility.yul\":1406:1433   */\n      mstore\n        /* \"#utility.yul\":1189:1439   */\n      jump\t// out\n        /* \"#utility.yul\":1444:1715   */\n    tag_452:\n        /* \"#utility.yul\":1486:1489   */\n      0x00\n        /* \"#utility.yul\":1524:1529   */\n      dup2\n        /* \"#utility.yul\":1518:1530   */\n      mload\n        /* \"#utility.yul\":1551:1557   */\n      dup1\n        /* \"#utility.yul\":1546:1549   */\n      dup5\n        /* \"#utility.yul\":1539:1558   */\n      mstore\n        /* \"#utility.yul\":1567:1643   */\n      tag_476\n        /* \"#utility.yul\":1636:1642   */\n      dup2\n        /* \"#utility.yul\":1629:1633   */\n      0x20\n        /* \"#utility.yul\":1624:1627   */\n      dup7\n        /* \"#utility.yul\":1620:1634   */\n      add\n        /* \"#utility.yul\":1613:1617   */\n      0x20\n        /* \"#utility.yul\":1606:1611   */\n      dup7\n        /* \"#utility.yul\":1602:1618   */\n      add\n        /* \"#utility.yul\":1567:1643   */\n      tag_451\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1697:1699   */\n      0x1f\n        /* \"#utility.yul\":1676:1691   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1672:1701   */\n      and\n        /* \"#utility.yul\":1663:1702   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1704:1708   */\n      0x20\n        /* \"#utility.yul\":1659:1709   */\n      add\n      swap3\n        /* \"#utility.yul\":1444:1715   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1720:1940   */\n    tag_52:\n        /* \"#utility.yul\":1869:1871   */\n      0x20\n        /* \"#utility.yul\":1858:1867   */\n      dup2\n        /* \"#utility.yul\":1851:1872   */\n      mstore\n        /* \"#utility.yul\":1832:1836   */\n      0x00\n        /* \"#utility.yul\":1889:1934   */\n      tag_463\n        /* \"#utility.yul\":1930:1932   */\n      0x20\n        /* \"#utility.yul\":1919:1928   */\n      dup4\n        /* \"#utility.yul\":1915:1933   */\n      add\n        /* \"#utility.yul\":1907:1913   */\n      dup5\n        /* \"#utility.yul\":1889:1934   */\n      tag_452\n      jump\t// in\n        /* \"#utility.yul\":1945:2125   */\n    tag_55:\n        /* \"#utility.yul\":2004:2010   */\n      0x00\n        /* \"#utility.yul\":2057:2059   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup3\n        /* \"#utility.yul\":2036:2043   */\n      dup5\n        /* \"#utility.yul\":2032:2055   */\n      sub\n        /* \"#utility.yul\":2028:2060   */\n      slt\n        /* \"#utility.yul\":2025:2077   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":2073:2074   */\n      0x00\n        /* \"#utility.yul\":2070:2071   */\n      dup1\n        /* \"#utility.yul\":2063:2075   */\n      revert\n        /* \"#utility.yul\":2025:2077   */\n    tag_480:\n      pop\n        /* \"#utility.yul\":2096:2119   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1945:2125   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2338:2511   */\n    tag_453:\n        /* \"#utility.yul\":2406:2426   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2455:2486   */\n      dup2\n      and\n        /* \"#utility.yul\":2445:2487   */\n      dup2\n      eq\n        /* \"#utility.yul\":2435:2505   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":2501:2502   */\n      0x00\n        /* \"#utility.yul\":2498:2499   */\n      dup1\n        /* \"#utility.yul\":2491:2503   */\n      revert\n        /* \"#utility.yul\":2435:2505   */\n    tag_483:\n        /* \"#utility.yul\":2338:2511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2516:2770   */\n    tag_61:\n        /* \"#utility.yul\":2584:2590   */\n      0x00\n        /* \"#utility.yul\":2592:2598   */\n      dup1\n        /* \"#utility.yul\":2645:2647   */\n      0x40\n        /* \"#utility.yul\":2633:2642   */\n      dup4\n        /* \"#utility.yul\":2624:2631   */\n      dup6\n        /* \"#utility.yul\":2620:2643   */\n      sub\n        /* \"#utility.yul\":2616:2648   */\n      slt\n        /* \"#utility.yul\":2613:2665   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":2661:2662   */\n      0x00\n        /* \"#utility.yul\":2658:2659   */\n      dup1\n        /* \"#utility.yul\":2651:2663   */\n      revert\n        /* \"#utility.yul\":2613:2665   */\n    tag_485:\n        /* \"#utility.yul\":2684:2713   */\n      tag_486\n        /* \"#utility.yul\":2703:2712   */\n      dup4\n        /* \"#utility.yul\":2684:2713   */\n      tag_453\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":2674:2713   */\n      swap5\n        /* \"#utility.yul\":2760:2762   */\n      0x20\n        /* \"#utility.yul\":2745:2763   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2732:2764   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2516:2770   */\n      jump\t// out\n        /* \"#utility.yul\":2957:3285   */\n    tag_76:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3103:3105   */\n      0x60\n        /* \"#utility.yul\":3091:3100   */\n      dup5\n        /* \"#utility.yul\":3082:3089   */\n      dup7\n        /* \"#utility.yul\":3078:3101   */\n      sub\n        /* \"#utility.yul\":3074:3106   */\n      slt\n        /* \"#utility.yul\":3071:3123   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":3119:3120   */\n      0x00\n        /* \"#utility.yul\":3116:3117   */\n      dup1\n        /* \"#utility.yul\":3109:3121   */\n      revert\n        /* \"#utility.yul\":3071:3123   */\n    tag_489:\n        /* \"#utility.yul\":3142:3171   */\n      tag_490\n        /* \"#utility.yul\":3161:3170   */\n      dup5\n        /* \"#utility.yul\":3142:3171   */\n      tag_453\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3132:3171   */\n      swap3\n      pop\n        /* \"#utility.yul\":3190:3228   */\n      tag_491\n        /* \"#utility.yul\":3224:3226   */\n      0x20\n        /* \"#utility.yul\":3213:3222   */\n      dup6\n        /* \"#utility.yul\":3209:3227   */\n      add\n        /* \"#utility.yul\":3190:3228   */\n      tag_453\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3180:3228   */\n      swap2\n      pop\n        /* \"#utility.yul\":3275:3277   */\n      0x40\n        /* \"#utility.yul\":3264:3273   */\n      dup5\n        /* \"#utility.yul\":3260:3278   */\n      add\n        /* \"#utility.yul\":3247:3279   */\n      calldataload\n        /* \"#utility.yul\":3237:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":2957:3285   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3657:3911   */\n    tag_89:\n        /* \"#utility.yul\":3725:3731   */\n      0x00\n        /* \"#utility.yul\":3733:3739   */\n      dup1\n        /* \"#utility.yul\":3786:3788   */\n      0x40\n        /* \"#utility.yul\":3774:3783   */\n      dup4\n        /* \"#utility.yul\":3765:3772   */\n      dup6\n        /* \"#utility.yul\":3761:3784   */\n      sub\n        /* \"#utility.yul\":3757:3789   */\n      slt\n        /* \"#utility.yul\":3754:3806   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3802:3803   */\n      0x00\n        /* \"#utility.yul\":3799:3800   */\n      dup1\n        /* \"#utility.yul\":3792:3804   */\n      revert\n        /* \"#utility.yul\":3754:3806   */\n    tag_496:\n        /* \"#utility.yul\":3838:3847   */\n      dup3\n        /* \"#utility.yul\":3825:3848   */\n      calldataload\n        /* \"#utility.yul\":3815:3848   */\n      swap2\n      pop\n        /* \"#utility.yul\":3867:3905   */\n      tag_497\n        /* \"#utility.yul\":3901:3903   */\n      0x20\n        /* \"#utility.yul\":3890:3899   */\n      dup5\n        /* \"#utility.yul\":3886:3904   */\n      add\n        /* \"#utility.yul\":3867:3905   */\n      tag_453\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":3857:3905   */\n      swap1\n      pop\n        /* \"#utility.yul\":3657:3911   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3916:4102   */\n    tag_114:\n        /* \"#utility.yul\":3975:3981   */\n      0x00\n        /* \"#utility.yul\":4028:4030   */\n      0x20\n        /* \"#utility.yul\":4016:4025   */\n      dup3\n        /* \"#utility.yul\":4007:4014   */\n      dup5\n        /* \"#utility.yul\":4003:4026   */\n      sub\n        /* \"#utility.yul\":3999:4031   */\n      slt\n        /* \"#utility.yul\":3996:4048   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":4044:4045   */\n      0x00\n        /* \"#utility.yul\":4041:4042   */\n      dup1\n        /* \"#utility.yul\":4034:4046   */\n      revert\n        /* \"#utility.yul\":3996:4048   */\n    tag_499:\n        /* \"#utility.yul\":4067:4096   */\n      tag_463\n        /* \"#utility.yul\":4086:4095   */\n      dup3\n        /* \"#utility.yul\":4067:4096   */\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":4107:4454   */\n    tag_129:\n        /* \"#utility.yul\":4172:4178   */\n      0x00\n        /* \"#utility.yul\":4180:4186   */\n      dup1\n        /* \"#utility.yul\":4233:4235   */\n      0x40\n        /* \"#utility.yul\":4221:4230   */\n      dup4\n        /* \"#utility.yul\":4212:4219   */\n      dup6\n        /* \"#utility.yul\":4208:4231   */\n      sub\n        /* \"#utility.yul\":4204:4236   */\n      slt\n        /* \"#utility.yul\":4201:4253   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4201:4253   */\n    tag_502:\n        /* \"#utility.yul\":4272:4301   */\n      tag_503\n        /* \"#utility.yul\":4291:4300   */\n      dup4\n        /* \"#utility.yul\":4272:4301   */\n      tag_453\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4262:4301   */\n      swap2\n      pop\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup4\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4323:4355   */\n      calldataload\n        /* \"#utility.yul\":4398:4403   */\n      dup1\n        /* \"#utility.yul\":4391:4404   */\n      iszero\n        /* \"#utility.yul\":4384:4405   */\n      iszero\n        /* \"#utility.yul\":4377:4382   */\n      dup2\n        /* \"#utility.yul\":4374:4406   */\n      eq\n        /* \"#utility.yul\":4364:4424   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":4420:4421   */\n      0x00\n        /* \"#utility.yul\":4417:4418   */\n      dup1\n        /* \"#utility.yul\":4410:4422   */\n      revert\n        /* \"#utility.yul\":4364:4424   */\n    tag_504:\n        /* \"#utility.yul\":4443:4448   */\n      dup1\n        /* \"#utility.yul\":4433:4448   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4107:4454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4459:4805   */\n    tag_133:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4587:4589   */\n      0x40\n        /* \"#utility.yul\":4575:4584   */\n      dup4\n        /* \"#utility.yul\":4566:4573   */\n      dup6\n        /* \"#utility.yul\":4562:4585   */\n      sub\n        /* \"#utility.yul\":4558:4590   */\n      slt\n        /* \"#utility.yul\":4555:4607   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":4603:4604   */\n      0x00\n        /* \"#utility.yul\":4600:4601   */\n      dup1\n        /* \"#utility.yul\":4593:4605   */\n      revert\n        /* \"#utility.yul\":4555:4607   */\n    tag_506:\n        /* \"#utility.yul\":4626:4655   */\n      tag_507\n        /* \"#utility.yul\":4645:4654   */\n      dup4\n        /* \"#utility.yul\":4626:4655   */\n      tag_453\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4616:4655   */\n      swap2\n      pop\n        /* \"#utility.yul\":4705:4707   */\n      0x20\n        /* \"#utility.yul\":4694:4703   */\n      dup4\n        /* \"#utility.yul\":4690:4708   */\n      add\n        /* \"#utility.yul\":4677:4709   */\n      calldataload\n        /* \"#utility.yul\":4749:4755   */\n      0xffff\n        /* \"#utility.yul\":4742:4747   */\n      dup2\n        /* \"#utility.yul\":4738:4756   */\n      and\n        /* \"#utility.yul\":4731:4736   */\n      dup2\n        /* \"#utility.yul\":4728:4757   */\n      eq\n        /* \"#utility.yul\":4718:4775   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":4771:4772   */\n      0x00\n        /* \"#utility.yul\":4768:4769   */\n      dup1\n        /* \"#utility.yul\":4761:4773   */\n      revert\n        /* \"#utility.yul\":4810:4937   */\n    tag_353:\n        /* \"#utility.yul\":4871:4881   */\n      0x4e487b71\n        /* \"#utility.yul\":4866:4869   */\n      0xe0\n        /* \"#utility.yul\":4862:4882   */\n      shl\n        /* \"#utility.yul\":4859:4860   */\n      0x00\n        /* \"#utility.yul\":4852:4883   */\n      mstore\n        /* \"#utility.yul\":4902:4906   */\n      0x41\n        /* \"#utility.yul\":4899:4900   */\n      0x04\n        /* \"#utility.yul\":4892:4907   */\n      mstore\n        /* \"#utility.yul\":4926:4930   */\n      0x24\n        /* \"#utility.yul\":4923:4924   */\n      0x00\n        /* \"#utility.yul\":4916:4931   */\n      revert\n        /* \"#utility.yul\":4942:6080   */\n    tag_137:\n        /* \"#utility.yul\":5037:5043   */\n      0x00\n        /* \"#utility.yul\":5045:5051   */\n      dup1\n        /* \"#utility.yul\":5053:5059   */\n      0x00\n        /* \"#utility.yul\":5061:5067   */\n      dup1\n        /* \"#utility.yul\":5114:5117   */\n      0x80\n        /* \"#utility.yul\":5102:5111   */\n      dup6\n        /* \"#utility.yul\":5093:5100   */\n      dup8\n        /* \"#utility.yul\":5089:5112   */\n      sub\n        /* \"#utility.yul\":5085:5118   */\n      slt\n        /* \"#utility.yul\":5082:5135   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":5131:5132   */\n      0x00\n        /* \"#utility.yul\":5128:5129   */\n      dup1\n        /* \"#utility.yul\":5121:5133   */\n      revert\n        /* \"#utility.yul\":5082:5135   */\n    tag_511:\n        /* \"#utility.yul\":5154:5183   */\n      tag_512\n        /* \"#utility.yul\":5173:5182   */\n      dup6\n        /* \"#utility.yul\":5154:5183   */\n      tag_453\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":5144:5183   */\n      swap4\n      pop\n        /* \"#utility.yul\":5202:5240   */\n      tag_513\n        /* \"#utility.yul\":5236:5238   */\n      0x20\n        /* \"#utility.yul\":5225:5234   */\n      dup7\n        /* \"#utility.yul\":5221:5239   */\n      add\n        /* \"#utility.yul\":5202:5240   */\n      tag_453\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":5192:5240   */\n      swap3\n      pop\n        /* \"#utility.yul\":5287:5289   */\n      0x40\n        /* \"#utility.yul\":5276:5285   */\n      dup6\n        /* \"#utility.yul\":5272:5290   */\n      add\n        /* \"#utility.yul\":5259:5291   */\n      calldataload\n        /* \"#utility.yul\":5249:5291   */\n      swap2\n      pop\n        /* \"#utility.yul\":5342:5344   */\n      0x60\n        /* \"#utility.yul\":5331:5340   */\n      dup6\n        /* \"#utility.yul\":5327:5345   */\n      add\n        /* \"#utility.yul\":5314:5346   */\n      calldataload\n        /* \"#utility.yul\":5365:5383   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5406:5408   */\n      dup1\n        /* \"#utility.yul\":5398:5404   */\n      dup3\n        /* \"#utility.yul\":5395:5409   */\n      gt\n        /* \"#utility.yul\":5392:5426   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5419:5420   */\n      dup1\n        /* \"#utility.yul\":5412:5424   */\n      revert\n        /* \"#utility.yul\":5392:5426   */\n    tag_514:\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5449:5458   */\n      dup8\n        /* \"#utility.yul\":5445:5467   */\n      add\n        /* \"#utility.yul\":5435:5467   */\n      swap2\n      pop\n        /* \"#utility.yul\":5505:5512   */\n      dup8\n        /* \"#utility.yul\":5498:5502   */\n      0x1f\n        /* \"#utility.yul\":5494:5496   */\n      dup4\n        /* \"#utility.yul\":5490:5503   */\n      add\n        /* \"#utility.yul\":5486:5513   */\n      slt\n        /* \"#utility.yul\":5476:5531   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":5527:5528   */\n      0x00\n        /* \"#utility.yul\":5524:5525   */\n      dup1\n        /* \"#utility.yul\":5517:5529   */\n      revert\n        /* \"#utility.yul\":5476:5531   */\n    tag_515:\n        /* \"#utility.yul\":5563:5565   */\n      dup2\n        /* \"#utility.yul\":5550:5566   */\n      calldataload\n        /* \"#utility.yul\":5585:5587   */\n      dup2\n        /* \"#utility.yul\":5581:5583   */\n      dup2\n        /* \"#utility.yul\":5578:5588   */\n      gt\n        /* \"#utility.yul\":5575:5611   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":5591:5609   */\n      tag_517\n      tag_353\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5666:5668   */\n      0x40\n        /* \"#utility.yul\":5660:5669   */\n      mload\n        /* \"#utility.yul\":5634:5636   */\n      0x1f\n        /* \"#utility.yul\":5720:5733   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5716:5738   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5740:5742   */\n      0x3f\n        /* \"#utility.yul\":5712:5743   */\n      add\n        /* \"#utility.yul\":5708:5748   */\n      and\n        /* \"#utility.yul\":5696:5749   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5764:5782   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":5784:5806   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":5761:5807   */\n      or\n        /* \"#utility.yul\":5758:5830   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_519\n      tag_353\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":5850:5860   */\n      dup2\n        /* \"#utility.yul\":5846:5848   */\n      0x40\n        /* \"#utility.yul\":5839:5861   */\n      mstore\n        /* \"#utility.yul\":5885:5887   */\n      dup3\n        /* \"#utility.yul\":5877:5883   */\n      dup2\n        /* \"#utility.yul\":5870:5888   */\n      mstore\n        /* \"#utility.yul\":5925:5932   */\n      dup11\n        /* \"#utility.yul\":5920:5922   */\n      0x20\n        /* \"#utility.yul\":5915:5917   */\n      dup5\n        /* \"#utility.yul\":5911:5913   */\n      dup8\n        /* \"#utility.yul\":5907:5918   */\n      add\n        /* \"#utility.yul\":5903:5923   */\n      add\n        /* \"#utility.yul\":5900:5933   */\n      gt\n        /* \"#utility.yul\":5897:5950   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":5946:5947   */\n      0x00\n        /* \"#utility.yul\":5943:5944   */\n      dup1\n        /* \"#utility.yul\":5936:5948   */\n      revert\n        /* \"#utility.yul\":5897:5950   */\n    tag_520:\n        /* \"#utility.yul\":6002:6004   */\n      dup3\n        /* \"#utility.yul\":5997:5999   */\n      0x20\n        /* \"#utility.yul\":5993:5995   */\n      dup7\n        /* \"#utility.yul\":5989:6000   */\n      add\n        /* \"#utility.yul\":5984:5986   */\n      0x20\n        /* \"#utility.yul\":5976:5982   */\n      dup4\n        /* \"#utility.yul\":5972:5987   */\n      add\n        /* \"#utility.yul\":5959:6005   */\n      calldatacopy\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6042:6044   */\n      0x20\n        /* \"#utility.yul\":6037:6039   */\n      dup5\n        /* \"#utility.yul\":6029:6035   */\n      dup4\n        /* \"#utility.yul\":6025:6040   */\n      add\n        /* \"#utility.yul\":6021:6045   */\n      add\n        /* \"#utility.yul\":6014:6049   */\n      mstore\n        /* \"#utility.yul\":6068:6074   */\n      dup1\n        /* \"#utility.yul\":6058:6074   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4942:6080   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6085:6345   */\n    tag_151:\n        /* \"#utility.yul\":6153:6159   */\n      0x00\n        /* \"#utility.yul\":6161:6167   */\n      dup1\n        /* \"#utility.yul\":6214:6216   */\n      0x40\n        /* \"#utility.yul\":6202:6211   */\n      dup4\n        /* \"#utility.yul\":6193:6200   */\n      dup6\n        /* \"#utility.yul\":6189:6212   */\n      sub\n        /* \"#utility.yul\":6185:6217   */\n      slt\n        /* \"#utility.yul\":6182:6234   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":6230:6231   */\n      0x00\n        /* \"#utility.yul\":6227:6228   */\n      dup1\n        /* \"#utility.yul\":6220:6232   */\n      revert\n        /* \"#utility.yul\":6182:6234   */\n    tag_522:\n        /* \"#utility.yul\":6253:6282   */\n      tag_523\n        /* \"#utility.yul\":6272:6281   */\n      dup4\n        /* \"#utility.yul\":6253:6282   */\n      tag_453\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":6243:6282   */\n      swap2\n      pop\n        /* \"#utility.yul\":6301:6339   */\n      tag_497\n        /* \"#utility.yul\":6335:6337   */\n      0x20\n        /* \"#utility.yul\":6324:6333   */\n      dup5\n        /* \"#utility.yul\":6320:6338   */\n      add\n        /* \"#utility.yul\":6301:6339   */\n      tag_453\n      jump\t// in\n        /* \"#utility.yul\":6350:6730   */\n    tag_165:\n        /* \"#utility.yul\":6429:6430   */\n      0x01\n        /* \"#utility.yul\":6425:6437   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6472:6484   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6493:6554   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":6547:6551   */\n      0x7f\n        /* \"#utility.yul\":6539:6545   */\n      dup3\n        /* \"#utility.yul\":6535:6552   */\n      and\n        /* \"#utility.yul\":6525:6552   */\n      swap2\n      pop\n        /* \"#utility.yul\":6493:6554   */\n    tag_526:\n        /* \"#utility.yul\":6600:6602   */\n      0x20\n        /* \"#utility.yul\":6592:6598   */\n      dup3\n        /* \"#utility.yul\":6589:6603   */\n      lt\n        /* \"#utility.yul\":6569:6587   */\n      dup2\n        /* \"#utility.yul\":6566:6604   */\n      sub\n        /* \"#utility.yul\":6563:6724   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":6646:6656   */\n      0x4e487b71\n        /* \"#utility.yul\":6641:6644   */\n      0xe0\n        /* \"#utility.yul\":6637:6657   */\n      shl\n        /* \"#utility.yul\":6634:6635   */\n      0x00\n        /* \"#utility.yul\":6627:6658   */\n      mstore\n        /* \"#utility.yul\":6681:6685   */\n      0x22\n        /* \"#utility.yul\":6678:6679   */\n      0x04\n        /* \"#utility.yul\":6671:6686   */\n      mstore\n        /* \"#utility.yul\":6709:6713   */\n      0x24\n        /* \"#utility.yul\":6706:6707   */\n      0x00\n        /* \"#utility.yul\":6699:6714   */\n      revert\n        /* \"#utility.yul\":6563:6724   */\n    tag_527:\n      pop\n        /* \"#utility.yul\":6350:6730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6861:7406   */\n    tag_455:\n        /* \"#utility.yul\":6963:6965   */\n      0x1f\n        /* \"#utility.yul\":6958:6961   */\n      dup3\n        /* \"#utility.yul\":6955:6966   */\n      gt\n        /* \"#utility.yul\":6952:7400   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":6999:7000   */\n      0x00\n        /* \"#utility.yul\":7024:7029   */\n      dup2\n        /* \"#utility.yul\":7020:7022   */\n      dup2\n        /* \"#utility.yul\":7013:7030   */\n      mstore\n        /* \"#utility.yul\":7069:7073   */\n      0x20\n        /* \"#utility.yul\":7065:7067   */\n      dup2\n        /* \"#utility.yul\":7055:7074   */\n      keccak256\n        /* \"#utility.yul\":7139:7141   */\n      0x1f\n        /* \"#utility.yul\":7127:7137   */\n      dup6\n        /* \"#utility.yul\":7123:7142   */\n      add\n        /* \"#utility.yul\":7120:7121   */\n      0x05\n        /* \"#utility.yul\":7116:7143   */\n      shr\n        /* \"#utility.yul\":7110:7114   */\n      dup2\n        /* \"#utility.yul\":7106:7144   */\n      add\n        /* \"#utility.yul\":7175:7179   */\n      0x20\n        /* \"#utility.yul\":7163:7173   */\n      dup7\n        /* \"#utility.yul\":7160:7180   */\n      lt\n        /* \"#utility.yul\":7157:7204   */\n      iszero\n      tag_531\n      jumpi\n      pop\n        /* \"#utility.yul\":7198:7202   */\n      dup1\n        /* \"#utility.yul\":7157:7204   */\n    tag_531:\n        /* \"#utility.yul\":7253:7255   */\n      0x1f\n        /* \"#utility.yul\":7248:7251   */\n      dup6\n        /* \"#utility.yul\":7244:7256   */\n      add\n        /* \"#utility.yul\":7241:7242   */\n      0x05\n        /* \"#utility.yul\":7237:7257   */\n      shr\n        /* \"#utility.yul\":7231:7235   */\n      dup3\n        /* \"#utility.yul\":7227:7258   */\n      add\n        /* \"#utility.yul\":7217:7258   */\n      swap2\n      pop\n        /* \"#utility.yul\":7308:7390   */\n    tag_532:\n        /* \"#utility.yul\":7326:7328   */\n      dup2\n        /* \"#utility.yul\":7319:7324   */\n      dup2\n        /* \"#utility.yul\":7316:7329   */\n      lt\n        /* \"#utility.yul\":7308:7390   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":7371:7388   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":7352:7353   */\n      0x01\n        /* \"#utility.yul\":7341:7354   */\n      add\n        /* \"#utility.yul\":7308:7390   */\n      jump(tag_532)\n    tag_534:\n        /* \"#utility.yul\":7312:7315   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6861:7406   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7582:8788   */\n    tag_162:\n        /* \"#utility.yul\":7706:7724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7701:7704   */\n      dup4\n        /* \"#utility.yul\":7698:7725   */\n      gt\n        /* \"#utility.yul\":7695:7748   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":7728:7746   */\n      tag_538\n      tag_353\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7757:7851   */\n      tag_539\n        /* \"#utility.yul\":7847:7850   */\n      dup4\n        /* \"#utility.yul\":7807:7845   */\n      tag_540\n        /* \"#utility.yul\":7839:7843   */\n      dup4\n        /* \"#utility.yul\":7833:7844   */\n      sload\n        /* \"#utility.yul\":7807:7845   */\n      tag_165\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":7801:7805   */\n      dup4\n        /* \"#utility.yul\":7757:7851   */\n      tag_455\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7877:7878   */\n      0x00\n        /* \"#utility.yul\":7902:7904   */\n      0x1f\n        /* \"#utility.yul\":7897:7900   */\n      dup5\n        /* \"#utility.yul\":7894:7905   */\n      gt\n        /* \"#utility.yul\":7919:7920   */\n      0x01\n        /* \"#utility.yul\":7914:8530   */\n      dup2\n      eq\n      tag_542\n      jumpi\n        /* \"#utility.yul\":8574:8575   */\n      0x00\n        /* \"#utility.yul\":8591:8594   */\n      dup6\n        /* \"#utility.yul\":8588:8681   */\n      iszero\n      tag_543\n      jumpi\n      pop\n        /* \"#utility.yul\":8647:8666   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":8634:8667   */\n      calldataload\n        /* \"#utility.yul\":8588:8681   */\n    tag_543:\n      not(0x00)\n        /* \"#utility.yul\":7539:7540   */\n      0x03\n        /* \"#utility.yul\":7535:7546   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":7531:7555   */\n      shr\n        /* \"#utility.yul\":7527:7556   */\n      not\n        /* \"#utility.yul\":7517:7557   */\n      and\n        /* \"#utility.yul\":7563:7564   */\n      0x01\n        /* \"#utility.yul\":7559:7570   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":7514:7571   */\n      or\n        /* \"#utility.yul\":8694:8772   */\n      dup4\n      sstore\n        /* \"#utility.yul\":7887:8782   */\n      jump(tag_340)\n        /* \"#utility.yul\":7914:8530   */\n    tag_542:\n        /* \"#utility.yul\":6808:6809   */\n      0x00\n        /* \"#utility.yul\":6801:6815   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6845:6849   */\n      0x20\n        /* \"#utility.yul\":6832:6850   */\n      swap1\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7950:7967   */\n      dup7\n      and\n      swap1\n        /* \"#utility.yul\":8051:8060   */\n      dup4\n        /* \"#utility.yul\":8073:8302   */\n    tag_546:\n        /* \"#utility.yul\":8087:8094   */\n      dup3\n        /* \"#utility.yul\":8084:8085   */\n      dup2\n        /* \"#utility.yul\":8081:8095   */\n      lt\n        /* \"#utility.yul\":8073:8302   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":8176:8195   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":8163:8196   */\n      calldataload\n        /* \"#utility.yul\":8148:8197   */\n      dup3\n      sstore\n        /* \"#utility.yul\":8283:8287   */\n      0x20\n        /* \"#utility.yul\":8268:8288   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":8236:8237   */\n      0x01\n        /* \"#utility.yul\":8224:8238   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":8103:8115   */\n      add\n        /* \"#utility.yul\":8073:8302   */\n      jump(tag_546)\n    tag_548:\n        /* \"#utility.yul\":8077:8080   */\n      pop\n        /* \"#utility.yul\":8330:8333   */\n      dup7\n        /* \"#utility.yul\":8321:8328   */\n      dup3\n        /* \"#utility.yul\":8318:8334   */\n      lt\n        /* \"#utility.yul\":8315:8474   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":8454:8455   */\n      0x00\n        /* \"#utility.yul\":8450:8456   */\n      not\n        /* \"#utility.yul\":8444:8447   */\n      0xf8\n        /* \"#utility.yul\":8438:8441   */\n      dup9\n        /* \"#utility.yul\":8435:8436   */\n      0x03\n        /* \"#utility.yul\":8431:8442   */\n      shl\n        /* \"#utility.yul\":8427:8448   */\n      and\n        /* \"#utility.yul\":8423:8457   */\n      shr\n        /* \"#utility.yul\":8419:8458   */\n      not\n        /* \"#utility.yul\":8406:8415   */\n      dup5\n        /* \"#utility.yul\":8401:8404   */\n      dup8\n        /* \"#utility.yul\":8397:8416   */\n      add\n        /* \"#utility.yul\":8384:8417   */\n      calldataload\n        /* \"#utility.yul\":8380:8459   */\n      and\n        /* \"#utility.yul\":8372:8378   */\n      dup2\n        /* \"#utility.yul\":8365:8460   */\n      sstore\n        /* \"#utility.yul\":8315:8474   */\n    tag_549:\n      pop\n      pop\n        /* \"#utility.yul\":8517:8518   */\n      0x01\n        /* \"#utility.yul\":8511:8514   */\n      dup6\n        /* \"#utility.yul\":8508:8509   */\n      0x01\n        /* \"#utility.yul\":8504:8515   */\n      shl\n        /* \"#utility.yul\":8500:8519   */\n      add\n        /* \"#utility.yul\":8494:8498   */\n      dup4\n        /* \"#utility.yul\":8487:8520   */\n      sstore\n        /* \"#utility.yul\":7887:8782   */\n      pop\n      pop\n        /* \"#utility.yul\":7582:8788   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9452:9579   */\n    tag_216:\n        /* \"#utility.yul\":9513:9523   */\n      0x4e487b71\n        /* \"#utility.yul\":9508:9511   */\n      0xe0\n        /* \"#utility.yul\":9504:9524   */\n      shl\n        /* \"#utility.yul\":9501:9502   */\n      0x00\n        /* \"#utility.yul\":9494:9525   */\n      mstore\n        /* \"#utility.yul\":9544:9548   */\n      0x32\n        /* \"#utility.yul\":9541:9542   */\n      0x04\n        /* \"#utility.yul\":9534:9549   */\n      mstore\n        /* \"#utility.yul\":9568:9572   */\n      0x24\n        /* \"#utility.yul\":9565:9566   */\n      0x00\n        /* \"#utility.yul\":9558:9573   */\n      revert\n        /* \"#utility.yul\":9584:9711   */\n    tag_457:\n        /* \"#utility.yul\":9645:9655   */\n      0x4e487b71\n        /* \"#utility.yul\":9640:9643   */\n      0xe0\n        /* \"#utility.yul\":9636:9656   */\n      shl\n        /* \"#utility.yul\":9633:9634   */\n      0x00\n        /* \"#utility.yul\":9626:9657   */\n      mstore\n        /* \"#utility.yul\":9676:9680   */\n      0x11\n        /* \"#utility.yul\":9673:9674   */\n      0x04\n        /* \"#utility.yul\":9666:9681   */\n      mstore\n        /* \"#utility.yul\":9700:9704   */\n      0x24\n        /* \"#utility.yul\":9697:9698   */\n      0x00\n        /* \"#utility.yul\":9690:9705   */\n      revert\n        /* \"#utility.yul\":9716:9841   */\n    tag_238:\n        /* \"#utility.yul\":9781:9790   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9802:9812   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9799:9835   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":9815:9833   */\n      tag_155\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":10207:11060   */\n    tag_255:\n        /* \"#utility.yul\":10535:10538   */\n      0x00\n        /* \"#utility.yul\":10573:10579   */\n      dup5\n        /* \"#utility.yul\":10567:10580   */\n      mload\n        /* \"#utility.yul\":10589:10655   */\n      tag_559\n        /* \"#utility.yul\":10648:10654   */\n      dup2\n        /* \"#utility.yul\":10643:10646   */\n      dup5\n        /* \"#utility.yul\":10636:10640   */\n      0x20\n        /* \"#utility.yul\":10628:10634   */\n      dup10\n        /* \"#utility.yul\":10624:10641   */\n      add\n        /* \"#utility.yul\":10589:10655   */\n      tag_451\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10718:10731   */\n      dup5\n      mload\n        /* \"#utility.yul\":10677:10693   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":10740:10810   */\n      tag_560\n        /* \"#utility.yul\":10718:10731   */\n      dup2\n        /* \"#utility.yul\":10677:10693   */\n      dup4\n        /* \"#utility.yul\":10787:10791   */\n      0x20\n        /* \"#utility.yul\":10775:10792   */\n      dup10\n      add\n        /* \"#utility.yul\":10740:10810   */\n      tag_451\n      jump\t// in\n    tag_560:\n      shl(0xc8, 0x3f6d6f64656c3d)\n        /* \"#utility.yul\":10832:10852   */\n      swap2\n      add\n        /* \"#utility.yul\":10861:10885   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10910:10923   */\n      dup4\n      mload\n        /* \"#utility.yul\":10932:11010   */\n      tag_561\n        /* \"#utility.yul\":10910:10923   */\n      dup2\n        /* \"#utility.yul\":10997:10998   */\n      0x07\n        /* \"#utility.yul\":10986:10999   */\n      dup5\n      add\n        /* \"#utility.yul\":10979:10983   */\n      0x20\n        /* \"#utility.yul\":10967:10984   */\n      dup9\n      add\n        /* \"#utility.yul\":10932:11010   */\n      tag_451\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":11030:11050   */\n      add\n        /* \"#utility.yul\":11052:11053   */\n      0x07\n        /* \"#utility.yul\":11026:11054   */\n      add\n      swap6\n        /* \"#utility.yul\":10207:11060   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11065:11554   */\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11334:11349   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11316:11350   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11386:11401   */\n      dup5\n      and\n        /* \"#utility.yul\":11381:11383   */\n      0x20\n        /* \"#utility.yul\":11366:11384   */\n      dup3\n      add\n        /* \"#utility.yul\":11359:11402   */\n      mstore\n        /* \"#utility.yul\":11433:11435   */\n      0x40\n        /* \"#utility.yul\":11418:11436   */\n      dup2\n      add\n        /* \"#utility.yul\":11411:11445   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11481:11484   */\n      0x80\n        /* \"#utility.yul\":11476:11478   */\n      0x60\n        /* \"#utility.yul\":11461:11479   */\n      dup3\n      add\n        /* \"#utility.yul\":11454:11485   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11259:11263   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11502:11548   */\n      tag_563\n      swap1\n        /* \"#utility.yul\":11528:11547   */\n      dup4\n      add\n        /* \"#utility.yul\":11520:11526   */\n      dup5\n        /* \"#utility.yul\":11502:11548   */\n      tag_452\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11494:11548   */\n      swap7\n        /* \"#utility.yul\":11065:11554   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11559:11808   */\n    tag_329:\n        /* \"#utility.yul\":11628:11634   */\n      0x00\n        /* \"#utility.yul\":11681:11683   */\n      0x20\n        /* \"#utility.yul\":11669:11678   */\n      dup3\n        /* \"#utility.yul\":11660:11667   */\n      dup5\n        /* \"#utility.yul\":11656:11679   */\n      sub\n        /* \"#utility.yul\":11652:11684   */\n      slt\n        /* \"#utility.yul\":11649:11701   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":11697:11698   */\n      0x00\n        /* \"#utility.yul\":11694:11695   */\n      dup1\n        /* \"#utility.yul\":11687:11699   */\n      revert\n        /* \"#utility.yul\":11649:11701   */\n    tag_565:\n        /* \"#utility.yul\":11729:11738   */\n      dup2\n        /* \"#utility.yul\":11723:11739   */\n      mload\n        /* \"#utility.yul\":11748:11778   */\n      tag_463\n        /* \"#utility.yul\":11772:11777   */\n      dup2\n        /* \"#utility.yul\":11748:11778   */\n      tag_450\n      jump\t// in\n        /* \"#utility.yul\":12224:12352   */\n    tag_397:\n        /* \"#utility.yul\":12291:12300   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12312:12323   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12309:12346   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":12326:12344   */\n      tag_155\n      tag_457\n      jump\t// in\n        /* \"#utility.yul\":12357:12484   */\n    tag_406:\n        /* \"#utility.yul\":12418:12428   */\n      0x4e487b71\n        /* \"#utility.yul\":12413:12416   */\n      0xe0\n        /* \"#utility.yul\":12409:12429   */\n      shl\n        /* \"#utility.yul\":12406:12407   */\n      0x00\n        /* \"#utility.yul\":12399:12430   */\n      mstore\n        /* \"#utility.yul\":12449:12453   */\n      0x31\n        /* \"#utility.yul\":12446:12447   */\n      0x04\n        /* \"#utility.yul\":12439:12454   */\n      mstore\n        /* \"#utility.yul\":12473:12477   */\n      0x24\n        /* \"#utility.yul\":12470:12471   */\n      0x00\n        /* \"#utility.yul\":12463:12478   */\n      revert\n\n    auxdata: 0xa26469706673582212202b54f59d19e4ed464563c1fa1ad27c6ff50699038f8403257627157656480f5964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3643": {
									"entryPoint": null,
									"id": 3643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 113,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_2115": {
									"entryPoint": null,
									"id": 2115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:16"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:16"
															},
															"nodeType": "YulIf",
															"src": "220:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:16"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:16"
															},
															"nodeType": "YulIf",
															"src": "353:36:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:16"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:16"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:16"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:16"
															},
															"nodeType": "YulIf",
															"src": "536:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:16"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:16"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:16"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:16"
															},
															"nodeType": "YulIf",
															"src": "698:53:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:16"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:16"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:16"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:16"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:16"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:16",
																"statements": []
															},
															"src": "779:133:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:16"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:16"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:16",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:16",
														"type": ""
													}
												],
												"src": "146:840:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:16"
															},
															"nodeType": "YulIf",
															"src": "1119:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:16",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:16"
															},
															"nodeType": "YulIf",
															"src": "1256:34:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:16"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:16"
															},
															"nodeType": "YulIf",
															"src": "1429:36:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:16",
														"type": ""
													}
												],
												"src": "991:562:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:16"
															},
															"nodeType": "YulIf",
															"src": "1701:61:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:16"
															},
															"nodeType": "YulIf",
															"src": "1771:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:16",
														"type": ""
													}
												],
												"src": "1558:380:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:16",
														"type": ""
													}
												],
												"src": "1943:121:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:16",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:16",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:16"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:16"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:16",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:16"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:16"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:16"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:16"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:16"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:16"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:16"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:16"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:16",
																			"statements": []
																		},
																		"src": "2516:82:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:16"
															},
															"nodeType": "YulIf",
															"src": "2160:448:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:16",
														"type": ""
													}
												],
												"src": "2069:545:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:16",
														"type": ""
													}
												],
												"src": "2619:166:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:16"
															},
															"nodeType": "YulIf",
															"src": "2929:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:16"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:16",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:16",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:16"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:16"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:16"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:16"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:16"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:16"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:16",
																					"statements": []
																				},
																				"src": "3376:236:16"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:16",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:16"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:16"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:16"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:16"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:16"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:16"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:16"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:16"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:16"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:16",
														"type": ""
													}
												],
												"src": "2790:1352:16"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526001600c5534801562000015575f80fd5b5060405162001dcd38038062001dcd8339810160408190526200003891620001db565b81816001620000488382620002cd565b506002620000578282620002cd565b506200006891505f90503362000071565b50505062000395565b5f828152602081815260408083206001600160a01b038516845290915281205460ff1662000114575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620000cb3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600162000117565b505f5b92915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000141575f80fd5b81516001600160401b03808211156200015e576200015e6200011d565b604051601f8301601f19908116603f011681019082821181831017156200018957620001896200011d565b81604052838152602092508683858801011115620001a5575f80fd5b5f91505b83821015620001c85785820183015181830184015290820190620001a9565b5f93810190920192909252949350505050565b5f8060408385031215620001ed575f80fd5b82516001600160401b038082111562000204575f80fd5b620002128683870162000131565b9350602085015191508082111562000228575f80fd5b50620002378582860162000131565b9150509250929050565b600181811c908216806200025657607f821691505b6020821081036200027557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002c8575f81815260208120601f850160051c81016020861015620002a35750805b601f850160051c820191505b81811015620002c457828155600101620002af565b5050505b505050565b81516001600160401b03811115620002e957620002e96200011d565b6200030181620002fa845462000241565b846200027b565b602080601f83116001811462000337575f84156200031f5750858301515b5f19600386901b1c1916600185901b178555620002c4565b5f85815260208120601f198616915b82811015620003675788860151825594840194600190910190840162000346565b50858210156200038557878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b611a2a80620003a35f395ff3fe608060405234801561000f575f80fd5b50600436106101c6575f3560e01c806342842e0e116100fe578063a217fddf1161009e578063c87b56dd1161006e578063c87b56dd146103ff578063d2401fa414610412578063d547741f1461041a578063e985e9c51461042d575f80fd5b8063a217fddf146103bf578063a22cb465146103c6578063ad0be4bd146103d9578063b88d4fde146103ec575f80fd5b80636352211e116100d95780636352211e1461037e57806370a082311461039157806391d14854146103a457806395d89b41146103b7575f80fd5b806342842e0e146103315780634f6ccce7146103445780636313bd3014610357575f80fd5b80631b21c00a116101695780632a0acc6a116101445780632a0acc6a146102d15780632f2ff15d146102f85780632f745c591461030b57806336568abe1461031e575f80fd5b80631b21c00a1461027957806323b872dd1461029c578063248a9ca3146102af575f80fd5b8063081812fc116101a4578063081812fc1461021c578063095ea7b3146102475780630e1a6a9c1461025a57806318160ddd14610271575f80fd5b806301ffc9a7146101ca57806302fe5305146101f257806306fdde0314610207575b5f80fd5b6101dd6101d8366004611469565b610440565b60405190151581526020015b60405180910390f35b61020561020036600461148b565b610450565b005b61020f61046d565b6040516101e99190611544565b61022f61022a366004611556565b6104fd565b6040516001600160a01b0390911681526020016101e9565b610205610255366004611588565b610524565b610263600c5481565b6040519081526020016101e9565b600954610263565b610263610287366004611556565b5f908152600d602052604090205461ffff1690565b6102056102aa3660046115b0565b610533565b6102636102bd366004611556565b5f9081526020819052604090206001015490565b6102637fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6102056103063660046115e9565b6105bb565b610263610319366004611588565b6105df565b61020561032c3660046115e9565b610642565b61020561033f3660046115b0565b61067a565b610263610352366004611556565b610694565b6102637fb4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe281565b61022f61038c366004611556565b6106e9565b61026361039f366004611613565b6106f3565b6101dd6103b23660046115e9565b610738565b61020f610760565b6102635f81565b6102056103d436600461162c565b61076f565b6102056103e7366004611665565b61077a565b6102056103fa3660046116a9565b61083b565b61020f61040d366004611556565b610852565b61020f6108b2565b6102056104283660046115e9565b61093e565b6101dd61043b36600461177e565b610962565b5f61044a8261098f565b92915050565b5f61045a816109b3565b600b61046783858361182b565b50505050565b60606001805461047c906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546104a8906117a6565b80156104f35780601f106104ca576101008083540402835291602001916104f3565b820191905f5260205f20905b8154815290600101906020018083116104d657829003601f168201915b5050505050905090565b5f610507826109c0565b505f828152600560205260409020546001600160a01b031661044a565b61052f8282336109f8565b5050565b6001600160a01b03821661056157604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61056d838333610a05565b9050836001600160a01b0316816001600160a01b031614610467576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610558565b5f828152602081905260409020600101546105d5816109b3565b6104678383610ad8565b5f6105e9836106f3565b821061061a5760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610558565b506001600160a01b03919091165f908152600760209081526040808320938352929052205490565b6001600160a01b038116331461066b5760405163334bd91960e11b815260040160405180910390fd5b6106758282610b67565b505050565b61067583838360405180602001604052805f81525061083b565b5f61069e60095490565b82106106c65760405163295f44f760e21b81525f600482015260248101839052604401610558565b600982815481106106d9576106d96118e6565b905f5260205f2001549050919050565b5f61044a826109c0565b5f6001600160a01b03821661071d576040516322718ad960e21b81525f6004820152602401610558565b506001600160a01b03165f9081526004602052604090205490565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606002805461047c906117a6565b61052f338383610bd0565b7fb4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe26107a4816109b3565b600c80545f818152600d60205260408120805461ffff191661ffff8716179055825491926001929091906107d990849061190e565b909155506107e990508482610c6e565b6040805161ffff85168152602081018390526001600160a01b0386168183015290517ffcbd9479bb682193b3eb060a58134eda82cf0a141904328119cfb9c15e6e171e9181900360600190a150505050565b610846848484610533565b61046784848484610ccf565b606061085d826109c0565b50610866610df5565b61086f83610e04565b5f848152600d602052604090205461088a9061ffff16610e04565b60405160200161089c93929190611921565b6040516020818303038152906040529050919050565b600b80546108bf906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546108eb906117a6565b80156109365780601f1061090d57610100808354040283529160200191610936565b820191905f5260205f20905b81548152906001019060200180831161091957829003601f168201915b505050505081565b5f82815260208190526040902060010154610958816109b3565b6104678383610b67565b6001600160a01b039182165f90815260066020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b0319821663780e9d6360e01b148061044a575061044a82610e94565b6109bd8133610ed3565b50565b5f818152600360205260408120546001600160a01b03168061044a57604051637e27328960e01b815260048101849052602401610558565b6106758383836001610f0c565b5f80610a12858585611010565b90506001600160a01b038116610a6e57610a6984600980545f838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b610a91565b846001600160a01b0316816001600160a01b031614610a9157610a918185611102565b6001600160a01b038516610aad57610aa88461118f565b610ad0565b846001600160a01b0316816001600160a01b031614610ad057610ad08585611236565b949350505050565b5f610ae38383610738565b610b60575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055610b183390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161044a565b505f61044a565b5f610b728383610738565b15610b60575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161044a565b6001600160a01b038216610c0257604051630b61174360e31b81526001600160a01b0383166004820152602401610558565b6001600160a01b038381165f81815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038216610c9757604051633250574960e11b81525f6004820152602401610558565b5f610ca383835f610a05565b90506001600160a01b03811615610675576040516339e3563760e11b81525f6004820152602401610558565b6001600160a01b0383163b1561046757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d11903390889087908790600401611976565b6020604051808303815f875af1925050508015610d4b575060408051601f3d908101601f19168201909252610d48918101906119b2565b60015b610db2573d808015610d78576040519150601f19603f3d011682016040523d82523d5f602084013e610d7d565b606091505b5080515f03610daa57604051633250574960e11b81526001600160a01b0385166004820152602401610558565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610dee57604051633250574960e11b81526001600160a01b0385166004820152602401610558565b5050505050565b6060600b805461047c906117a6565b60605f610e1083611284565b60010190505f8167ffffffffffffffff811115610e2f57610e2f611695565b6040519080825280601f01601f191660200182016040528015610e59576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e6357509392505050565b5f6001600160e01b031982166380ac58cd60e01b1480610ec457506001600160e01b03198216635b5e139f60e01b145b8061044a575061044a8261135b565b610edd8282610738565b61052f5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610558565b8080610f2057506001600160a01b03821615155b15610fe1575f610f2f846109c0565b90506001600160a01b03831615801590610f5b5750826001600160a01b0316816001600160a01b031614155b8015610f6e5750610f6c8184610962565b155b15610f975760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610558565b8115610fdf5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260056020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f828152600360205260408120546001600160a01b039081169083161561103c5761103c81848661138f565b6001600160a01b03811615611076576110575f855f80610f0c565b6001600160a01b0381165f90815260046020526040902080545f190190555b6001600160a01b038516156110a4576001600160a01b0385165f908152600460205260409020805460010190555b5f8481526003602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f61110c836106f3565b5f8381526008602052604090205490915080821461115d576001600160a01b0384165f9081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b505f9182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b6009545f906111a0906001906119cd565b5f838152600a6020526040812054600980549394509092849081106111c7576111c76118e6565b905f5260205f200154905080600983815481106111e6576111e66118e6565b5f918252602080832090910192909255828152600a9091526040808220849055858252812055600980548061121d5761121d6119e0565b600190038181905f5260205f20015f9055905550505050565b5f6001611242846106f3565b61124c91906119cd565b6001600160a01b039093165f908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112c25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112ee576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061130c57662386f26fc10000830492506010015b6305f5e1008310611324576305f5e100830492506008015b612710831061133857612710830492506004015b6064831061134a576064830492506002015b600a831061044a5760010192915050565b5f6001600160e01b03198216637965db0b60e01b148061044a57506301ffc9a760e01b6001600160e01b031983161461044a565b61139a8383836113f3565b610675576001600160a01b0383166113c857604051637e27328960e01b815260048101829052602401610558565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610558565b5f6001600160a01b03831615801590610ad05750826001600160a01b0316846001600160a01b0316148061142c575061142c8484610962565b80610ad05750505f908152600560205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146109bd575f80fd5b5f60208284031215611479575f80fd5b813561148481611454565b9392505050565b5f806020838503121561149c575f80fd5b823567ffffffffffffffff808211156114b3575f80fd5b818501915085601f8301126114c6575f80fd5b8135818111156114d4575f80fd5b8660208285010111156114e5575f80fd5b60209290920196919550909350505050565b5f5b838110156115115781810151838201526020016114f9565b50505f910152565b5f81518084526115308160208601602086016114f7565b601f01601f19169290920160200192915050565b602081525f6114846020830184611519565b5f60208284031215611566575f80fd5b5035919050565b80356001600160a01b0381168114611583575f80fd5b919050565b5f8060408385031215611599575f80fd5b6115a28361156d565b946020939093013593505050565b5f805f606084860312156115c2575f80fd5b6115cb8461156d565b92506115d96020850161156d565b9150604084013590509250925092565b5f80604083850312156115fa575f80fd5b8235915061160a6020840161156d565b90509250929050565b5f60208284031215611623575f80fd5b6114848261156d565b5f806040838503121561163d575f80fd5b6116468361156d565b91506020830135801515811461165a575f80fd5b809150509250929050565b5f8060408385031215611676575f80fd5b61167f8361156d565b9150602083013561ffff8116811461165a575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156116bc575f80fd5b6116c58561156d565b93506116d36020860161156d565b925060408501359150606085013567ffffffffffffffff808211156116f6575f80fd5b818701915087601f830112611709575f80fd5b81358181111561171b5761171b611695565b604051601f8201601f19908116603f0116810190838211818310171561174357611743611695565b816040528281528a602084870101111561175b575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f806040838503121561178f575f80fd5b6117988361156d565b915061160a6020840161156d565b600181811c908216806117ba57607f821691505b6020821081036117d857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610675575f81815260208120601f850160051c810160208610156118045750805b601f850160051c820191505b8181101561182357828155600101611810565b505050505050565b67ffffffffffffffff83111561184357611843611695565b6118578361185183546117a6565b836117de565b5f601f841160018114611888575f85156118715750838201355b5f19600387901b1c1916600186901b178355610dee565b5f83815260209020601f19861690835b828110156118b85786850135825560209485019460019092019101611898565b50868210156118d4575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561044a5761044a6118fa565b5f84516119328184602089016114f7565b8451908301906119468183602089016114f7565b663f6d6f64656c3d60c81b910190815283516119698160078401602088016114f7565b0160070195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906119a890830184611519565b9695505050505050565b5f602082840312156119c2575f80fd5b815161148481611454565b8181038181111561044a5761044a6118fa565b634e487b7160e01b5f52603160045260245ffdfea26469706673582212202b54f59d19e4ed464563c1fa1ad27c6ff50699038f8403257627157656480f5964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DCD CODESIZE SUB DUP1 PUSH3 0x1DCD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 PUSH3 0x48 DUP4 DUP3 PUSH3 0x2CD JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x57 DUP3 DUP3 PUSH3 0x2CD JUMP JUMPDEST POP PUSH3 0x68 SWAP2 POP PUSH0 SWAP1 POP CALLER PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x395 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x114 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xCB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x117 JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x141 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x15E JUMPI PUSH3 0x15E PUSH3 0x11D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x189 JUMPI PUSH3 0x189 PUSH3 0x11D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1C8 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A9 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x212 DUP7 DUP4 DUP8 ADD PUSH3 0x131 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x228 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x237 DUP6 DUP3 DUP7 ADD PUSH3 0x131 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x256 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x275 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2C8 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2A3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2C4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2AF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E9 PUSH3 0x11D JUMP JUMPDEST PUSH3 0x301 DUP2 PUSH3 0x2FA DUP5 SLOAD PUSH3 0x241 JUMP JUMPDEST DUP5 PUSH3 0x27B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x337 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x31F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2C4 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x367 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x346 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x385 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A2A DUP1 PUSH3 0x3A3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xD2401FA4 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xAD0BE4BD EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6313BD30 EQ PUSH2 0x357 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B21C00A GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x2A0ACC6A GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B21C00A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xE1A6A9C EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x263 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x263 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x263 PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x263 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x205 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x263 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x263 PUSH32 0xB4CE9F8311D4FDC9A4F41ED950639C1D793F5D19CD88A87B9ECEC171F485AFE2 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x760 JUMP JUMPDEST PUSH2 0x263 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH2 0x20F PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH0 PUSH2 0x44A DUP3 PUSH2 0x98F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x45A DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0xB PUSH2 0x467 DUP4 DUP6 DUP4 PUSH2 0x182B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A8 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x507 DUP3 PUSH2 0x9C0 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44A JUMP JUMPDEST PUSH2 0x52F DUP3 DUP3 CALLER PUSH2 0x9F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x56D DUP4 DUP4 CALLER PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5D5 DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x467 DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST PUSH0 PUSH2 0x5E9 DUP4 PUSH2 0x6F3 JUMP JUMPDEST DUP3 LT PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x675 DUP3 DUP3 PUSH2 0xB67 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x675 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x83B JUMP JUMPDEST PUSH0 PUSH2 0x69E PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6D9 JUMPI PUSH2 0x6D9 PUSH2 0x18E6 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44A DUP3 PUSH2 0x9C0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x52F CALLER DUP4 DUP4 PUSH2 0xBD0 JUMP JUMPDEST PUSH32 0xB4CE9F8311D4FDC9A4F41ED950639C1D793F5D19CD88A87B9ECEC171F485AFE2 PUSH2 0x7A4 DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP8 AND OR SWAP1 SSTORE DUP3 SLOAD SWAP2 SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7D9 SWAP1 DUP5 SWAP1 PUSH2 0x190E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7E9 SWAP1 POP DUP5 DUP3 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xFCBD9479BB682193B3EB060A58134EDA82CF0A141904328119CFB9C15E6E171E SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x846 DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH2 0x467 DUP5 DUP5 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85D DUP3 PUSH2 0x9C0 JUMP JUMPDEST POP PUSH2 0x866 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x86F DUP4 PUSH2 0xE04 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x88A SWAP1 PUSH2 0xFFFF AND PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x89C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8EB SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x936 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x936 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x919 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x958 DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x467 DUP4 DUP4 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x44A JUMPI POP PUSH2 0x44A DUP3 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x9BD DUP2 CALLER PUSH2 0xED3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x675 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF0C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA12 DUP6 DUP6 DUP6 PUSH2 0x1010 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA6E JUMPI PUSH2 0xA69 DUP5 PUSH1 0x9 DUP1 SLOAD PUSH0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA91 JUMPI PUSH2 0xA91 DUP2 DUP6 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xAAD JUMPI PUSH2 0xAA8 DUP5 PUSH2 0x118F JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAD0 JUMPI PUSH2 0xAD0 DUP6 DUP6 PUSH2 0x1236 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAE3 DUP4 DUP4 PUSH2 0x738 JUMP JUMPDEST PUSH2 0xB60 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB18 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x44A JUMP JUMPDEST POP PUSH0 PUSH2 0x44A JUMP JUMPDEST PUSH0 PUSH2 0xB72 DUP4 DUP4 PUSH2 0x738 JUMP JUMPDEST ISZERO PUSH2 0xB60 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 PUSH2 0xCA3 DUP4 DUP4 PUSH0 PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD11 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD4B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD48 SWAP2 DUP2 ADD SWAP1 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDB2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE10 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2F PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE59 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xE63 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xEC4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x44A JUMPI POP PUSH2 0x44A DUP3 PUSH2 0x135B JUMP JUMPDEST PUSH2 0xEDD DUP3 DUP3 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF20 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFE1 JUMPI PUSH0 PUSH2 0xF2F DUP5 PUSH2 0x9C0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF5B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF6E JUMPI POP PUSH2 0xF6C DUP2 DUP5 PUSH2 0x962 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFDF JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x103C JUMPI PUSH2 0x103C DUP2 DUP5 DUP7 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1057 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x110C DUP4 PUSH2 0x6F3 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x115D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x11A0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x11C7 JUMPI PUSH2 0x11C7 PUSH2 0x18E6 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11E6 JUMPI PUSH2 0x11E6 PUSH2 0x18E6 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x121D JUMPI PUSH2 0x121D PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1242 DUP5 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x12C2 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x12EE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x130C JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1324 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1338 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x134A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x44A JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x44A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x44A JUMP JUMPDEST PUSH2 0x139A DUP4 DUP4 DUP4 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x675 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAD0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x142C JUMPI POP PUSH2 0x142C DUP5 DUP5 PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH2 0xAD0 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9BD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1484 DUP2 PUSH2 0x1454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x14D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x14E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1511 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14F9 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1530 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1484 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1519 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1566 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1583 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1599 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15A2 DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15CB DUP5 PUSH2 0x156D JUMP JUMPDEST SWAP3 POP PUSH2 0x15D9 PUSH1 0x20 DUP6 ADD PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x160A PUSH1 0x20 DUP5 ADD PUSH2 0x156D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1623 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1484 DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x163D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1646 DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1676 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x167F DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16C5 DUP6 PUSH2 0x156D JUMP JUMPDEST SWAP4 POP PUSH2 0x16D3 PUSH1 0x20 DUP7 ADD PUSH2 0x156D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1709 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x171B JUMPI PUSH2 0x171B PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1743 PUSH2 0x1695 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x175B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1798 DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH2 0x160A PUSH1 0x20 DUP5 ADD PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x675 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1804 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1823 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1843 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x1857 DUP4 PUSH2 0x1851 DUP4 SLOAD PUSH2 0x17A6 JUMP JUMPDEST DUP4 PUSH2 0x17DE JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1888 JUMPI PUSH0 DUP6 ISZERO PUSH2 0x1871 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xDEE JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18B8 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1898 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x18D4 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x44A PUSH2 0x18FA JUMP JUMPDEST PUSH0 DUP5 MLOAD PUSH2 0x1932 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x14F7 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1946 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x14F7 JUMP JUMPDEST PUSH7 0x3F6D6F64656C3D PUSH1 0xC8 SHL SWAP2 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1969 DUP2 PUSH1 0x7 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x14F7 JUMP JUMPDEST ADD PUSH1 0x7 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x19A8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1519 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1484 DUP2 PUSH2 0x1454 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x44A PUSH2 0x18FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B SLOAD CREATE2 SWAP14 NOT 0xE4 0xED CHAINID GASLIMIT PUSH4 0xC1FA1AD2 PUSH29 0x6FF50699038F8403257627157656480F5964736F6C6343000814003300 ",
							"sourceMap": "249:1806:15:-:0;;;594:1;564:31;;656:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;741:5;748:7;1447:5:3;:13;741:5:15;1447::3;:13;:::i;:::-;-1:-1:-1;1470:7:3;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;767:44:15::1;::::0;-1:-1:-1;2232:4:0::1;::::0;-1:-1:-1;735:10:9;767::15::1;:44::i;:::-;;656:162:::0;;249:1806;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:9;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:16:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:16;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:16;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:16;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:16;;;3992:26;3943:89;-1:-1:-1;;2747:1:16;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:16;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:16;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:16;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:16:o;:::-;249:1806:15;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_3611": {
									"entryPoint": null,
									"id": 3611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEP_3616": {
									"entryPoint": null,
									"id": 3616,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addTokenToAllTokensEnumeration_1909": {
									"entryPoint": null,
									"id": 1909,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1889": {
									"entryPoint": 4662,
									"id": 1889,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1327": {
									"entryPoint": 2552,
									"id": 1327,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1393": {
									"entryPoint": 3852,
									"id": 1393,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3652": {
									"entryPoint": 3573,
									"id": 3652,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_975": {
									"entryPoint": 5007,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1523": {
									"entryPoint": 3279,
									"id": 1523,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 3795,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2483,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getApproved_902": {
									"entryPoint": null,
									"id": 902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 2776,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isAuthorized_938": {
									"entryPoint": 5107,
									"id": 938,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1131": {
									"entryPoint": 3182,
									"id": 1131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2115": {
									"entryPoint": null,
									"id": 2115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_889": {
									"entryPoint": null,
									"id": 889,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_2017": {
									"entryPoint": 4495,
									"id": 2017,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1969": {
									"entryPoint": 4354,
									"id": 1969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1459": {
									"entryPoint": 2496,
									"id": 1459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2919,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1430": {
									"entryPoint": 3024,
									"id": 1430,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1081": {
									"entryPoint": 4112,
									"id": 1081,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_1858": {
									"entryPoint": 2565,
									"id": 1858,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_736": {
									"entryPoint": 1316,
									"id": 736,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_644": {
									"entryPoint": 1779,
									"id": 644,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_753": {
									"entryPoint": 1277,
									"id": 753,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1467,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1848,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_786": {
									"entryPoint": 2402,
									"id": 786,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3298": {
									"entryPoint": 4740,
									"id": 3298,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3744": {
									"entryPoint": 1914,
									"id": 3744,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_666": {
									"entryPoint": 1133,
									"id": 666,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_657": {
									"entryPoint": 1769,
									"id": 657,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1602,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2366,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_850": {
									"entryPoint": 1658,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_876": {
									"entryPoint": 2107,
									"id": 876,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_769": {
									"entryPoint": 1903,
									"id": 769,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_3665": {
									"entryPoint": 1104,
									"id": 3665,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1723": {
									"entryPoint": 2447,
									"id": 1723,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2411": {
									"entryPoint": null,
									"id": 2411,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3760": {
									"entryPoint": 1088,
									"id": 3760,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_616": {
									"entryPoint": 3732,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 4955,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_675": {
									"entryPoint": 1888,
									"id": 675,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2201": {
									"entryPoint": 3588,
									"id": 2201,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1789": {
									"entryPoint": 1684,
									"id": 1789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenModel_3677": {
									"entryPoint": null,
									"id": 3677,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1752": {
									"entryPoint": 1503,
									"id": 1752,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenTraker__3621": {
									"entryPoint": null,
									"id": 3621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_3708": {
									"entryPoint": 2130,
									"id": 3708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI__3618": {
									"entryPoint": 2226,
									"id": 3618,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1762": {
									"entryPoint": null,
									"id": 1762,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_832": {
									"entryPoint": 1331,
									"id": 832,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_8523dcddbe7af61b3782a4dca64823f2db585c4295a0c7e9d9daa0c13620fc2c_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6433,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6518,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint256_t_address__to_t_uint16_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12486:16",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:16",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:16",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:16"
															},
															"nodeType": "YulIf",
															"src": "68:71:16"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:16",
														"type": ""
													}
												],
												"src": "14:131:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:16"
															},
															"nodeType": "YulIf",
															"src": "229:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:16",
														"type": ""
													}
												],
												"src": "150:245:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:16",
														"type": ""
													}
												],
												"src": "400:187:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "682:502:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "728:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "737:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "740:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "730:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "730:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "703:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "712:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "699:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:32:16"
															},
															"nodeType": "YulIf",
															"src": "692:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "753:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "780:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:23:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "757:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "799:28:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "809:18:16",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "803:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "854:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "863:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "856:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "856:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "856:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "850:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "839:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:14:16"
															},
															"nodeType": "YulIf",
															"src": "836:34:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "879:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:16"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "904:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:22:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "883:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "959:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "968:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "961:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "961:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "938:2:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "942:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "934:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "949:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:35:16"
															},
															"nodeType": "YulIf",
															"src": "920:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "984:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1011:2:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "998:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:16:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "988:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1041:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1053:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1043:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1043:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1043:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1029:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1026:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1026:14:16"
															},
															"nodeType": "YulIf",
															"src": "1023:34:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1107:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1119:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1109:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1109:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1109:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1080:2:16"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1084:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1076:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:15:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1093:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1072:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1098:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1069:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:37:16"
															},
															"nodeType": "YulIf",
															"src": "1066:57:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1132:21:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1146:2:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:11:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1132:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:16:16",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1172:6:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "640:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "651:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "663:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "671:6:16",
														"type": ""
													}
												],
												"src": "592:592:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1255:184:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1265:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1274:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1269:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1334:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1359:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1364:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1355:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1355:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1378:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1383:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1374:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1374:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1368:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1368:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1348:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1348:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1295:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1298:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1292:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1306:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1308:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1317:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1320:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1313:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1313:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1308:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1288:3:16",
																"statements": []
															},
															"src": "1284:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1417:3:16"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1422:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1413:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1413:16:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1406:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:27:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1406:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1233:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1238:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1243:6:16",
														"type": ""
													}
												],
												"src": "1189:250:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1494:221:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1504:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1524:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1518:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1508:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1546:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1551:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:19:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1539:19:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1606:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1613:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1602:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1602:16:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1624:3:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1629:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1620:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:14:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1636:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1567:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:76:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1567:76:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1652:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1667:3:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1680:6:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1688:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1676:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1676:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1697:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1693:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1693:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1672:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1672:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:39:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1659:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1659:50:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1471:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1478:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1486:3:16",
														"type": ""
													}
												],
												"src": "1444:271:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1841:99:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1858:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1851:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:21:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1851:21:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1881:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1907:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1919:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1930:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1915:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1915:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1889:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:45:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1881:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1810:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1821:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1832:4:16",
														"type": ""
													}
												],
												"src": "1720:220:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2015:110:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2063:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2063:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2063:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:32:16"
															},
															"nodeType": "YulIf",
															"src": "2025:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2086:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2109:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2096:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1981:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1992:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2004:6:16",
														"type": ""
													}
												],
												"src": "1945:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:102:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2241:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2264:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2249:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2241:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2283:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2298:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2314:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2319:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2310:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2310:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2306:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2276:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2200:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2211:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2222:4:16",
														"type": ""
													}
												],
												"src": "2130:203:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2387:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2397:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2419:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2406:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2397:5:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2489:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2498:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2501:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2491:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2491:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2491:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2459:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2474:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2479:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2470:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2470:11:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2483:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2466:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2466:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2455:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2455:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2445:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2438:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:50:16"
															},
															"nodeType": "YulIf",
															"src": "2435:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2366:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2377:5:16",
														"type": ""
													}
												],
												"src": "2338:173:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:167:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2649:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2658:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2661:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2651:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2651:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2651:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2624:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2633:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2620:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2620:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2645:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:32:16"
															},
															"nodeType": "YulIf",
															"src": "2613:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2674:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2703:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2684:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2722:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2749:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2760:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2745:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2732:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:32:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2561:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2572:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2584:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2592:6:16",
														"type": ""
													}
												],
												"src": "2516:254:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2876:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2886:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2898:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2886:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2928:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2939:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2921:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2921:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2845:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2856:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2867:4:16",
														"type": ""
													}
												],
												"src": "2775:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:224:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3107:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3116:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3119:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3109:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:32:16"
															},
															"nodeType": "YulIf",
															"src": "3071:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3132:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3161:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3142:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3180:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3190:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3237:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3275:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3247:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:16",
														"type": ""
													}
												],
												"src": "2957:328:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3360:110:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3406:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3415:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3418:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3408:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3408:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3408:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3381:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3390:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3373:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:32:16"
															},
															"nodeType": "YulIf",
															"src": "3370:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3431:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3454:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3441:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3441:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3337:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3349:6:16",
														"type": ""
													}
												],
												"src": "3290:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:76:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3586:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3598:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3586:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3628:9:16"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3639:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:25:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3621:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3545:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3556:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3567:4:16",
														"type": ""
													}
												],
												"src": "3475:177:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3744:167:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3790:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3799:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3802:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3792:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3792:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3792:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:32:16"
															},
															"nodeType": "YulIf",
															"src": "3754:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3815:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3838:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3825:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:23:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3857:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3890:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3901:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3886:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3886:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3867:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3857:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3702:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3713:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3725:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3733:6:16",
														"type": ""
													}
												],
												"src": "3657:254:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3986:116:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4032:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4041:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4044:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4034:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4034:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4034:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4007:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:32:16"
															},
															"nodeType": "YulIf",
															"src": "3996:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4057:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4086:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4067:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4057:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3952:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3963:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3975:6:16",
														"type": ""
													}
												],
												"src": "3916:186:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4191:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4212:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4221:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4208:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4233:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:32:16"
															},
															"nodeType": "YulIf",
															"src": "4201:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4262:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4291:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4272:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4310:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4351:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4323:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4314:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4408:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4417:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4420:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4410:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4410:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4410:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4377:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4398:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4391:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4391:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4384:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4384:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4374:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4374:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4367:40:16"
															},
															"nodeType": "YulIf",
															"src": "4364:60:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4433:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4443:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4433:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4149:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4160:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4172:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4180:6:16",
														"type": ""
													}
												],
												"src": "4107:347:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4545:260:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4591:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4600:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4603:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4593:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4593:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4593:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4566:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:32:16"
															},
															"nodeType": "YulIf",
															"src": "4555:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4616:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4645:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4626:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4626:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4616:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4664:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4694:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4705:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4677:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4668:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4759:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4768:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4771:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4761:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4761:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4731:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4742:5:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4749:6:16",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4738:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4738:18:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4728:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4728:29:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4721:37:16"
															},
															"nodeType": "YulIf",
															"src": "4718:57:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4784:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4794:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:16",
														"type": ""
													}
												],
												"src": "4459:346:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4842:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4866:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4871:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4852:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4892:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4892:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4923:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4926:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4810:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5072:1008:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5119:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5128:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5131:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5121:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5121:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5121:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5093:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5102:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5089:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5089:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5085:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5085:33:16"
															},
															"nodeType": "YulIf",
															"src": "5082:53:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5144:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5173:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5154:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5192:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5225:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5236:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5221:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5221:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5202:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5202:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5192:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5249:42:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5276:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5287:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5272:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5272:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5259:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5259:32:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5249:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5300:46:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5331:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5342:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5327:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5327:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5314:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:32:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5304:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5355:28:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5365:18:16",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5359:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5410:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5419:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5422:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5412:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5412:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5398:6:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5406:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5395:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:14:16"
															},
															"nodeType": "YulIf",
															"src": "5392:34:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5435:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5449:9:16"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5460:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5445:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:22:16"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5439:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5515:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5524:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5527:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5517:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5517:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5517:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5494:2:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5498:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5490:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5490:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5505:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5486:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5479:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:35:16"
															},
															"nodeType": "YulIf",
															"src": "5476:55:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5563:2:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5550:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:16:16"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5544:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5589:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5591:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5591:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5591:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:16"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5585:2:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5578:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:10:16"
															},
															"nodeType": "YulIf",
															"src": "5575:36:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5620:17:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5634:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "5630:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5630:7:16"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5624:2:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5646:23:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5660:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:16"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5650:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5678:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5700:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "5724:2:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5728:4:16",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5720:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5720:13:16"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "5735:2:16"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "5716:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5716:22:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5740:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5712:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5712:31:16"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5745:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5708:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5708:40:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5696:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:53:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5682:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5808:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5767:10:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5779:2:16"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5764:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5764:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5787:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5799:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5784:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5761:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:46:16"
															},
															"nodeType": "YulIf",
															"src": "5758:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5846:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5850:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5839:22:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5839:22:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5877:6:16"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5885:2:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:18:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:18:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5934:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5943:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5946:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5936:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5936:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5936:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5911:2:16"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5915:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5907:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5907:11:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5903:20:16"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5925:7:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5900:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:33:16"
															},
															"nodeType": "YulIf",
															"src": "5897:53:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5976:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5984:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5972:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5993:2:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5997:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5989:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5989:11:16"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6002:2:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5959:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:46:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5959:46:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "6029:6:16"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6037:2:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6025:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6025:15:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6042:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6021:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6021:24:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6014:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6014:35:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6014:35:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:16:16",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6068:6:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5014:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5025:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5037:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5045:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5053:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5061:6:16",
														"type": ""
													}
												],
												"src": "4942:1138:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6172:173:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6218:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6227:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6230:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6220:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6220:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6220:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6193:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6202:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6189:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6189:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6214:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6185:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:32:16"
															},
															"nodeType": "YulIf",
															"src": "6182:52:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6243:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6272:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6253:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6291:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6324:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6335:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6320:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6320:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6301:18:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6291:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6130:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6141:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6153:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6161:6:16",
														"type": ""
													}
												],
												"src": "6085:260:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6405:325:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6415:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6429:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6432:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6425:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6415:6:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6446:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6476:4:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6482:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6472:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6472:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6450:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6523:31:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6525:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6539:6:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6547:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6535:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6535:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6525:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6503:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6496:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6496:26:16"
															},
															"nodeType": "YulIf",
															"src": "6493:61:16"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6613:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6634:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6641:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6646:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6637:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6637:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6627:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6627:31:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6627:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6678:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6681:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6671:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6671:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6671:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6706:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6709:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6699:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6699:15:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6699:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6569:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6592:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6600:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6589:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6589:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6566:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:38:16"
															},
															"nodeType": "YulIf",
															"src": "6563:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6385:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6394:6:16",
														"type": ""
													}
												],
												"src": "6350:380:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6791:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6808:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6811:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:14:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6801:14:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6824:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6842:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6845:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "6832:9:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6824:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6774:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6782:4:16",
														"type": ""
													}
												],
												"src": "6735:121:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6942:464:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6975:425:16",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6989:11:16",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6999:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6993:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7020:2:16"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "7024:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7013:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7013:17:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7013:17:16"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7043:31:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7065:2:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7069:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7055:19:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "7047:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7087:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "7110:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7120:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "7127:10:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7139:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7123:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7123:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "7116:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7116:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7106:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7106:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "7091:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7181:23:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7183:19:16",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "7198:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "7183:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "7163:10:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7175:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7160:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7160:20:16"
																		},
																		"nodeType": "YulIf",
																		"src": "7157:47:16"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7217:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "7231:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7241:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "7248:3:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7253:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7244:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7244:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "7237:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7237:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7227:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7227:31:16"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "7221:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7271:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "7284:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "7275:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7369:21:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "7378:5:16"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "7385:2:16"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "7371:6:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7371:17:16"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7371:17:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "7319:5:16"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7326:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "7316:2:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7316:13:16"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "7330:26:16",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7332:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "7345:5:16"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7352:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7341:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7341:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "7332:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "7312:3:16",
																			"statements": []
																		},
																		"src": "7308:82:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6958:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6955:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6955:11:16"
															},
															"nodeType": "YulIf",
															"src": "6952:448:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6914:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6921:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6926:10:16",
														"type": ""
													}
												],
												"src": "6861:545:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7496:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7506:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "7521:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7539:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "7542:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "7535:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7535:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7552:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "7548:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7548:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7531:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7531:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7527:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7527:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7517:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7517:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7563:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7566:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7559:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7559:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7514:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7514:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7506:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7473:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7479:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7487:4:16",
														"type": ""
													}
												],
												"src": "7411:166:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7685:1103:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7726:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7728:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7728:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7728:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7701:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7706:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7698:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7698:27:16"
															},
															"nodeType": "YulIf",
															"src": "7695:53:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7801:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "7839:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "7833:5:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7833:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "7807:25:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7807:38:16"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7847:3:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7757:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:94:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7757:94:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7860:18:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7877:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7864:9:16",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7921:609:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7935:32:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "7954:3:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7963:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7959:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7959:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7950:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7950:17:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7939:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7980:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8024:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7994:29:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7994:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7984:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8042:18:16",
																				"value": {
																					"name": "srcOffset",
																					"nodeType": "YulIdentifier",
																					"src": "8051:9:16"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8046:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8130:172:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8155:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8180:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8185:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8176:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8176:19:16"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nodeType": "YulIdentifier",
																											"src": "8163:12:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8163:33:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8148:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8148:49:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8148:49:16"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8214:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8228:6:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8236:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8224:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8224:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8214:6:16"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8255:33:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8272:9:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8283:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8268:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8268:20:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8255:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8084:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8087:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8081:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8081:14:16"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "8096:21:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8098:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8107:1:16"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8110:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8103:3:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8103:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8098:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8077:3:16",
																					"statements": []
																				},
																				"src": "8073:229:16"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8347:127:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8372:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "src",
																																"nodeType": "YulIdentifier",
																																"src": "8401:3:16"
																															},
																															{
																																"name": "srcOffset",
																																"nodeType": "YulIdentifier",
																																"src": "8406:9:16"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nodeType": "YulIdentifier",
																															"src": "8397:3:16"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "8397:19:16"
																													}
																												],
																												"functionName": {
																													"name": "calldataload",
																													"nodeType": "YulIdentifier",
																													"src": "8384:12:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8384:33:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "8435:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "len",
																																				"nodeType": "YulIdentifier",
																																				"src": "8438:3:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "8431:3:16"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "8431:11:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8444:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "8427:3:16"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "8427:21:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "8454:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "8450:3:16"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "8450:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "8423:3:16"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "8423:34:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "8419:3:16"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8419:39:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "8380:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8380:79:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8365:6:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8365:95:16"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8365:95:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8321:7:16"
																						},
																						{
																							"name": "len",
																							"nodeType": "YulIdentifier",
																							"src": "8330:3:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8318:2:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8318:16:16"
																				},
																				"nodeType": "YulIf",
																				"src": "8315:159:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8494:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8508:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "len",
																											"nodeType": "YulIdentifier",
																											"src": "8511:3:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "8504:3:16"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8504:11:16"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8517:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8500:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8500:19:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8487:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8487:33:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8487:33:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7914:616:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8547:235:16",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8561:14:16",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8574:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8565:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8607:74:16",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8625:42:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8651:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8647:3:16"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8647:19:16"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nodeType": "YulIdentifier",
																									"src": "8634:12:16"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8634:33:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8625:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "len",
																					"nodeType": "YulIdentifier",
																					"src": "8591:3:16"
																				},
																				"nodeType": "YulIf",
																				"src": "8588:93:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8701:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8760:5:16"
																								},
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "8767:3:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8707:52:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8707:64:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8694:6:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8694:78:16"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8694:78:16"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8539:243:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7897:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7902:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7894:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:11:16"
															},
															"nodeType": "YulSwitch",
															"src": "7887:895:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7665:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7671:3:16",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7676:3:16",
														"type": ""
													}
												],
												"src": "7582:1206:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8950:218:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8960:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8972:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8983:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8960:4:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8995:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9013:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9018:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9009:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9009:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9022:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9005:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8999:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9040:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9055:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9063:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9051:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9051:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9033:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9033:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9033:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9087:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9098:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9083:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9083:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9103:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9076:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9076:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9076:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9130:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9141:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9126:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9126:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9150:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9158:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9146:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9119:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9119:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9119:43:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8903:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8914:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8922:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8930:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8941:4:16",
														"type": ""
													}
												],
												"src": "8793:375:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9302:145:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9312:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9324:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9335:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9320:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9320:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9312:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9354:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9369:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9385:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9390:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9381:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9381:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9394:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9377:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9377:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9365:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9365:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9347:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9418:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9429:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9414:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9414:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9434:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9407:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9263:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9274:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9282:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9293:4:16",
														"type": ""
													}
												],
												"src": "9173:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9484:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9501:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9513:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9504:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9504:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9494:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9494:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9494:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9541:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9544:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9534:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9534:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9534:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9565:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9568:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9558:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9558:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9452:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9616:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9633:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9640:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9645:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9636:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9626:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9626:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9626:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9673:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9666:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9666:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9666:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9697:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9700:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9690:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9690:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9690:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9584:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9764:77:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9774:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9785:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9788:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9781:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9774:3:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9813:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9815:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9815:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9815:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9805:1:16"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9808:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9802:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9802:10:16"
															},
															"nodeType": "YulIf",
															"src": "9799:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9747:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9750:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9756:3:16",
														"type": ""
													}
												],
												"src": "9716:125:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10001:201:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10011:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10023:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10034:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10019:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10011:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10053:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10068:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10076:6:16",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10064:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10064:19:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10046:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10046:38:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10046:38:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10115:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10100:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10120:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10093:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10158:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10143:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10143:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10167:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10183:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10188:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10179:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10179:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10192:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10175:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10175:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10163:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10136:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:60:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10136:60:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint256_t_address__to_t_uint16_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9954:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9965:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9973:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9981:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9992:4:16",
														"type": ""
													}
												],
												"src": "9846:356:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10543:517:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10553:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10573:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10567:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10567:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10557:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10628:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10636:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10624:17:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10643:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10648:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10589:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10589:66:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10589:66:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10664:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10681:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10686:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10677:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10677:16:16"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "10668:5:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10702:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10724:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10718:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10718:13:16"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "10706:8:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10779:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10787:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:17:16"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "10794:5:16"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "10801:8:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10740:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10740:70:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10740:70:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10819:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "10836:5:16"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "10843:8:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:20:16"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "10823:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_2",
																		"nodeType": "YulIdentifier",
																		"src": "10868:5:16"
																	},
																	{
																		"hexValue": "3f6d6f64656c3d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10875:9:16",
																		"type": "",
																		"value": "?model="
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:24:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10861:24:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10894:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10916:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10910:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10910:13:16"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "10898:8:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "10971:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10979:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10967:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10967:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end_2",
																				"nodeType": "YulIdentifier",
																				"src": "10990:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10997:1:16",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10986:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10986:13:16"
																	},
																	{
																		"name": "length_2",
																		"nodeType": "YulIdentifier",
																		"src": "11001:8:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10932:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10932:78:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10932:78:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11019:35:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_2",
																				"nodeType": "YulIdentifier",
																				"src": "11034:5:16"
																			},
																			{
																				"name": "length_2",
																				"nodeType": "YulIdentifier",
																				"src": "11041:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11030:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11030:20:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11052:1:16",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11026:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11026:28:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11019:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_8523dcddbe7af61b3782a4dca64823f2db585c4295a0c7e9d9daa0c13620fc2c_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10503:3:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10508:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10516:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10524:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10535:3:16",
														"type": ""
													}
												],
												"src": "10207:853:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11268:286:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11278:29:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11296:3:16",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11301:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11292:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11292:11:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11305:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11288:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11288:19:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11282:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11323:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11338:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11346:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11334:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11334:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11316:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11316:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11316:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11370:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11381:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11366:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11366:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11390:6:16"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11398:2:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11386:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11386:15:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11359:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11359:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11359:43:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11422:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11433:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11418:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11418:18:16"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11438:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11411:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11411:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11411:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11465:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11476:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11461:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11461:18:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11481:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11454:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11454:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11454:31:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11494:54:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11520:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11532:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11543:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11528:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11528:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "11502:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11502:46:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11494:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11213:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11224:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11232:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11240:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11248:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11259:4:16",
														"type": ""
													}
												],
												"src": "11065:489:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11639:169:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11685:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11694:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11697:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11687:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11687:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11687:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11660:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11669:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11656:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11656:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11681:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11652:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11652:32:16"
															},
															"nodeType": "YulIf",
															"src": "11649:52:16"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11710:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11729:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11723:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11723:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11714:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11772:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "11748:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11748:30:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11787:15:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11797:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11787:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11605:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11616:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11628:6:16",
														"type": ""
													}
												],
												"src": "11559:249:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11845:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11862:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11869:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11874:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11855:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11855:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11855:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11902:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11905:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11895:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11895:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11895:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11926:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11929:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11919:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11919:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11813:127:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12074:145:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12084:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12096:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12107:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12092:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12084:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12126:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12141:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12157:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12162:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12153:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12153:11:16"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12166:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12149:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12149:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12137:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12137:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12119:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12119:51:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12119:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12190:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12201:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12186:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12186:18:16"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12206:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12179:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12179:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12035:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12046:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12054:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12065:4:16",
														"type": ""
													}
												],
												"src": "11945:274:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12273:79:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12283:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12295:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12298:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12291:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12291:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12283:4:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12324:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12326:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12326:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12326:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12315:4:16"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12321:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12312:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12312:11:16"
															},
															"nodeType": "YulIf",
															"src": "12309:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12255:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12258:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12264:4:16",
														"type": ""
													}
												],
												"src": "12224:128:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12389:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12406:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12413:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12418:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12409:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12409:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12399:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12399:31:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12399:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12446:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12449:4:16",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12439:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12439:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12439:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12470:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12473:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12463:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12463:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12463:15:16"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "12357:127:16"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint16_t_uint256_t_address__to_t_uint16_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_8523dcddbe7af61b3782a4dca64823f2db585c4295a0c7e9d9daa0c13620fc2c_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        mstore(end_2, \"?model=\")\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(end_2, 7), length_2)\n        end := add(add(end_2, length_2), 7)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101c6575f3560e01c806342842e0e116100fe578063a217fddf1161009e578063c87b56dd1161006e578063c87b56dd146103ff578063d2401fa414610412578063d547741f1461041a578063e985e9c51461042d575f80fd5b8063a217fddf146103bf578063a22cb465146103c6578063ad0be4bd146103d9578063b88d4fde146103ec575f80fd5b80636352211e116100d95780636352211e1461037e57806370a082311461039157806391d14854146103a457806395d89b41146103b7575f80fd5b806342842e0e146103315780634f6ccce7146103445780636313bd3014610357575f80fd5b80631b21c00a116101695780632a0acc6a116101445780632a0acc6a146102d15780632f2ff15d146102f85780632f745c591461030b57806336568abe1461031e575f80fd5b80631b21c00a1461027957806323b872dd1461029c578063248a9ca3146102af575f80fd5b8063081812fc116101a4578063081812fc1461021c578063095ea7b3146102475780630e1a6a9c1461025a57806318160ddd14610271575f80fd5b806301ffc9a7146101ca57806302fe5305146101f257806306fdde0314610207575b5f80fd5b6101dd6101d8366004611469565b610440565b60405190151581526020015b60405180910390f35b61020561020036600461148b565b610450565b005b61020f61046d565b6040516101e99190611544565b61022f61022a366004611556565b6104fd565b6040516001600160a01b0390911681526020016101e9565b610205610255366004611588565b610524565b610263600c5481565b6040519081526020016101e9565b600954610263565b610263610287366004611556565b5f908152600d602052604090205461ffff1690565b6102056102aa3660046115b0565b610533565b6102636102bd366004611556565b5f9081526020819052604090206001015490565b6102637fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6102056103063660046115e9565b6105bb565b610263610319366004611588565b6105df565b61020561032c3660046115e9565b610642565b61020561033f3660046115b0565b61067a565b610263610352366004611556565b610694565b6102637fb4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe281565b61022f61038c366004611556565b6106e9565b61026361039f366004611613565b6106f3565b6101dd6103b23660046115e9565b610738565b61020f610760565b6102635f81565b6102056103d436600461162c565b61076f565b6102056103e7366004611665565b61077a565b6102056103fa3660046116a9565b61083b565b61020f61040d366004611556565b610852565b61020f6108b2565b6102056104283660046115e9565b61093e565b6101dd61043b36600461177e565b610962565b5f61044a8261098f565b92915050565b5f61045a816109b3565b600b61046783858361182b565b50505050565b60606001805461047c906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546104a8906117a6565b80156104f35780601f106104ca576101008083540402835291602001916104f3565b820191905f5260205f20905b8154815290600101906020018083116104d657829003601f168201915b5050505050905090565b5f610507826109c0565b505f828152600560205260409020546001600160a01b031661044a565b61052f8282336109f8565b5050565b6001600160a01b03821661056157604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61056d838333610a05565b9050836001600160a01b0316816001600160a01b031614610467576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610558565b5f828152602081905260409020600101546105d5816109b3565b6104678383610ad8565b5f6105e9836106f3565b821061061a5760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610558565b506001600160a01b03919091165f908152600760209081526040808320938352929052205490565b6001600160a01b038116331461066b5760405163334bd91960e11b815260040160405180910390fd5b6106758282610b67565b505050565b61067583838360405180602001604052805f81525061083b565b5f61069e60095490565b82106106c65760405163295f44f760e21b81525f600482015260248101839052604401610558565b600982815481106106d9576106d96118e6565b905f5260205f2001549050919050565b5f61044a826109c0565b5f6001600160a01b03821661071d576040516322718ad960e21b81525f6004820152602401610558565b506001600160a01b03165f9081526004602052604090205490565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606002805461047c906117a6565b61052f338383610bd0565b7fb4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe26107a4816109b3565b600c80545f818152600d60205260408120805461ffff191661ffff8716179055825491926001929091906107d990849061190e565b909155506107e990508482610c6e565b6040805161ffff85168152602081018390526001600160a01b0386168183015290517ffcbd9479bb682193b3eb060a58134eda82cf0a141904328119cfb9c15e6e171e9181900360600190a150505050565b610846848484610533565b61046784848484610ccf565b606061085d826109c0565b50610866610df5565b61086f83610e04565b5f848152600d602052604090205461088a9061ffff16610e04565b60405160200161089c93929190611921565b6040516020818303038152906040529050919050565b600b80546108bf906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546108eb906117a6565b80156109365780601f1061090d57610100808354040283529160200191610936565b820191905f5260205f20905b81548152906001019060200180831161091957829003601f168201915b505050505081565b5f82815260208190526040902060010154610958816109b3565b6104678383610b67565b6001600160a01b039182165f90815260066020908152604080832093909416825291909152205460ff1690565b5f6001600160e01b0319821663780e9d6360e01b148061044a575061044a82610e94565b6109bd8133610ed3565b50565b5f818152600360205260408120546001600160a01b03168061044a57604051637e27328960e01b815260048101849052602401610558565b6106758383836001610f0c565b5f80610a12858585611010565b90506001600160a01b038116610a6e57610a6984600980545f838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b610a91565b846001600160a01b0316816001600160a01b031614610a9157610a918185611102565b6001600160a01b038516610aad57610aa88461118f565b610ad0565b846001600160a01b0316816001600160a01b031614610ad057610ad08585611236565b949350505050565b5f610ae38383610738565b610b60575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055610b183390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161044a565b505f61044a565b5f610b728383610738565b15610b60575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161044a565b6001600160a01b038216610c0257604051630b61174360e31b81526001600160a01b0383166004820152602401610558565b6001600160a01b038381165f81815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038216610c9757604051633250574960e11b81525f6004820152602401610558565b5f610ca383835f610a05565b90506001600160a01b03811615610675576040516339e3563760e11b81525f6004820152602401610558565b6001600160a01b0383163b1561046757604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610d11903390889087908790600401611976565b6020604051808303815f875af1925050508015610d4b575060408051601f3d908101601f19168201909252610d48918101906119b2565b60015b610db2573d808015610d78576040519150601f19603f3d011682016040523d82523d5f602084013e610d7d565b606091505b5080515f03610daa57604051633250574960e11b81526001600160a01b0385166004820152602401610558565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610dee57604051633250574960e11b81526001600160a01b0385166004820152602401610558565b5050505050565b6060600b805461047c906117a6565b60605f610e1083611284565b60010190505f8167ffffffffffffffff811115610e2f57610e2f611695565b6040519080825280601f01601f191660200182016040528015610e59576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e6357509392505050565b5f6001600160e01b031982166380ac58cd60e01b1480610ec457506001600160e01b03198216635b5e139f60e01b145b8061044a575061044a8261135b565b610edd8282610738565b61052f5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610558565b8080610f2057506001600160a01b03821615155b15610fe1575f610f2f846109c0565b90506001600160a01b03831615801590610f5b5750826001600160a01b0316816001600160a01b031614155b8015610f6e5750610f6c8184610962565b155b15610f975760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610558565b8115610fdf5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260056020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f828152600360205260408120546001600160a01b039081169083161561103c5761103c81848661138f565b6001600160a01b03811615611076576110575f855f80610f0c565b6001600160a01b0381165f90815260046020526040902080545f190190555b6001600160a01b038516156110a4576001600160a01b0385165f908152600460205260409020805460010190555b5f8481526003602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f61110c836106f3565b5f8381526008602052604090205490915080821461115d576001600160a01b0384165f9081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b505f9182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b6009545f906111a0906001906119cd565b5f838152600a6020526040812054600980549394509092849081106111c7576111c76118e6565b905f5260205f200154905080600983815481106111e6576111e66118e6565b5f918252602080832090910192909255828152600a9091526040808220849055858252812055600980548061121d5761121d6119e0565b600190038181905f5260205f20015f9055905550505050565b5f6001611242846106f3565b61124c91906119cd565b6001600160a01b039093165f908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112c25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112ee576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061130c57662386f26fc10000830492506010015b6305f5e1008310611324576305f5e100830492506008015b612710831061133857612710830492506004015b6064831061134a576064830492506002015b600a831061044a5760010192915050565b5f6001600160e01b03198216637965db0b60e01b148061044a57506301ffc9a760e01b6001600160e01b031983161461044a565b61139a8383836113f3565b610675576001600160a01b0383166113c857604051637e27328960e01b815260048101829052602401610558565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610558565b5f6001600160a01b03831615801590610ad05750826001600160a01b0316846001600160a01b0316148061142c575061142c8484610962565b80610ad05750505f908152600560205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146109bd575f80fd5b5f60208284031215611479575f80fd5b813561148481611454565b9392505050565b5f806020838503121561149c575f80fd5b823567ffffffffffffffff808211156114b3575f80fd5b818501915085601f8301126114c6575f80fd5b8135818111156114d4575f80fd5b8660208285010111156114e5575f80fd5b60209290920196919550909350505050565b5f5b838110156115115781810151838201526020016114f9565b50505f910152565b5f81518084526115308160208601602086016114f7565b601f01601f19169290920160200192915050565b602081525f6114846020830184611519565b5f60208284031215611566575f80fd5b5035919050565b80356001600160a01b0381168114611583575f80fd5b919050565b5f8060408385031215611599575f80fd5b6115a28361156d565b946020939093013593505050565b5f805f606084860312156115c2575f80fd5b6115cb8461156d565b92506115d96020850161156d565b9150604084013590509250925092565b5f80604083850312156115fa575f80fd5b8235915061160a6020840161156d565b90509250929050565b5f60208284031215611623575f80fd5b6114848261156d565b5f806040838503121561163d575f80fd5b6116468361156d565b91506020830135801515811461165a575f80fd5b809150509250929050565b5f8060408385031215611676575f80fd5b61167f8361156d565b9150602083013561ffff8116811461165a575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f80608085870312156116bc575f80fd5b6116c58561156d565b93506116d36020860161156d565b925060408501359150606085013567ffffffffffffffff808211156116f6575f80fd5b818701915087601f830112611709575f80fd5b81358181111561171b5761171b611695565b604051601f8201601f19908116603f0116810190838211818310171561174357611743611695565b816040528281528a602084870101111561175b575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f806040838503121561178f575f80fd5b6117988361156d565b915061160a6020840161156d565b600181811c908216806117ba57607f821691505b6020821081036117d857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610675575f81815260208120601f850160051c810160208610156118045750805b601f850160051c820191505b8181101561182357828155600101611810565b505050505050565b67ffffffffffffffff83111561184357611843611695565b6118578361185183546117a6565b836117de565b5f601f841160018114611888575f85156118715750838201355b5f19600387901b1c1916600186901b178355610dee565b5f83815260209020601f19861690835b828110156118b85786850135825560209485019460019092019101611898565b50868210156118d4575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561044a5761044a6118fa565b5f84516119328184602089016114f7565b8451908301906119468183602089016114f7565b663f6d6f64656c3d60c81b910190815283516119698160078401602088016114f7565b0160070195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906119a890830184611519565b9695505050505050565b5f602082840312156119c2575f80fd5b815161148481611454565b8181038181111561044a5761044a6118fa565b634e487b7160e01b5f52603160045260245ffdfea26469706673582212202b54f59d19e4ed464563c1fa1ad27c6ff50699038f8403257627157656480f5964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0xD2401FA4 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x42D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xAD0BE4BD EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6313BD30 EQ PUSH2 0x357 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B21C00A GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x2A0ACC6A GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1B21C00A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xE1A6A9C EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x263 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x263 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2AA CALLDATASIZE PUSH1 0x4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x263 PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x263 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x205 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x67A JUMP JUMPDEST PUSH2 0x263 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH2 0x263 PUSH32 0xB4CE9F8311D4FDC9A4F41ED950639C1D793F5D19CD88A87B9ECEC171F485AFE2 DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x760 JUMP JUMPDEST PUSH2 0x263 PUSH0 DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH2 0x20F PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x93E JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST PUSH0 PUSH2 0x44A DUP3 PUSH2 0x98F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x45A DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0xB PUSH2 0x467 DUP4 DUP6 DUP4 PUSH2 0x182B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A8 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x507 DUP3 PUSH2 0x9C0 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x44A JUMP JUMPDEST PUSH2 0x52F DUP3 DUP3 CALLER PUSH2 0x9F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x56D DUP4 DUP4 CALLER PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5D5 DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x467 DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST PUSH0 PUSH2 0x5E9 DUP4 PUSH2 0x6F3 JUMP JUMPDEST DUP3 LT PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x675 DUP3 DUP3 PUSH2 0xB67 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x675 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x83B JUMP JUMPDEST PUSH0 PUSH2 0x69E PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x9 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6D9 JUMPI PUSH2 0x6D9 PUSH2 0x18E6 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44A DUP3 PUSH2 0x9C0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71D JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x52F CALLER DUP4 DUP4 PUSH2 0xBD0 JUMP JUMPDEST PUSH32 0xB4CE9F8311D4FDC9A4F41ED950639C1D793F5D19CD88A87B9ECEC171F485AFE2 PUSH2 0x7A4 DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP8 AND OR SWAP1 SSTORE DUP3 SLOAD SWAP2 SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7D9 SWAP1 DUP5 SWAP1 PUSH2 0x190E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7E9 SWAP1 POP DUP5 DUP3 PUSH2 0xC6E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xFCBD9479BB682193B3EB060A58134EDA82CF0A141904328119CFB9C15E6E171E SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x846 DUP5 DUP5 DUP5 PUSH2 0x533 JUMP JUMPDEST PUSH2 0x467 DUP5 DUP5 DUP5 DUP5 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85D DUP3 PUSH2 0x9C0 JUMP JUMPDEST POP PUSH2 0x866 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x86F DUP4 PUSH2 0xE04 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x88A SWAP1 PUSH2 0xFFFF AND PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x89C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8EB SWAP1 PUSH2 0x17A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x936 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x936 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x919 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x958 DUP2 PUSH2 0x9B3 JUMP JUMPDEST PUSH2 0x467 DUP4 DUP4 PUSH2 0xB67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x44A JUMPI POP PUSH2 0x44A DUP3 PUSH2 0xE94 JUMP JUMPDEST PUSH2 0x9BD DUP2 CALLER PUSH2 0xED3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x675 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF0C JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA12 DUP6 DUP6 DUP6 PUSH2 0x1010 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA6E JUMPI PUSH2 0xA69 DUP5 PUSH1 0x9 DUP1 SLOAD PUSH0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA91 JUMPI PUSH2 0xA91 DUP2 DUP6 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xAAD JUMPI PUSH2 0xAA8 DUP5 PUSH2 0x118F JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAD0 JUMPI PUSH2 0xAD0 DUP6 DUP6 PUSH2 0x1236 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAE3 DUP4 DUP4 PUSH2 0x738 JUMP JUMPDEST PUSH2 0xB60 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB18 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x44A JUMP JUMPDEST POP PUSH0 PUSH2 0x44A JUMP JUMPDEST PUSH0 PUSH2 0xB72 DUP4 DUP4 PUSH2 0x738 JUMP JUMPDEST ISZERO PUSH2 0xB60 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC02 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 PUSH2 0xCA3 DUP4 DUP4 PUSH0 PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xD11 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD4B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD48 SWAP2 DUP2 ADD SWAP1 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDB2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE10 DUP4 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2F PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE59 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xE63 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xEC4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x44A JUMPI POP PUSH2 0x44A DUP3 PUSH2 0x135B JUMP JUMPDEST PUSH2 0xEDD DUP3 DUP3 PUSH2 0x738 JUMP JUMPDEST PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF20 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFE1 JUMPI PUSH0 PUSH2 0xF2F DUP5 PUSH2 0x9C0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF5B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF6E JUMPI POP PUSH2 0xF6C DUP2 DUP5 PUSH2 0x962 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFDF JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x103C JUMPI PUSH2 0x103C DUP2 DUP5 DUP7 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1057 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xF0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x110C DUP4 PUSH2 0x6F3 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x115D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x7 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH0 SWAP1 PUSH2 0x11A0 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x9 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x11C7 JUMPI PUSH2 0x11C7 PUSH2 0x18E6 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x9 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x11E6 JUMPI PUSH2 0x11E6 PUSH2 0x18E6 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x9 DUP1 SLOAD DUP1 PUSH2 0x121D JUMPI PUSH2 0x121D PUSH2 0x19E0 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1242 DUP5 PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x12C2 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x12EE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x130C JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1324 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1338 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x134A JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x44A JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x44A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x44A JUMP JUMPDEST PUSH2 0x139A DUP4 DUP4 DUP4 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x675 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x558 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xAD0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x142C JUMPI POP PUSH2 0x142C DUP5 DUP5 PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH2 0xAD0 JUMPI POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9BD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1484 DUP2 PUSH2 0x1454 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x14D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x14E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1511 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14F9 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1530 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1484 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1519 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1566 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1583 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1599 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15A2 DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15CB DUP5 PUSH2 0x156D JUMP JUMPDEST SWAP3 POP PUSH2 0x15D9 PUSH1 0x20 DUP6 ADD PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x160A PUSH1 0x20 DUP5 ADD PUSH2 0x156D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1623 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1484 DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x163D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1646 DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1676 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x167F DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x165A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16C5 DUP6 PUSH2 0x156D JUMP JUMPDEST SWAP4 POP PUSH2 0x16D3 PUSH1 0x20 DUP7 ADD PUSH2 0x156D JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1709 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x171B JUMPI PUSH2 0x171B PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1743 JUMPI PUSH2 0x1743 PUSH2 0x1695 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x175B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1798 DUP4 PUSH2 0x156D JUMP JUMPDEST SWAP2 POP PUSH2 0x160A PUSH1 0x20 DUP5 ADD PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x675 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1804 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1823 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1843 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x1857 DUP4 PUSH2 0x1851 DUP4 SLOAD PUSH2 0x17A6 JUMP JUMPDEST DUP4 PUSH2 0x17DE JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1888 JUMPI PUSH0 DUP6 ISZERO PUSH2 0x1871 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xDEE JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x18B8 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1898 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x18D4 JUMPI PUSH0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x44A PUSH2 0x18FA JUMP JUMPDEST PUSH0 DUP5 MLOAD PUSH2 0x1932 DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x14F7 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1946 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x14F7 JUMP JUMPDEST PUSH7 0x3F6D6F64656C3D PUSH1 0xC8 SHL SWAP2 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1969 DUP2 PUSH1 0x7 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x14F7 JUMP JUMPDEST ADD PUSH1 0x7 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x19A8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1519 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1484 DUP2 PUSH2 0x1454 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x44A JUMPI PUSH2 0x44A PUSH2 0x18FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B SLOAD CREATE2 SWAP14 NOT 0xE4 0xED CHAINID GASLIMIT PUSH4 0xC1FA1AD2 PUSH29 0x6FF50699038F8403257627157656480F5964736F6C6343000814003300 ",
							"sourceMap": "249:1806:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:242;;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;1811:242:15;;;;;;;;938:105;;;;;;:::i;:::-;;:::i;:::-;;2365:89:3;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2294:32:16;;;2276:51;;2264:2;2249:18;3497:154:3;2130:203:16;3323:113:3;;;;;;:::i;:::-;;:::i;564:31:15:-;;;;;;;;;2921:25:16;;;2909:2;2894:18;564:31:15;2775:177:16;2062:102:6;2140:10;:17;2062:102;;1049:106:15;;;;;;:::i;:::-;1105:7;1131:17;;;:12;:17;;;;;;;;;1049:106;4143:578:3;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;426:50:15;;458:18;426:50;;4226:136:0;;;;;;:::i;:::-;;:::i;1736:255:6:-;;;;;;:::i;:::-;;:::i;5328:245:0:-;;;;;;:::i;:::-;;:::i;4787:132:3:-;;;;;;:::i;:::-;;:::i;2236:226:6:-;;;;;;:::i;:::-;;:::i;482:46:15:-;;512:16;482:46;;2185:118:3;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;:::i;:::-;;:::i;2518:93:3:-;;;:::i;2187:49:0:-;;2232:4;2187:49;;3718:144:3;;;;;;:::i;:::-;;:::i;1551:254:15:-;;;;;;:::i;:::-;;:::i;4985:208:3:-;;;;;;:::i;:::-;;:::i;1161:384:15:-;;;;;;:::i;:::-;;:::i;535:23::-;;;:::i;4642:138:0:-;;;;;;:::i;:::-;;:::i;3928:153:3:-;;;;;;:::i;:::-;;:::i;1811:242:15:-;1983:4;2010:36;2034:11;2010:23;:36::i;:::-;2003:43;1811:242;-1:-1:-1;;1811:242:15:o;938:105::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;1022:9:15::1;:14;1034:2:::0;;1022:9;:14:::1;:::i;:::-;;938:105:::0;;;:::o;2365:89:3:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:3;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:9;3394:8:3;:35::i;:::-;3323:113;;:::o;4143:578::-;-1:-1:-1;;;;;4237:16:3;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:3;;4306:1;4276:33;;;2276:51:16;2249:18;;4276:33:3;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:9;4562:7:3;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:3;:13;-1:-1:-1;;;;;4610:21:3;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:3;;-1:-1:-1;;;;;9051:15:16;;;4654:50:3;;;9033:34:16;9083:18;;;9076:34;;;9146:15;;9126:18;;;9119:43;8968:18;;4654:50:3;8793:375:16;4226:136:0;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;1736:255:6:-:0;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1895:36;;-1:-1:-1;;;1895:36:6;;-1:-1:-1;;;;;9365:32:16;;1895:36:6;;;9347:51:16;9414:18;;;9407:34;;;9320:18;;1895:36:6;9173:274:16;1843:99:6;-1:-1:-1;;;;;;1958:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1736:255::o;5328:245:0:-;-1:-1:-1;;;;;5421:34:0;;735:10:9;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;2236:226:6:-;2302:7;2334:13;2140:10;:17;;2062:102;2334:13;2325:5;:22;2321:101;;2370:41;;-1:-1:-1;;;2370:41:6;;2401:1;2370:41;;;9347:51:16;9414:18;;;9407:34;;;9320:18;;2370:41:6;9173:274:16;2321:101:6;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;2431:24;;2236:226;;;:::o;2185:118:3:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:3;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:3;;2075:1;2048:30;;;2276:51:16;2249:18;;2048:30:3;2130:203:16;2002:87:3;-1:-1:-1;;;;;;2105:16:3;;;;;:9;:16;;;;;;;1920:208::o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:9;3836:8:3;3846;3803:18;:52::i;1551:254:15:-;512:16;2464::0;2475:4;2464:10;:16::i;:::-;1647:12:15::1;::::0;;1628:16:::1;1669:22:::0;;;:12:::1;:22;::::0;;;;:27;;-1:-1:-1;;1669:27:15::1;;::::0;::::1;;::::0;;1706:17;;1647:12;;-1:-1:-1;;1647:12:15;;1628:16;1706:17:::1;::::0;-1:-1:-1;;1706:17:15::1;:::i;:::-;::::0;;;-1:-1:-1;1733:20:15::1;::::0;-1:-1:-1;1739:3:15;1744:8;1733:5:::1;:20::i;:::-;1768:30;::::0;;10076:6:16;10064:19;;10046:38;;10115:2;10100:18;;10093:34;;;-1:-1:-1;;;;;10163:32:16;;10143:18;;;10136:60;1768:30:15;;::::1;::::0;;;;10034:2:16;1768:30:15;;::::1;1618:187;1551:254:::0;;;:::o;4985:208:3:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;1161:384:15:-;1244:13;1269:18;1283:3;1269:13;:18::i;:::-;;1379:10;:8;:10::i;:::-;1411:14;:3;:12;:14::i;:::-;1478:17;;;;:12;:17;;;;;;:28;;:17;;:26;:28::i;:::-;1341:183;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1298:240;;1161:384;;;:::o;535:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;3928:153:3:-:0;-1:-1:-1;;;;;4039:25:3;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;1435:222:6:-;1537:4;-1:-1:-1;;;;;;1560:50:6;;-1:-1:-1;;;1560:50:6;;:90;;;1614:36;1638:11;1614:23;:36::i;3199:103:0:-;3265:30;3276:4;735:10:9;3265::0;:30::i;:::-;3199:103;:::o;16138:241:3:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:3;;;;;2921:25:16;;;2894:18;;16309:31:3;2775:177:16;14418:120:3;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;2518:625:6:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;-1:-1:-1;;;;;;2703:27:6;;2699:210;;2746:40;2778:7;3949:10;:17;;3922:24;;;;:15;:24;;;;;:44;;;3976:24;;;;;;;;;;;;3846:161;2746:40;2699:210;;;2824:2;-1:-1:-1;;;;;2807:19:6;:13;-1:-1:-1;;;;;2807:19:6;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;-1:-1:-1;;;;;2922:16:6;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;-1:-1:-1;;;;;3020:19:6;:13;-1:-1:-1;;;;;3020:19:6;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3123:13;2518:625;-1:-1:-1;;;;2518:625:6:o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:9;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:9;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;15591:312:3;-1:-1:-1;;;;;15698:22:3;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:3;;-1:-1:-1;;;;;2294:32:16;;15743:31:3;;;2276:51:16;2249:18;;15743:31:3;2130:203:16;15694:91:3;-1:-1:-1;;;;;15794:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:3;;;;;;;;;;15855:41;;540::16;;;15855::3;;513:18:16;15855:41:3;;;;;;;15591:312;;;:::o;9955:327::-;-1:-1:-1;;;;;10022:16:3;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:3;;10091:1;10061:33;;;2276:51:16;2249:18;;10061:33:3;2130:203:16;10018:87:3;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:3;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:3;;10262:1;10234:31;;;2276:51:16;2249:18;;10234:31:3;2130:203:16;16918:782:3;-1:-1:-1;;;;;17034:14:3;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:3;;-1:-1:-1;;;;;17072:36:3;;;;;:71;;735:10:9;;17123:4:3;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:3;;;;;;;;-1:-1:-1;;17072:71:3;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:3;;-1:-1:-1;;;;;2294:32:16;;17430:25:3;;;2276:51:16;2249:18;;17430:25:3;2130:203:16;17377:293:3;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:3;;-1:-1:-1;;;17190:51:3;17186:130;;17272:25;;-1:-1:-1;;;17272:25:3;;-1:-1:-1;;;;;2294:32:16;;17272:25:3;;;2276:51:16;2249:18;;17272:25:3;2130:203:16;17186:130:3;17144:186;16918:782;;;;:::o;824:108:15:-;884:13;916:9;909:16;;;;;:::i;637:698:10:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:10;-1:-1:-1;794:41:10;-1:-1:-1;955:28:10;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:10;-1:-1:-1;;;1175:2:10;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:10;1010:282;1256:21;-1:-1:-1;1312:6:10;637:698;-1:-1:-1;;;637:698:10:o;1561:300:3:-;1663:4;-1:-1:-1;;;;;;1698:40:3;;-1:-1:-1;;;1698:40:3;;:104;;-1:-1:-1;;;;;;;1754:48:3;;-1:-1:-1;;;1754:48:3;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;9365:32:16;;3565:47:0;;;9347:51:16;9414:18;;;9407:34;;;9320:18;;3565:47:0;9173:274:16;14720:662:3;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:3;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:3;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:3;:5;-1:-1:-1;;;;;15115:13:3;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:3;;-1:-1:-1;;;;;2294:32:16;;15189:27:3;;;2276:51:16;2249:18;;15189:27:3;2130:203:16;15089:142:3;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:3;15292:5;-1:-1:-1;;;;;15283:28:3;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:3;-1:-1:-1;;;;;15346:29:3;;;;;;;;;;14720:662::o;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:3;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:3;;;9157:256;-1:-1:-1;;;;;9427:16:3;;;9423:107;;-1:-1:-1;;;;;9487:13:3;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:3;-1:-1:-1;;;;;9540:21:3;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:3:o;4624:959:6:-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4936:18;4957:26;;;:17;:26;;;;;;4886:40;;-1:-1:-1;5087:28:6;;;5083:323;;-1:-1:-1;;;;;5153:18:6;;5131:19;5153:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5202:30;;;;;;:44;;;5318:30;;:17;:30;;;;;:43;;;5083:323;-1:-1:-1;5499:26:6;;;;:17;:26;;;;;;;;5492:33;;;-1:-1:-1;;;;;5542:18:6;;;;;:12;:18;;;;;:34;;;;;;;5535:41;4624:959::o;5871:1061::-;6145:10;:17;6120:22;;6145:21;;6165:1;;6145:21;:::i;:::-;6176:18;6197:24;;;:15;:24;;;;;;6565:10;:26;;6120:46;;-1:-1:-1;6197:24:6;;6120:46;;6565:26;;;;;;:::i;:::-;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6706:28;;;:15;:28;;;;;;;:41;;;6875:24;;;;;6868:31;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;-1:-1:-1;;;;;3565:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3609:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3437:214:6:o;12214:916:13:-;12267:7;;-1:-1:-1;;;12342:17:13;;12338:103;;-1:-1:-1;;;12379:17:13;;;-1:-1:-1;12424:2:13;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:13;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:13;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:13;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:13;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:13;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:13:o;2565:202:0:-;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;861:40:11;;;2724:36:0;762:146:11;7082:368:3;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:3;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:3;;;;;2921:25:16;;;2894:18;;7298:31:3;2775:177:16;7248:186:3;7375:44;;-1:-1:-1;;;7375:44:3;;-1:-1:-1;;;;;9365:32:16;;7375:44:3;;;9347:51:16;9414:18;;;9407:34;;;9320:18;;7375:44:3;9173:274:16;6376:272:3;6479:4;-1:-1:-1;;;;;6514:21:3;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:3;:5;-1:-1:-1;;;;;6552:16:3;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:3;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:3:o;14:131:16:-;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:16:o;592:592::-;663:6;671;724:2;712:9;703:7;699:23;695:32;692:52;;;740:1;737;730:12;692:52;780:9;767:23;809:18;850:2;842:6;839:14;836:34;;;866:1;863;856:12;836:34;904:6;893:9;889:22;879:32;;949:7;942:4;938:2;934:13;930:27;920:55;;971:1;968;961:12;920:55;1011:2;998:16;1037:2;1029:6;1026:14;1023:34;;;1053:1;1050;1043:12;1023:34;1098:7;1093:2;1084:6;1080:2;1076:15;1072:24;1069:37;1066:57;;;1119:1;1116;1109:12;1066:57;1150:2;1142:11;;;;;1172:6;;-1:-1:-1;592:592:16;;-1:-1:-1;;;;592:592:16:o;1189:250::-;1274:1;1284:113;1298:6;1295:1;1292:13;1284:113;;;1374:11;;;1368:18;1355:11;;;1348:39;1320:2;1313:10;1284:113;;;-1:-1:-1;;1431:1:16;1413:16;;1406:27;1189:250::o;1444:271::-;1486:3;1524:5;1518:12;1551:6;1546:3;1539:19;1567:76;1636:6;1629:4;1624:3;1620:14;1613:4;1606:5;1602:16;1567:76;:::i;:::-;1697:2;1676:15;-1:-1:-1;;1672:29:16;1663:39;;;;1704:4;1659:50;;1444:271;-1:-1:-1;;1444:271:16:o;1720:220::-;1869:2;1858:9;1851:21;1832:4;1889:45;1930:2;1919:9;1915:18;1907:6;1889:45;:::i;1945:180::-;2004:6;2057:2;2045:9;2036:7;2032:23;2028:32;2025:52;;;2073:1;2070;2063:12;2025:52;-1:-1:-1;2096:23:16;;1945:180;-1:-1:-1;1945:180:16:o;2338:173::-;2406:20;;-1:-1:-1;;;;;2455:31:16;;2445:42;;2435:70;;2501:1;2498;2491:12;2435:70;2338:173;;;:::o;2516:254::-;2584:6;2592;2645:2;2633:9;2624:7;2620:23;2616:32;2613:52;;;2661:1;2658;2651:12;2613:52;2684:29;2703:9;2684:29;:::i;:::-;2674:39;2760:2;2745:18;;;;2732:32;;-1:-1:-1;;;2516:254:16:o;2957:328::-;3034:6;3042;3050;3103:2;3091:9;3082:7;3078:23;3074:32;3071:52;;;3119:1;3116;3109:12;3071:52;3142:29;3161:9;3142:29;:::i;:::-;3132:39;;3190:38;3224:2;3213:9;3209:18;3190:38;:::i;:::-;3180:48;;3275:2;3264:9;3260:18;3247:32;3237:42;;2957:328;;;;;:::o;3657:254::-;3725:6;3733;3786:2;3774:9;3765:7;3761:23;3757:32;3754:52;;;3802:1;3799;3792:12;3754:52;3838:9;3825:23;3815:33;;3867:38;3901:2;3890:9;3886:18;3867:38;:::i;:::-;3857:48;;3657:254;;;;;:::o;3916:186::-;3975:6;4028:2;4016:9;4007:7;4003:23;3999:32;3996:52;;;4044:1;4041;4034:12;3996:52;4067:29;4086:9;4067:29;:::i;4107:347::-;4172:6;4180;4233:2;4221:9;4212:7;4208:23;4204:32;4201:52;;;4249:1;4246;4239:12;4201:52;4272:29;4291:9;4272:29;:::i;:::-;4262:39;;4351:2;4340:9;4336:18;4323:32;4398:5;4391:13;4384:21;4377:5;4374:32;4364:60;;4420:1;4417;4410:12;4364:60;4443:5;4433:15;;;4107:347;;;;;:::o;4459:346::-;4526:6;4534;4587:2;4575:9;4566:7;4562:23;4558:32;4555:52;;;4603:1;4600;4593:12;4555:52;4626:29;4645:9;4626:29;:::i;:::-;4616:39;;4705:2;4694:9;4690:18;4677:32;4749:6;4742:5;4738:18;4731:5;4728:29;4718:57;;4771:1;4768;4761:12;4810:127;4871:10;4866:3;4862:20;4859:1;4852:31;4902:4;4899:1;4892:15;4926:4;4923:1;4916:15;4942:1138;5037:6;5045;5053;5061;5114:3;5102:9;5093:7;5089:23;5085:33;5082:53;;;5131:1;5128;5121:12;5082:53;5154:29;5173:9;5154:29;:::i;:::-;5144:39;;5202:38;5236:2;5225:9;5221:18;5202:38;:::i;:::-;5192:48;;5287:2;5276:9;5272:18;5259:32;5249:42;;5342:2;5331:9;5327:18;5314:32;5365:18;5406:2;5398:6;5395:14;5392:34;;;5422:1;5419;5412:12;5392:34;5460:6;5449:9;5445:22;5435:32;;5505:7;5498:4;5494:2;5490:13;5486:27;5476:55;;5527:1;5524;5517:12;5476:55;5563:2;5550:16;5585:2;5581;5578:10;5575:36;;;5591:18;;:::i;:::-;5666:2;5660:9;5634:2;5720:13;;-1:-1:-1;;5716:22:16;;;5740:2;5712:31;5708:40;5696:53;;;5764:18;;;5784:22;;;5761:46;5758:72;;;5810:18;;:::i;:::-;5850:10;5846:2;5839:22;5885:2;5877:6;5870:18;5925:7;5920:2;5915;5911;5907:11;5903:20;5900:33;5897:53;;;5946:1;5943;5936:12;5897:53;6002:2;5997;5993;5989:11;5984:2;5976:6;5972:15;5959:46;6047:1;6042:2;6037;6029:6;6025:15;6021:24;6014:35;6068:6;6058:16;;;;;;;4942:1138;;;;;;;:::o;6085:260::-;6153:6;6161;6214:2;6202:9;6193:7;6189:23;6185:32;6182:52;;;6230:1;6227;6220:12;6182:52;6253:29;6272:9;6253:29;:::i;:::-;6243:39;;6301:38;6335:2;6324:9;6320:18;6301:38;:::i;6350:380::-;6429:1;6425:12;;;;6472;;;6493:61;;6547:4;6539:6;6535:17;6525:27;;6493:61;6600:2;6592:6;6589:14;6569:18;6566:38;6563:161;;6646:10;6641:3;6637:20;6634:1;6627:31;6681:4;6678:1;6671:15;6709:4;6706:1;6699:15;6563:161;;6350:380;;;:::o;6861:545::-;6963:2;6958:3;6955:11;6952:448;;;6999:1;7024:5;7020:2;7013:17;7069:4;7065:2;7055:19;7139:2;7127:10;7123:19;7120:1;7116:27;7110:4;7106:38;7175:4;7163:10;7160:20;7157:47;;;-1:-1:-1;7198:4:16;7157:47;7253:2;7248:3;7244:12;7241:1;7237:20;7231:4;7227:31;7217:41;;7308:82;7326:2;7319:5;7316:13;7308:82;;;7371:17;;;7352:1;7341:13;7308:82;;;7312:3;;;6861:545;;;:::o;7582:1206::-;7706:18;7701:3;7698:27;7695:53;;;7728:18;;:::i;:::-;7757:94;7847:3;7807:38;7839:4;7833:11;7807:38;:::i;:::-;7801:4;7757:94;:::i;:::-;7877:1;7902:2;7897:3;7894:11;7919:1;7914:616;;;;8574:1;8591:3;8588:93;;;-1:-1:-1;8647:19:16;;;8634:33;8588:93;-1:-1:-1;;7539:1:16;7535:11;;;7531:24;7527:29;7517:40;7563:1;7559:11;;;7514:57;8694:78;;7887:895;;7914:616;6808:1;6801:14;;;6845:4;6832:18;;-1:-1:-1;;7950:17:16;;;8051:9;8073:229;8087:7;8084:1;8081:14;8073:229;;;8176:19;;;8163:33;8148:49;;8283:4;8268:20;;;;8236:1;8224:14;;;;8103:12;8073:229;;;8077:3;8330;8321:7;8318:16;8315:159;;;8454:1;8450:6;8444:3;8438;8435:1;8431:11;8427:21;8423:34;8419:39;8406:9;8401:3;8397:19;8384:33;8380:79;8372:6;8365:95;8315:159;;;8517:1;8511:3;8508:1;8504:11;8500:19;8494:4;8487:33;7887:895;;7582:1206;;;:::o;9452:127::-;9513:10;9508:3;9504:20;9501:1;9494:31;9544:4;9541:1;9534:15;9568:4;9565:1;9558:15;9584:127;9645:10;9640:3;9636:20;9633:1;9626:31;9676:4;9673:1;9666:15;9700:4;9697:1;9690:15;9716:125;9781:9;;;9802:10;;;9799:36;;;9815:18;;:::i;10207:853::-;10535:3;10573:6;10567:13;10589:66;10648:6;10643:3;10636:4;10628:6;10624:17;10589:66;:::i;:::-;10718:13;;10677:16;;;;10740:70;10718:13;10677:16;10787:4;10775:17;;10740:70;:::i;:::-;-1:-1:-1;;;10832:20:16;;10861:24;;;10910:13;;10932:78;10910:13;10997:1;10986:13;;10979:4;10967:17;;10932:78;:::i;:::-;11030:20;11052:1;11026:28;;10207:853;-1:-1:-1;;;;;10207:853:16:o;11065:489::-;-1:-1:-1;;;;;11334:15:16;;;11316:34;;11386:15;;11381:2;11366:18;;11359:43;11433:2;11418:18;;11411:34;;;11481:3;11476:2;11461:18;;11454:31;;;11259:4;;11502:46;;11528:19;;11520:6;11502:46;:::i;:::-;11494:54;11065:489;-1:-1:-1;;;;;;11065:489:16:o;11559:249::-;11628:6;11681:2;11669:9;11660:7;11656:23;11652:32;11649:52;;;11697:1;11694;11687:12;11649:52;11729:9;11723:16;11748:30;11772:5;11748:30;:::i;12224:128::-;12291:9;;;12312:11;;;12309:37;;;12326:18;;:::i;12357:127::-;12418:10;12413:3;12409:20;12406:1;12399:31;12449:4;12446:1;12439:15;12473:4;12470:1;12463:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1339600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN()": "239",
								"DEFAULT_ADMIN_ROLE()": "238",
								"DEP()": "284",
								"approve(address,uint256)": "31509",
								"balanceOf(address)": "2652",
								"getApproved(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "2534",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2737",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint16)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"renounceRole(bytes32,address)": "29129",
								"revokeRole(bytes32,address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26723",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "6778",
								"tokenModel(uint256)": "2487",
								"tokenOfOwnerByIndex(address,uint256)": "5013",
								"tokenTraker_()": "2384",
								"tokenURI(uint256)": "infinite",
								"tokenURI_()": "infinite",
								"totalSupply()": "2403",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 594,
									"end": 595,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 595,
									"name": "PUSH",
									"source": 15,
									"value": "C"
								},
								{
									"begin": 564,
									"end": 595,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 656,
									"end": 818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 656,
									"end": 818,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 741,
									"end": 746,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 748,
									"end": 755,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 741,
									"end": 746,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 767,
									"end": 811,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 767,
									"end": 811,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 767,
									"end": 777,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 767,
									"end": 811,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 767,
									"end": 811,
									"modifierDepth": 1,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 767,
									"end": 811,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 767,
									"end": 811,
									"modifierDepth": 1,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 656,
									"end": 818,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 16,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 2055,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b54f59d19e4ed464563c1fa1ad27c6ff50699038f8403257627157656480f5964736f6c63430008140033",
									".code": [
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "D2401FA4"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "AD0BE4BD"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "4F6CCCE7"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "6313BD30"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "1B21C00A"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "2A0ACC6A"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "2A0ACC6A"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "2F745C59"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "1B21C00A"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "E1A6A9C"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "2FE5305"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 249,
											"end": 2055,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1811,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1811,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 938,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 938,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 564,
											"end": 595,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 2775,
											"end": 2952,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1049,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1143,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1131,
											"end": 1148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1155,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 476,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 426,
											"end": 476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 426,
											"end": 476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 458,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 426,
											"end": 476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 426,
											"end": 476,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 482,
											"end": 528,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 482,
											"end": 528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 482,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 512,
											"end": 528,
											"name": "PUSH",
											"source": 15,
											"value": "B4CE9F8311D4FDC9A4F41ED950639C1D793F5D19CD88A87B9ECEC171F485AFE2"
										},
										{
											"begin": 482,
											"end": 528,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 482,
											"end": 528,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 1551,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 1551,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1161,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1161,
											"end": 1545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 535,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 2034,
											"end": 2045,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2010,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 2010,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2010,
											"end": 2046,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 2010,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2003,
											"end": 2046,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 2053,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 1022,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1034,
											"end": 1036,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1022,
											"end": 1031,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1022,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 1022,
											"end": 1036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1022,
											"end": 1036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1022,
											"end": 1036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1022,
											"end": 1036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 938,
											"end": 1043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9066,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9051,
											"end": 9066,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9051,
											"end": 9066,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9033,
											"end": 9067,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9076,
											"end": 9110,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9076,
											"end": 9110,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9076,
											"end": 9110,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9146,
											"end": 9161,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9146,
											"end": 9161,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9119,
											"end": 9162,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 8793,
											"end": 9168,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1872,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9365,
											"end": 9397,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9365,
											"end": 9397,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9347,
											"end": 9398,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9173,
											"end": 9447,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9347,
											"end": 9398,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9173,
											"end": 9447,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2438,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 512,
											"end": 528,
											"name": "PUSH",
											"source": 15,
											"value": "B4CE9F8311D4FDC9A4F41ED950639C1D793F5D19CD88A87B9ECEC171F485AFE2"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "C"
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 1669,
											"end": 1691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1691,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 1669,
											"end": 1696,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1669,
											"end": 1696,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1644,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 1706,
											"end": 1723,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 1706,
											"end": 1723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1723,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 1733,
											"end": 1753,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1742,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1744,
											"end": 1752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1733,
											"end": 1738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 1733,
											"end": 1753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1733,
											"end": 1753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 1733,
											"end": 1753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 10076,
											"end": 10082,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10046,
											"end": 10084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10046,
											"end": 10084,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10115,
											"end": 10117,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10100,
											"end": 10118,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10100,
											"end": 10118,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10127,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10127,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10127,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10163,
											"end": 10195,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 10163,
											"end": 10195,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10136,
											"end": 10196,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FCBD9479BB682193B3EB060A58134EDA82CF0A141904328119CFB9C15E6E171E"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10034,
											"end": 10036,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1768,
											"end": 1798,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 1618,
											"end": 1805,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1551,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1244,
											"end": 1257,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1269,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1269,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1287,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1269,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1269,
											"end": 1287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 1379,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1411,
											"end": 1414,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1411,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1411,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1490,
											"name": "PUSH",
											"source": 15,
											"value": "D"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "PUSH",
											"source": 15,
											"value": "FFFF"
										},
										{
											"begin": 1478,
											"end": 1495,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1478,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 1478,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 1341,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1538,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1538,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 535,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 535,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 535,
											"end": 558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 1614,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2775,
											"end": 2952,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 2656,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2875,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2842,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2954,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3055,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2518,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 824,
											"end": 932,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 824,
											"end": 932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 884,
											"end": 897,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 916,
											"end": 925,
											"name": "PUSH",
											"source": 15,
											"value": "B"
										},
										{
											"begin": 909,
											"end": 925,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 909,
											"end": 925,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 909,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "164"
										},
										{
											"begin": 909,
											"end": 925,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 909,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 909,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9365,
											"end": 9397,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9365,
											"end": 9397,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9398,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9173,
											"end": 9447,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2294,
											"end": 2326,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2327,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2130,
											"end": 2333,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 6145,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6565,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6638,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6602,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 6909,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3538,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3538,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3437,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2921,
											"end": 2946,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2775,
											"end": 2952,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9365,
											"end": 9397,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9365,
											"end": 9397,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9347,
											"end": 9398,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9414,
											"end": 9432,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9407,
											"end": 9441,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9320,
											"end": 9338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9173,
											"end": 9447,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "447"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 384,
											"end": 389,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 150,
											"end": 395,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 592,
											"end": 1184,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 592,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 663,
											"end": 669,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 721,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 703,
											"end": 710,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 699,
											"end": 722,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 695,
											"end": 727,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 692,
											"end": 744,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 692,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 692,
											"end": 744,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 740,
											"end": 741,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 730,
											"end": 742,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 692,
											"end": 744,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 692,
											"end": 744,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 767,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 809,
											"end": 827,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 852,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 842,
											"end": 848,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 839,
											"end": 853,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 836,
											"end": 870,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 836,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 836,
											"end": 870,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 864,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 856,
											"end": 868,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 836,
											"end": 870,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 836,
											"end": 870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 904,
											"end": 910,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 889,
											"end": 911,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 879,
											"end": 911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 879,
											"end": 911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 949,
											"end": 956,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 942,
											"end": 946,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 934,
											"end": 947,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 930,
											"end": 957,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 920,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 920,
											"end": 975,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 961,
											"end": 973,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 920,
											"end": 975,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 920,
											"end": 975,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 998,
											"end": 1014,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1026,
											"end": 1040,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1057,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 1023,
											"end": 1057,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1023,
											"end": 1057,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 1023,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1072,
											"end": 1096,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1069,
											"end": 1106,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1066,
											"end": 1123,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1066,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 1066,
											"end": 1123,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1119,
											"end": 1120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1109,
											"end": 1121,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1066,
											"end": 1123,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 1066,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1153,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1153,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1153,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1153,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1142,
											"end": 1153,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 592,
											"end": 1184,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 592,
											"end": 1184,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 592,
											"end": 1184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1189,
											"end": 1439,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 1189,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1374,
											"end": 1385,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1374,
											"end": 1385,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1374,
											"end": 1385,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1320,
											"end": 1322,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 1284,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1429,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1413,
											"end": 1429,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1406,
											"end": 1433,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1189,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1715,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 1444,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1486,
											"end": 1489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1530,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1551,
											"end": 1557,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1546,
											"end": 1549,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1539,
											"end": 1558,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1567,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1629,
											"end": 1633,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1627,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1613,
											"end": 1617,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1611,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1602,
											"end": 1618,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1567,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 1567,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1567,
											"end": 1643,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 1567,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1676,
											"end": 1691,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1701,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1702,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1702,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1702,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1663,
											"end": 1702,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1704,
											"end": 1708,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1709,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1659,
											"end": 1709,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1444,
											"end": 1715,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1720,
											"end": 1940,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1720,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1869,
											"end": 1871,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1832,
											"end": 1836,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 1930,
											"end": 1932,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1907,
											"end": 1913,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 1889,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 2125,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1945,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2004,
											"end": 2010,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2059,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2063,
											"end": 2075,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2119,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2096,
											"end": 2119,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 2125,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2338,
											"end": 2511,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 2338,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2455,
											"end": 2486,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2445,
											"end": 2487,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2445,
											"end": 2487,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2435,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 2435,
											"end": 2505,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2499,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2491,
											"end": 2503,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2435,
											"end": 2505,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 2435,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2338,
											"end": 2511,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2338,
											"end": 2511,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2338,
											"end": 2511,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2338,
											"end": 2511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2516,
											"end": 2770,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 2516,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2598,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2624,
											"end": 2631,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2620,
											"end": 2643,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2648,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2661,
											"end": 2662,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 2613,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 2684,
											"end": 2713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2674,
											"end": 2713,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2760,
											"end": 2762,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3078,
											"end": 3101,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3121,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3142,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3142,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 3142,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3142,
											"end": 3171,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 3142,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3132,
											"end": 3171,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3132,
											"end": 3171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 3190,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3228,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 3190,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3180,
											"end": 3228,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3180,
											"end": 3228,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3277,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3247,
											"end": 3279,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3237,
											"end": 3279,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3237,
											"end": 3279,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2957,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "tag",
											"source": 16,
											"value": "89"
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3761,
											"end": 3784,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3757,
											"end": 3789,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3792,
											"end": 3804,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 3754,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3825,
											"end": 3848,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3815,
											"end": 3848,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3886,
											"end": 3904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 3867,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3905,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 3867,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3857,
											"end": 3905,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3857,
											"end": 3905,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3657,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3916,
											"end": 4102,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 3916,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4007,
											"end": 4014,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4003,
											"end": 4026,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4031,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3996,
											"end": 4048,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3996,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 3996,
											"end": 4048,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4042,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4034,
											"end": 4046,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3996,
											"end": 4048,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 3996,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4067,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4067,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 4067,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4186,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4212,
											"end": 4219,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4208,
											"end": 4231,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4201,
											"end": 4253,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4201,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 4201,
											"end": 4253,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4201,
											"end": 4253,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 4201,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4272,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 4291,
											"end": 4300,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4272,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 4272,
											"end": 4301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4272,
											"end": 4301,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 4272,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4262,
											"end": 4301,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4262,
											"end": 4301,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4323,
											"end": 4355,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4384,
											"end": 4405,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4374,
											"end": 4406,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4364,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 4364,
											"end": 4424,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4422,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4364,
											"end": 4424,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 4364,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4443,
											"end": 4448,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4433,
											"end": 4448,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4433,
											"end": 4448,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4433,
											"end": 4448,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4107,
											"end": 4454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4459,
											"end": 4805,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 4459,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4587,
											"end": 4589,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4584,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4566,
											"end": 4573,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4562,
											"end": 4585,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4558,
											"end": 4590,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4603,
											"end": 4604,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4601,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4626,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 4645,
											"end": 4654,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4626,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 4626,
											"end": 4655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4626,
											"end": 4655,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 4626,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4616,
											"end": 4655,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4616,
											"end": 4655,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4703,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4690,
											"end": 4708,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4677,
											"end": 4709,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 4742,
											"end": 4747,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4731,
											"end": 4736,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4728,
											"end": 4757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 4718,
											"end": 4775,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4769,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4810,
											"end": 4937,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 4810,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4871,
											"end": 4881,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4862,
											"end": 4882,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4883,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4907,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4926,
											"end": 4930,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4931,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5037,
											"end": 5043,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5114,
											"end": 5117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 5102,
											"end": 5111,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5093,
											"end": 5100,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5089,
											"end": 5112,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5085,
											"end": 5118,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5131,
											"end": 5132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5121,
											"end": 5133,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 5173,
											"end": 5182,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 5154,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 5154,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5183,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5183,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5202,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 5236,
											"end": 5238,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5234,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5221,
											"end": 5239,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5202,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 5202,
											"end": 5240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5202,
											"end": 5240,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 5202,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5192,
											"end": 5240,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5192,
											"end": 5240,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5287,
											"end": 5289,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5285,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5259,
											"end": 5291,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5249,
											"end": 5291,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5249,
											"end": 5291,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5342,
											"end": 5344,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5327,
											"end": 5345,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5314,
											"end": 5346,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5395,
											"end": 5409,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5392,
											"end": 5426,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5392,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 5392,
											"end": 5426,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5412,
											"end": 5424,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5392,
											"end": 5426,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 5392,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5435,
											"end": 5467,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5435,
											"end": 5467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5505,
											"end": 5512,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5490,
											"end": 5503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5486,
											"end": 5513,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5476,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 5476,
											"end": 5531,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5517,
											"end": 5529,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5476,
											"end": 5531,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 5476,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5563,
											"end": 5565,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5550,
											"end": 5566,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5578,
											"end": 5588,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5575,
											"end": 5611,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5575,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 5575,
											"end": 5611,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 5591,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 5591,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5609,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 5591,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5720,
											"end": 5733,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5733,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5716,
											"end": 5738,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5716,
											"end": 5738,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5716,
											"end": 5738,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "PUSH",
											"source": 16,
											"value": "3F"
										},
										{
											"begin": 5712,
											"end": 5743,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5696,
											"end": 5749,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5696,
											"end": 5749,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5696,
											"end": 5749,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5782,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5784,
											"end": 5806,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5784,
											"end": 5806,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5784,
											"end": 5806,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5761,
											"end": 5807,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5758,
											"end": 5830,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5758,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 5758,
											"end": 5830,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5860,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5846,
											"end": 5848,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5861,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5885,
											"end": 5887,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 5920,
											"end": 5922,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5911,
											"end": 5913,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5907,
											"end": 5918,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5903,
											"end": 5923,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5900,
											"end": 5933,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5946,
											"end": 5947,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5944,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5936,
											"end": 5948,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 5897,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5997,
											"end": 5999,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5993,
											"end": 5995,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5989,
											"end": 6000,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5976,
											"end": 5982,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5972,
											"end": 5987,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5959,
											"end": 6005,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6037,
											"end": 6039,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6040,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6021,
											"end": 6045,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6014,
											"end": 6049,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6068,
											"end": 6074,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6058,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4942,
											"end": 6080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6085,
											"end": 6345,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 6085,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6214,
											"end": 6216,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6211,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6193,
											"end": 6200,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6189,
											"end": 6212,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6185,
											"end": 6217,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6234,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 6182,
											"end": 6234,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6230,
											"end": 6231,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6220,
											"end": 6232,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6234,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 6182,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6253,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 6272,
											"end": 6281,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6253,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 6253,
											"end": 6282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6253,
											"end": 6282,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 6253,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6243,
											"end": 6282,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6243,
											"end": 6282,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6301,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 6335,
											"end": 6337,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6324,
											"end": 6333,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6320,
											"end": 6338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6301,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 6301,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6350,
											"end": 6730,
											"name": "tag",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 6350,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6429,
											"end": 6430,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 6425,
											"end": 6437,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6493,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 6493,
											"end": 6554,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6525,
											"end": 6552,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6525,
											"end": 6552,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6493,
											"end": 6554,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 6493,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6600,
											"end": 6602,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6598,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6589,
											"end": 6603,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6566,
											"end": 6604,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6563,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 6563,
											"end": 6724,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6646,
											"end": 6656,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 6641,
											"end": 6644,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6634,
											"end": 6635,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6658,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 6678,
											"end": 6679,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6671,
											"end": 6686,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6709,
											"end": 6713,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 6706,
											"end": 6707,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6714,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6563,
											"end": 6724,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 6563,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6563,
											"end": 6724,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6350,
											"end": 6730,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6350,
											"end": 6730,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6350,
											"end": 6730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6350,
											"end": 6730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6861,
											"end": 7406,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 6861,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6958,
											"end": 6961,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6952,
											"end": 7400,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6952,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 6952,
											"end": 7400,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7029,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7013,
											"end": 7030,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7069,
											"end": 7073,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7067,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 7139,
											"end": 7141,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7123,
											"end": 7142,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7120,
											"end": 7121,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 7116,
											"end": 7143,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7106,
											"end": 7144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7173,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7160,
											"end": 7180,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7157,
											"end": 7204,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7157,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 7157,
											"end": 7204,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7198,
											"end": 7202,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7157,
											"end": 7204,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 7157,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7253,
											"end": 7255,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7248,
											"end": 7251,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7244,
											"end": 7256,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 7237,
											"end": 7257,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 7231,
											"end": 7235,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7227,
											"end": 7258,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7217,
											"end": 7258,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7217,
											"end": 7258,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7326,
											"end": 7328,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7319,
											"end": 7324,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7316,
											"end": 7329,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7371,
											"end": 7388,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7371,
											"end": 7388,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7371,
											"end": 7388,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 7352,
											"end": 7353,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7341,
											"end": 7354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 7308,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6861,
											"end": 7406,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6861,
											"end": 7406,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6861,
											"end": 7406,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6861,
											"end": 7406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 8788,
											"name": "tag",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 7582,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7706,
											"end": 7724,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7701,
											"end": 7704,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7698,
											"end": 7725,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7695,
											"end": 7748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7695,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 7695,
											"end": 7748,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 7728,
											"end": 7746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 7728,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7757,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 7847,
											"end": 7850,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 7839,
											"end": 7843,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7833,
											"end": 7844,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 7807,
											"end": 7845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "tag",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 7807,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7801,
											"end": 7805,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7757,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 7757,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7757,
											"end": 7851,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 7757,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7877,
											"end": 7878,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7904,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7897,
											"end": 7900,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7905,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7919,
											"end": 7920,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7914,
											"end": 8530,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7914,
											"end": 8530,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 7914,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 7914,
											"end": 8530,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8594,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8681,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 8588,
											"end": 8681,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8647,
											"end": 8666,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8647,
											"end": 8666,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8647,
											"end": 8666,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8634,
											"end": 8667,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8681,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 8588,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 7535,
											"end": 7546,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7535,
											"end": 7546,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7535,
											"end": 7546,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7531,
											"end": 7555,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 7527,
											"end": 7556,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 7517,
											"end": 7557,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7559,
											"end": 7570,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7570,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7570,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7514,
											"end": 7571,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 8694,
											"end": 8772,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8694,
											"end": 8772,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 7887,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 7887,
											"end": 8782,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7914,
											"end": 8530,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 7914,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6808,
											"end": 6809,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6815,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6801,
											"end": 6815,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6801,
											"end": 6815,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6832,
											"end": 6850,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7950,
											"end": 7967,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7950,
											"end": 7967,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7950,
											"end": 7967,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8051,
											"end": 8060,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8087,
											"end": 8094,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8176,
											"end": 8195,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8176,
											"end": 8195,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8176,
											"end": 8195,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8163,
											"end": 8196,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8148,
											"end": 8197,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8148,
											"end": 8197,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8283,
											"end": 8287,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8268,
											"end": 8288,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 8268,
											"end": 8288,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8268,
											"end": 8288,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8268,
											"end": 8288,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 8236,
											"end": 8237,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8224,
											"end": 8238,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8238,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8238,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8238,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8103,
											"end": 8115,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 8073,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8077,
											"end": 8080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8330,
											"end": 8333,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8321,
											"end": 8328,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8318,
											"end": 8334,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8454,
											"end": 8455,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 8444,
											"end": 8447,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 8438,
											"end": 8441,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 8435,
											"end": 8436,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 8431,
											"end": 8442,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8427,
											"end": 8448,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 8419,
											"end": 8458,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 8406,
											"end": 8415,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8401,
											"end": 8404,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8397,
											"end": 8416,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8384,
											"end": 8417,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8380,
											"end": 8459,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8372,
											"end": 8378,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8365,
											"end": 8460,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8315,
											"end": 8474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8511,
											"end": 8514,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8504,
											"end": 8515,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8500,
											"end": 8519,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8494,
											"end": 8498,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8487,
											"end": 8520,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 7887,
											"end": 8782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7887,
											"end": 8782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 8788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 8788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 8788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 8788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9579,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 9452,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9513,
											"end": 9523,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 9508,
											"end": 9511,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 9504,
											"end": 9524,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 9501,
											"end": 9502,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9525,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9544,
											"end": 9548,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 9541,
											"end": 9542,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9534,
											"end": 9549,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9568,
											"end": 9572,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9565,
											"end": 9566,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9558,
											"end": 9573,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9584,
											"end": 9711,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 9584,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9645,
											"end": 9655,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 9640,
											"end": 9643,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 9636,
											"end": 9656,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9657,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9676,
											"end": 9680,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9666,
											"end": 9681,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9700,
											"end": 9704,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9697,
											"end": 9698,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9705,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9716,
											"end": 9841,
											"name": "tag",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 9716,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9781,
											"end": 9790,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9802,
											"end": 9812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9802,
											"end": 9812,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9802,
											"end": 9812,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9799,
											"end": 9835,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9799,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 9799,
											"end": 9835,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 9815,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 9815,
											"end": 9833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10207,
											"end": 11060,
											"name": "tag",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 10207,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10573,
											"end": 10579,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10567,
											"end": 10580,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10589,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10643,
											"end": 10646,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10636,
											"end": 10640,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10634,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 10624,
											"end": 10641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10589,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 10589,
											"end": 10655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10589,
											"end": 10655,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 10589,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10677,
											"end": 10693,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10677,
											"end": 10693,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10677,
											"end": 10693,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10677,
											"end": 10693,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10740,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 10718,
											"end": 10731,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10677,
											"end": 10693,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10787,
											"end": 10791,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10775,
											"end": 10792,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 10775,
											"end": 10792,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10740,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 10740,
											"end": 10810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10740,
											"end": 10810,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 10740,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F6D6F64656C3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10832,
											"end": 10852,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10861,
											"end": 10885,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 10932,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10997,
											"end": 10998,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 10986,
											"end": 10999,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 10999,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10979,
											"end": 10983,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10967,
											"end": 10984,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10967,
											"end": 10984,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10932,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 10932,
											"end": 11010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10932,
											"end": 11010,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 10932,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "PUSH",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 11026,
											"end": 11054,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11026,
											"end": 11054,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 10207,
											"end": 11060,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 11060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11065,
											"end": 11554,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 11065,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11334,
											"end": 11349,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11334,
											"end": 11349,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11334,
											"end": 11349,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11316,
											"end": 11350,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11316,
											"end": 11350,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11386,
											"end": 11401,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11386,
											"end": 11401,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 11381,
											"end": 11383,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11366,
											"end": 11384,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11366,
											"end": 11384,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11359,
											"end": 11402,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11433,
											"end": 11435,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11481,
											"end": 11484,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11454,
											"end": 11485,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11454,
											"end": 11485,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11454,
											"end": 11485,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11259,
											"end": 11263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11263,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11502,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 11502,
											"end": 11548,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11528,
											"end": 11547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11520,
											"end": 11526,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11502,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 11502,
											"end": 11548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11502,
											"end": 11548,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 11502,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11494,
											"end": 11548,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 11065,
											"end": 11554,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11065,
											"end": 11554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11559,
											"end": 11808,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 11559,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11628,
											"end": 11634,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11681,
											"end": 11683,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11669,
											"end": 11678,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11660,
											"end": 11667,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11656,
											"end": 11679,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11652,
											"end": 11684,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11649,
											"end": 11701,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11649,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 11649,
											"end": 11701,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11697,
											"end": 11698,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11687,
											"end": 11699,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11649,
											"end": 11701,
											"name": "tag",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 11649,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11729,
											"end": 11738,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11723,
											"end": 11739,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11748,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 11772,
											"end": 11777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11748,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 11748,
											"end": 11778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12224,
											"end": 12352,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 12224,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12291,
											"end": 12300,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12291,
											"end": 12300,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12291,
											"end": 12300,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12312,
											"end": 12323,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12312,
											"end": 12323,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12312,
											"end": 12323,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12309,
											"end": 12346,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12309,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 12309,
											"end": 12346,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 12326,
											"end": 12344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12357,
											"end": 12484,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 12357,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12418,
											"end": 12428,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 12413,
											"end": 12416,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 12409,
											"end": 12429,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12406,
											"end": 12407,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12430,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12449,
											"end": 12453,
											"name": "PUSH",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 12446,
											"end": 12447,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12439,
											"end": 12454,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12473,
											"end": 12477,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12470,
											"end": 12471,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12463,
											"end": 12478,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TrainersERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN()": "2a0acc6a",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DEP()": "6313bd30",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint16)": "ad0be4bd",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenModel(uint256)": "1b21c00a",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenTraker_()": "0e1a6a9c",
							"tokenURI(uint256)": "c87b56dd",
							"tokenURI_()": "d2401fa4",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MintTrainer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_m\",\"type\":\"uint16\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_u\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenModel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenTraker_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenURI_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TrainersERC721.sol\":\"TrainersERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/TrainersERC721.sol\":{\"keccak256\":\"0xf9df3defbd9395423538545b5b40cd83f97983ce7e1befe42c5ddd0323235a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dafdd972355095fd7523c566d79edec4c307fb44a0aafb19897ad1dc234079f7\",\"dweb:/ipfs/QmeJJXf26HGr39QammtS7qrGGdzCBRdmkzMZaJ95jSnZS5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 548,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 554,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 558,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 562,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 568,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1678,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1682,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1685,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_allTokens",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1689,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3618,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "tokenURI_",
								"offset": 0,
								"slot": "11",
								"type": "t_string_storage"
							},
							{
								"astId": 3621,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "tokenTraker_",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 3625,
								"contract": "contracts/TrainersERC721.sol:TrainersERC721",
								"label": "modelTraker_",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_uint256,t_uint16)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint16)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint16)",
								"numberOfBytes": "32",
								"value": "t_uint16"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/TrainersERC721.sol:TrainersERC721",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/TrainersERC721.sol:TrainersERC721",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							2133
						],
						"ERC165": [
							2412
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 2134,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2133,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 2413,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2412,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2133,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2412,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								2412,
								2424,
								378,
								2133
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2411
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2411,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							2133
						],
						"ERC165": [
							2412
						],
						"ERC721": [
							1524
						],
						"IERC165": [
							2424
						],
						"IERC721": [
							1641
						],
						"IERC721Errors": [
							468
						],
						"IERC721Metadata": [
							2103
						],
						"IERC721Receiver": [
							1659
						],
						"Strings": [
							2388
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 1642,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1641,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 1660,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1659,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2104,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2103,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2134,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2133,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2389,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 526,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2388,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2413,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 528,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2424,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 529,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2412,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 516,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 531,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 468,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 534,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2133,
										"src": "804:7:3"
									},
									"id": 535,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 536,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2412,
										"src": "813:6:3"
									},
									"id": 537,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 538,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1641,
										"src": "821:7:3"
									},
									"id": 539,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 540,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2103,
										"src": "830:15:3"
									},
									"id": 541,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 542,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "847:13:3"
									},
									"id": 543,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 533,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1524,
							"linearizedBaseContracts": [
								1524,
								468,
								2103,
								1641,
								2412,
								2424,
								2133
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 546,
									"libraryName": {
										"id": 544,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2388,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 554,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 553,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 551,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 552,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 558,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 557,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 555,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 556,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 562,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 561,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 559,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 560,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 568,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 567,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 563,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 566,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 564,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 565,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 576,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 580,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 581,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 585,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1524,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2411,
										2423
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 598,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1641_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1641_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 597,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1641",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 604,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2103,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2103_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2103_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 603,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2103",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 611,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 609,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1524_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2411,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 595,
												"id": 614,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 592,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 590,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2412,
												"src": "1637:6:3"
											},
											{
												"id": 591,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2424,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 587,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 593,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1524,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1566
									],
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 637,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 631,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 630,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 636,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 639,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 641,
													"indexExpression": {
														"id": 640,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 623,
												"id": 642,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1524,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1574
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 651,
												"id": 655,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1524,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2088
									],
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 663,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 662,
												"id": 664,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1524,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2094
									],
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 672,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1524,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2102
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 684,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 683,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 687,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 689,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 694,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 692,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 702,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 703,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2201,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 699,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 682,
												"id": 709,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1524,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 716,
												"id": 718,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1524,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1614
									],
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 731,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 728,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1327,
															1393
														],
														"referencedDeclaration": 1327,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1524,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1630
									],
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 744,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 743,
												"id": 751,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1524,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1622
									],
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 762,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 761,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1430,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1524,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1640
									],
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 779,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 781,
														"indexExpression": {
															"id": 780,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 783,
													"indexExpression": {
														"id": 782,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 778,
												"id": 784,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1524,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1606
									],
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 796,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 797,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 803,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 802,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 808,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 831,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [
														{
															"id": 814,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 816,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 813,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 821,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 824,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 789,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 825,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 826,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 823,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 828,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1524,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1596
									],
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 842,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															850,
															876
														],
														"referencedDeclaration": 876,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1524,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1586
									],
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 869,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 870,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 872,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 868,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1524,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 884,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 886,
													"indexExpression": {
														"id": 885,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 883,
												"id": 887,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1524,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 897,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 899,
													"indexExpression": {
														"id": 898,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 896,
												"id": 900,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1524,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 914,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 915,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 920,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 921,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 924,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 925,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 923,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 929,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 909,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 928,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 931,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 934,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 913,
												"id": 936,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1524,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 949,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 950,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 951,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 948,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 955,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 970,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 966,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 967,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 945,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 965,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 969,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 971,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 964,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 961,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 945,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 960,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 431,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 963,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1524,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 989,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 983,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 985,
																"indexExpression": {
																	"id": 984,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 988,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 979,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1524,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1080,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1003,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [
														{
															"id": 1006,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1005,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1009,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1010,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1016,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1017,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1018,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1015,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1020,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1024,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1030,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1034,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1035,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1029,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1327,
																		1393
																	],
																	"referencedDeclaration": 1393,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 1048,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1042,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1044,
																			"indexExpression": {
																				"id": 1043,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1004,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1047,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 1063,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1057,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1059,
																			"indexExpression": {
																				"id": 1058,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1066,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1068,
														"indexExpression": {
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1069,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1073,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1072,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 1078,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1079,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1524,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1090,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1096,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1095,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1101,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1109,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1106,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1115,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1116,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1122,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1121,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1127,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1524,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1140,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1139,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1146,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1524,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1168,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1161,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1524,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1204,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1180,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1192,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1193,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 1202,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1199,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1198,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1201,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1524,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1227,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1264,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1230,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1240,
												"initialValue": {
													"arguments": [
														{
															"id": 1233,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1235,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1232,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1241,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1242,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1252,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1253,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1262,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1261,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1256,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1257,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1212,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1258,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1255,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1260,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1248,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1247,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1250,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1524,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1275,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1283,
															1309
														],
														"referencedDeclaration": 1309,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1524,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1295,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1305,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1524,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1322,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1319,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1327,
															1393
														],
														"referencedDeclaration": 1393,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1524,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1339,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1340,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1384,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1348
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1348,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1384,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1347,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1352,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1350,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1332,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1349,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1353,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1354,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1359,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1348,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1360,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1364,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1348,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1365,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1363,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1374,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1373,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1370,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1369,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1372,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1375,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1383,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1382,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1377,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1378,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1330,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1379,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1332,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1376,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1549,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1381,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1386,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1388,
														"indexExpression": {
															"id": 1387,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1389,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1524,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1404,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1410,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1409,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1412,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1415,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1418,
															"indexExpression": {
																"id": 1416,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1419,
														"indexExpression": {
															"id": 1417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1420,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1424,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1425,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1423,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1524,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1458,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1438,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"arguments": [
														{
															"id": 1441,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1444,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1445,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1455,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1451,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1450,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1456,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1439,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1457,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1524,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1471,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1521,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1500,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1489,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1487,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1490,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1659,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1659_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1491,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1658,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1499,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1498,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1495,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1464,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1494,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 450,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1496,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1497,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1501,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1488,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1487,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1501,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1486,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1517,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1508,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1505,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1503,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1515,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1503,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1503,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1514,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1516,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1513,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1510,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1464,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1509,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 450,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1511,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1512,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1518,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1504,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1503,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1518,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1502,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1480,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1482,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1462,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1483,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1484,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1477,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1476,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1659_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1659",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1658,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1519,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1524,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1525,
							"src": "776:16926:3",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": [
								1540,
								1549,
								1558
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2424
						],
						"IERC721": [
							1641
						]
					},
					"id": 1642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1642,
							"sourceUnit": 2425,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1527,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2424,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1530,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2424,
										"src": "287:7:4"
									},
									"id": 1531,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1529,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1641,
							"linearizedBaseContracts": [
								1641,
								2424
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1540,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1549,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1558,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1641,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1641,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1641,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1641,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1641,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1641,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1641,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1641,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1641,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1642,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1540,
								1549,
								1558
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1659
						]
					},
					"id": 1660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1644,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1659,
							"linearizedBaseContracts": [
								1659
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1659,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1660,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1524
						],
						"ERC721Enumerable": [
							2043
						],
						"IERC165": [
							2424
						],
						"IERC721Enumerable": [
							2075
						]
					},
					"id": 2044,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2044,
							"sourceUnit": 1525,
							"src": "154:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1662,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1524,
										"src": "162:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2044,
							"sourceUnit": 2076,
							"src": "192:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1664,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2075,
										"src": "200:17:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2044,
							"sourceUnit": 2413,
							"src": "251:64:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1666,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2424,
										"src": "259:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1669,
										"name": "ERC721",
										"nameLocations": [
											"746:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1524,
										"src": "746:6:6"
									},
									"id": 1670,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:6"
								},
								{
									"baseName": {
										"id": 1671,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "754:17:6"
									},
									"id": 1672,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:6"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1668,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:6",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 2043,
							"linearizedBaseContracts": [
								2043,
								2075,
								1524,
								468,
								2103,
								1641,
								2412,
								2424,
								2133
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1678,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2043,
									"src": "778:80:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1677,
										"keyName": "owner",
										"keyNameLocation": "794:5:6",
										"keyType": {
											"id": 1673,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1676,
											"keyName": "index",
											"keyNameLocation": "819:5:6",
											"keyType": {
												"id": 1674,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1675,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1682,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 2043,
									"src": "864:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1681,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:6",
										"keyType": {
											"id": 1679,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1680,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1685,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2043,
									"src": "932:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1683,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1684,
										"nodeType": "ArrayTypeName",
										"src": "932:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1689,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 2043,
									"src": "966:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1688,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:6",
										"keyType": {
											"id": 1686,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1687,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:6",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1696,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1249:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:6"
									},
									"src": "1205:59:6"
								},
								{
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:6",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1699,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:6"
									},
									"src": "1325:43:6"
								},
								{
									"baseFunctions": [
										616,
										2423
									],
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "1543:114:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1710,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "1560:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1712,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "1580:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2075_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2075_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1711,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2075",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:6",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1718,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "1638:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1716,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$2043_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 616,
															"src": "1614:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1709,
												"id": 1721,
												"nodeType": "Return",
												"src": "1553:97:6"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1706,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1704,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2424,
												"src": "1511:7:6"
											},
											{
												"id": 1705,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1524,
												"src": "1520:6:6"
											}
										],
										"src": "1502:25:6"
									},
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1462:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:6"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1537:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:6"
									},
									"scope": 2043,
									"src": "1435:222:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2066
									],
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "1833:158:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1733,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "1847:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1735,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "1866:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1734,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "1856:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1744,
												"nodeType": "IfStatement",
												"src": "1843:99:6",
												"trueBody": {
													"id": 1743,
													"nodeType": "Block",
													"src": "1874:68:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1739,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "1918:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1740,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "1925:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1738,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "1895:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1742,
															"nodeType": "RevertStatement",
															"src": "1888:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1745,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "1958:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1747,
														"indexExpression": {
															"id": 1746,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "1971:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1749,
													"indexExpression": {
														"id": 1748,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "1978:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1732,
												"id": 1750,
												"nodeType": "Return",
												"src": "1951:33:6"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:6",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1765:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1780:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:6"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "1824:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:6"
									},
									"scope": 2043,
									"src": "1736:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2056
									],
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "2123:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1758,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "2140:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1760,
												"nodeType": "Return",
												"src": "2133:24:6"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:6",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:6"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "2114:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:6"
									},
									"scope": 2043,
									"src": "2062:102:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2074
									],
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "2311:151:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "2325:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1771,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "2334:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1783,
												"nodeType": "IfStatement",
												"src": "2321:101:6",
												"trueBody": {
													"id": 1782,
													"nodeType": "Block",
													"src": "2349:73:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1775,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1779,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "2405:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1774,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "2370:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1781,
															"nodeType": "RevertStatement",
															"src": "2363:48:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1784,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "2438:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1786,
													"indexExpression": {
														"id": 1785,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "2449:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1769,
												"id": 1787,
												"nodeType": "Return",
												"src": "2431:24:6"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:6",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2258:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:6"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2302:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:6"
									},
									"scope": 2043,
									"src": "2236:226:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1081
									],
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "2622:521:6",
										"statements": [
											{
												"assignments": [
													1803
												],
												"declarations": [
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1857,
														"src": "2632:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1802,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"id": 1806,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "2670:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "2674:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1808,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "2683:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1804,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$2043_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1081,
														"src": "2656:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "2703:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1812,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1822,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "2807:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1823,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "2824:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1831,
													"nodeType": "IfStatement",
													"src": "2803:106:6",
													"trueBody": {
														"id": 1830,
														"nodeType": "Block",
														"src": "2828:81:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1826,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "2875:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1827,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "2890:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1825,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1969,
																		"src": "2842:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1829,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:6"
															}
														]
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "2699:210:6",
												"trueBody": {
													"id": 1821,
													"nodeType": "Block",
													"src": "2732:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1818,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "2778:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1817,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "2746:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1820,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1833,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "2922:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1834,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1844,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3020:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "3037:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1853,
													"nodeType": "IfStatement",
													"src": "3016:90:6",
													"trueBody": {
														"id": 1852,
														"nodeType": "Block",
														"src": "3041:65:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1848,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1792,
																			"src": "3083:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1849,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "3087:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1847,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "3055:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1851,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:6"
															}
														]
													}
												},
												"id": 1854,
												"nodeType": "IfStatement",
												"src": "2918:188:6",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "2940:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1840,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "2991:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1839,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "2954:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1842,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1855,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1803,
													"src": "3123:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1801,
												"id": 1856,
												"nodeType": "Return",
												"src": "3116:20:6"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:6",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1798,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:6"
									},
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2535:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2547:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2564:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:6"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "2613:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:6"
									},
									"scope": 2043,
									"src": "2518:625:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "3511:140:6",
										"statements": [
											{
												"assignments": [
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1867,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1888,
														"src": "3521:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1866,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1873,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1869,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "3548:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1868,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "3538:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:6"
											},
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1874,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "3565:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1877,
															"indexExpression": {
																"id": 1875,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "3578:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1878,
														"indexExpression": {
															"id": 1876,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "3582:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1879,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "3592:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:6"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1882,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "3609:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1884,
														"indexExpression": {
															"id": 1883,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "3627:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1885,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "3638:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:6"
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:6",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "3474:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "3486:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:6"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:6"
									},
									"scope": 2043,
									"src": "3437:214:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "3912:95:6",
										"statements": [
											{
												"expression": {
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1895,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "3922:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1897,
														"indexExpression": {
															"id": 1896,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "3938:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1898,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3949:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1905,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "3992:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1902,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3976:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:6"
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:6",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "3887:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:6"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:6"
									},
									"scope": 2043,
									"src": "3846:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "4705:878:6",
										"statements": [
											{
												"assignments": [
													1918
												],
												"declarations": [
													{
														"constant": false,
														"id": 1918,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "4886:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1922,
												"initialValue": {
													"arguments": [
														{
															"id": 1920,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "4921:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1919,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "4911:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:6"
											},
											{
												"assignments": [
													1924
												],
												"declarations": [
													{
														"constant": false,
														"id": 1924,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "4936:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"baseExpression": {
														"id": 1925,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "4957:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1927,
													"indexExpression": {
														"id": 1926,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "4975:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1929,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "5087:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1930,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "5101:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1955,
												"nodeType": "IfStatement",
												"src": "5083:323:6",
												"trueBody": {
													"id": 1954,
													"nodeType": "Block",
													"src": "5117:289:6",
													"statements": [
														{
															"assignments": [
																1933
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1933,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1954,
																	"src": "5131:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1932,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1939,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1934,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "5153:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1936,
																	"indexExpression": {
																		"id": 1935,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1912,
																		"src": "5166:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1938,
																"indexExpression": {
																	"id": 1937,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "5172:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:6"
														},
														{
															"expression": {
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1940,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1678,
																			"src": "5202:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1943,
																		"indexExpression": {
																			"id": 1941,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1912,
																			"src": "5215:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1944,
																	"indexExpression": {
																		"id": 1942,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1924,
																		"src": "5221:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1945,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "5235:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1947,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:6"
														},
														{
															"expression": {
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1948,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "5318:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1950,
																	"indexExpression": {
																		"id": 1949,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "5336:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1951,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "5351:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1953,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:6",
													"subExpression": {
														"baseExpression": {
															"id": 1956,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "5499:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1958,
														"indexExpression": {
															"id": 1957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "5517:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:6"
											},
											{
												"expression": {
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:6",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1961,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "5542:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1963,
															"indexExpression": {
																"id": 1962,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1912,
																"src": "5555:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1965,
														"indexExpression": {
															"id": 1964,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "5561:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:6"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:6",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4666:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4680:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:6"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:6"
									},
									"scope": 2043,
									"src": "4624:959:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "5942:990:6",
										"statements": [
											{
												"assignments": [
													1976
												],
												"declarations": [
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "6120:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1981,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1977,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6145:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:6"
											},
											{
												"assignments": [
													1983
												],
												"declarations": [
													{
														"constant": false,
														"id": 1983,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "6176:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1982,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1987,
												"initialValue": {
													"baseExpression": {
														"id": 1984,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "6197:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1986,
													"indexExpression": {
														"id": 1985,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "6213:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:6"
											},
											{
												"assignments": [
													1989
												],
												"declarations": [
													{
														"constant": false,
														"id": 1989,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 2016,
														"src": "6543:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1993,
												"initialValue": {
													"baseExpression": {
														"id": 1990,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "6565:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1992,
													"indexExpression": {
														"id": 1991,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "6576:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:6"
											},
											{
												"expression": {
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1994,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6602:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1996,
														"indexExpression": {
															"id": 1995,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "6613:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1997,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "6627:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:6"
											},
											{
												"expression": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2000,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "6706:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2002,
														"indexExpression": {
															"id": 2001,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "6722:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2003,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "6737:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:6"
											},
											{
												"expression": {
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 2006,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "6875:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2008,
														"indexExpression": {
															"id": 2007,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "6891:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2011,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "6909:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:6"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:6",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "5917:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:6"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:6"
									},
									"scope": 2043,
									"src": "5871:1061:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										991
									],
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "7134:149:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2026,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "7148:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2033,
												"nodeType": "IfStatement",
												"src": "7144:84:6",
												"trueBody": {
													"id": 2032,
													"nodeType": "Block",
													"src": "7160:68:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2029,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "7181:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2031,
															"nodeType": "RevertStatement",
															"src": "7174:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2037,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "7260:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2038,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "7269:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 2034,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$2043_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:6",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "7237:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2040,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:6"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:6",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2024,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:6"
									},
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "7075:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "7092:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2021,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:6"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:6"
									},
									"scope": 2043,
									"src": "7049:234:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2044,
							"src": "708:6577:6",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467,
								1696,
								1699
							],
							"usedEvents": [
								1540,
								1549,
								1558
							]
						}
					],
					"src": "128:7158:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1641
						],
						"IERC721Enumerable": [
							2075
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2045,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2076,
							"sourceUnit": 1642,
							"src": "155:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2046,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1641,
										"src": "163:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2049,
										"name": "IERC721",
										"nameLocations": [
											"364:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1641,
										"src": "364:7:7"
									},
									"id": 2050,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:7"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2048,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2075,
							"linearizedBaseContracts": [
								2075,
								1641,
								2424
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:7",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:7"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "511:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:7"
									},
									"scope": 2075,
									"src": "465:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:7",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "731:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "746:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:7"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "784:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:7"
									},
									"scope": 2075,
									"src": "702:91:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:7",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "990:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:7"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "1028:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:7"
									},
									"scope": 2075,
									"src": "968:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2076,
							"src": "333:706:7",
							"usedErrors": [],
							"usedEvents": [
								1540,
								1549,
								1558
							]
						}
					],
					"src": "129:911:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1641
						],
						"IERC721Metadata": [
							2103
						]
					},
					"id": 2104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 2079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2104,
							"sourceUnit": 1642,
							"src": "153:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2078,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1641,
										"src": "161:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2081,
										"name": "IERC721",
										"nameLocations": [
											"357:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1641,
										"src": "357:7:8"
									},
									"id": 2082,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2080,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2103,
							"linearizedBaseContracts": [
								2103,
								1641,
								2424
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"scope": 2103,
									"src": "434:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:8"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "600:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2091,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:8"
									},
									"scope": 2103,
									"src": "559:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "734:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:8"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "774:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:8"
									},
									"scope": 2103,
									"src": "716:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2104,
							"src": "328:463:8",
							"usedErrors": [],
							"usedEvents": [
								1540,
								1549,
								1558
							]
						}
					],
					"src": "127:665:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2133
						]
					},
					"id": 2134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2106,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2133,
							"linearizedBaseContracts": [
								2133
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2111,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2110,
												"id": 2113,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 2133,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2119,
												"id": 2122,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 2133,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2128,
												"id": 2130,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 2133,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2134,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3478
						],
						"SignedMath": [
							3583
						],
						"Strings": [
							2388
						]
					},
					"id": 2389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2389,
							"sourceUnit": 3479,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2136,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3478,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 2139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2389,
							"sourceUnit": 3584,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2138,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3583,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2140,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2388,
							"linearizedBaseContracts": [
								2388
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2143,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2388,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2141,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2146,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2388,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2144,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2147,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2153,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 2199,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															2162
														],
														"declarations": [
															{
																"constant": false,
																"id": 2162,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2199,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2161,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2169,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2165,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2156,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2163,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3478,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3478_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3298,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															2171
														],
														"declarations": [
															{
																"constant": false,
																"id": 2171,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2199,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2170,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2176,
														"initialValue": {
															"arguments": [
																{
																	"id": 2174,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2172,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															2178
														],
														"declarations": [
															{
																"constant": false,
																"id": 2178,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 2199,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2177,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2179,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2171,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2162,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2178,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 2180,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 2195,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 2182,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2178,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2184,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2143,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2178,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2156,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 2185,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2189,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2194,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 2193,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2196,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 2197,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2160,
														"id": 2198,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2154,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 2388,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2221,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2204,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2219,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3583,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3583_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3582,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2218,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2209,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2208,
												"id": 2225,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2203,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 2388,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 2245,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2236,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2230,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2239,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2230,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2237,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3478,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3478_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3420,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2235,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2247,
																	2330,
																	2350
																],
																"referencedDeclaration": 2330,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2234,
														"id": 2244,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 2388,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													2258
												],
												"declarations": [
													{
														"constant": false,
														"id": 2258,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2260,
												"initialValue": {
													"id": 2259,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2250,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													2262
												],
												"declarations": [
													{
														"constant": false,
														"id": 2262,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2261,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2266,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2263,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2272,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2274,
														"indexExpression": {
															"hexValue": "30",
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2278,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2280,
														"indexExpression": {
															"hexValue": "31",
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 2312,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2298,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2262,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2300,
																	"indexExpression": {
																		"id": 2299,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2285,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2301,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2305,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2302,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2258,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2307,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2308,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2258,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2311,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2292,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2313,
												"initializationExpression": {
													"assignments": [
														2285
													],
													"declarations": [
														{
															"constant": false,
															"id": 2285,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2313,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2284,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2291,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2287,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2252,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 2295,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2297,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2323,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 2322,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2318,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2250,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2319,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2252,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2317,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2321,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2326,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2262,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2324,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2256,
												"id": 2328,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 2388,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2343,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2333,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2341,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2339,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2346,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2338,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2247,
															2330,
															2350
														],
														"referencedDeclaration": 2330,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2337,
												"id": 2348,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 2388,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2362,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2360,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2367,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2355,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2365,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2374,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2372,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2371,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2380,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2378,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2377,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2359,
												"id": 2385,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 2388,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2389,
							"src": "251:2847:10",
							"usedErrors": [
								2153
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2412
						],
						"IERC165": [
							2424
						]
					},
					"id": 2413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2413,
							"sourceUnit": 2425,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2391,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2424,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2394,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2424,
										"src": "687:7:11"
									},
									"id": 2395,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2393,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2412,
							"linearizedBaseContracts": [
								2412,
								2424
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2423
									],
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2403,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2405,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2424,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2424_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2424_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2404,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2424",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2402,
												"id": 2409,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2397,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 2412,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2413,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2424
						]
					},
					"id": 2425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2415,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2424,
							"linearizedBaseContracts": [
								2424
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2416,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 2424,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2425,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3478
						]
					},
					"id": 3479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2427,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3478,
							"linearizedBaseContracts": [
								3478
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2430,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2435,
									"members": [
										{
											"id": 2431,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2432,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2433,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2434,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2466,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2465,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2448
														],
														"declarations": [
															{
																"constant": false,
																"id": 2448,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2465,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2447,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2452,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2449,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2440,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2453,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2454,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2460,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2458,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2446,
															"id": 2459,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2462,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2463,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2446,
														"id": 2464,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3478,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2493,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2479,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2472,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2480,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2470,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2486,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2478,
															"id": 2485,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2488,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2470,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2489,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2472,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2491,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2478,
														"id": 2492,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2468,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3478,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2535,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2507,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2514,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2506,
															"id": 2513,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2516
														],
														"declarations": [
															{
																"constant": false,
																"id": 2516,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2535,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2515,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2520,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2517,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2518,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2521,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2522,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2498,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2524,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2530,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2506,
															"id": 2529,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2532,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2533,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2506,
														"id": 2534,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3478,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2563,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2549,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2542,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2556,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2554,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2548,
															"id": 2555,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2558,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2559,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2542,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2561,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2548,
														"id": 2562,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3478,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2591,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2577,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2570,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2576,
															"id": 2583,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2586,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2587,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2589,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2576,
														"id": 2590,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3478,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2603,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2604,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2607,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2598,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2606,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2602,
												"id": 2609,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3478,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2628,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2621,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2614,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2622,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2625,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2624,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2614,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2620,
												"id": 2627,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3478,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2651,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2639,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2640,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2634,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2642,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2643,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2632,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2644,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2634,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2646,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2638,
												"id": 2650,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2630,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3478,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2685,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2662,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2657,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2670,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2669,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2665,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2655,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2666,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2661,
															"id": 2668,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2671,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2675,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2655,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2678,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2679,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2657,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2661,
												"id": 2684,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2653,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2686,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3478,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2810,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2699
														],
														"declarations": [
															{
																"constant": false,
																"id": 2699,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2810,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2698,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2703,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2701,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2691,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2705
														],
														"declarations": [
															{
																"constant": false,
																"id": 2705,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2810,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2704,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2706,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2705,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2689,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2691,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2707,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2708,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2716,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2715,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2711,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2712,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2697,
																	"id": 2714,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2717,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2718,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2705,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2724,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2723,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2720,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2430,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2722,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2726
														],
														"declarations": [
															{
																"constant": false,
																"id": 2726,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2810,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2727,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2693,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2705,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2705,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2726,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2726,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2726,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2689,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2691,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2728,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2730
														],
														"declarations": [
															{
																"constant": false,
																"id": 2730,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2810,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2729,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2737,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2731,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2733,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2735,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2693,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2693,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2699,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2730,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2730,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2730,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2730,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2730,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2738,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2739,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2699,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2740,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2705,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2741,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2730,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2744,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2746
														],
														"declarations": [
															{
																"constant": false,
																"id": 2746,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2810,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2745,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2753,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2748,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2750,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2754,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2756,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2757,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2761,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2762,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2764,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2765,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2769,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2770,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2772,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2773,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2777,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2778,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2780,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2781,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2785,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2786,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2788,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2789,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2793,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2794,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2796,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2693,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2797,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2801,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2802,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2696,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2803,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2804,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2746,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2807,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2808,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2696,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2697,
														"id": 2809,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3478,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2828
												],
												"declarations": [
													{
														"constant": false,
														"id": 2828,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2854,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2834,
												"initialValue": {
													"arguments": [
														{
															"id": 2830,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2815,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2831,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2817,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2832,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2819,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2829,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2812,
															2855
														],
														"referencedDeclaration": 2812,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2836,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2822,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2435",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2435",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2835,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3477,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2435_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2839,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2840,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2817,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2841,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2838,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2851,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2850,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2846,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2828,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2849,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2852,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2828,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2826,
												"id": 2853,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2435",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2820,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2435,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2435,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2435",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3478,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2966,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2863,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2858,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2869,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2868,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2862,
															"id": 2867,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2871
												],
												"declarations": [
													{
														"constant": false,
														"id": 2871,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2880,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2874,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2858,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2873,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3134,
																			3169
																		],
																		"referencedDeclaration": 3134,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2878,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2965,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2881,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2882,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2883,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2884,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2887,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2891,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2892,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2893,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2894,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2895,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2898,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2902,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2903,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2904,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2907,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2905,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2906,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2909,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2913,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2915,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2916,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2917,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2920,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2924,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2925,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2926,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2927,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2928,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2931,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2935,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2936,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2937,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2938,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2939,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2942,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2946,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2947,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2948,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2871,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2949,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2858,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2950,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2871,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2953,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2957,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2959,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2871,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2960,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2858,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2961,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2871,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2958,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2629,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2862,
														"id": 2964,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2856,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3478,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 3000,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2979
														],
														"declarations": [
															{
																"constant": false,
																"id": 2979,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3000,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2983,
														"initialValue": {
															"arguments": [
																{
																	"id": 2981,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2970,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2980,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2967,
																	3002
																],
																"referencedDeclaration": 2967,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2984,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2979,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2986,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2985,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3477,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2435_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2990,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2988,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2979,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2989,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2979,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2991,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2970,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2997,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2977,
														"id": 2999,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2968,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2435",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2971,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2435,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2435,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2435",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3478,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3133,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													3011
												],
												"declarations": [
													{
														"constant": false,
														"id": 3011,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3133,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3013,
												"initialValue": {
													"hexValue": "30",
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 3130,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3014,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3028,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 3027,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 3021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3019,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3022,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 3025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3023,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3026,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3043,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 3042,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 3036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3034,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3037,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3038,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3041,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3044,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3058,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 3057,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 3051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3049,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3052,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 3055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3053,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3056,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3059,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3073,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 3072,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 3066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3064,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3067,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 3070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3068,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3071,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3074,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3088,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 3087,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 3081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3079,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3082,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 3085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3083,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3086,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3089,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3103,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 3102,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 3096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3094,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3097,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 3100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3098,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3101,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3104,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3118,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 3117,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 3111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3109,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3112,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3113,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3116,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3129,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 3128,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3011,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3127,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3131,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3011,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3009,
												"id": 3132,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 3003,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3478,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3168,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 3167,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															3146
														],
														"declarations": [
															{
																"constant": false,
																"id": 3146,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3167,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3145,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3150,
														"initialValue": {
															"arguments": [
																{
																	"id": 3148,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3137,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3147,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3134,
																	3169
																],
																"referencedDeclaration": 3134,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3151,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3146,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3153,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3140,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3152,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3477,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2435_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3156,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3146,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3158,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3137,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3144,
														"id": 3166,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3135,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2435",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3138,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2435,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2435,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2435",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 3144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3169,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3478,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3297,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													3178
												],
												"declarations": [
													{
														"constant": false,
														"id": 3178,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3297,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3180,
												"initialValue": {
													"hexValue": "30",
													"id": 3179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 3294,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3197,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 3196,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3172,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3191,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3195,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3198,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3214,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 3213,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3172,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3208,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3212,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3231,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 3230,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 3224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3172,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3225,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 3228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3229,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3232,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3248,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 3247,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3237,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3172,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3242,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3243,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3246,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3249,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3265,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 3264,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3172,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3259,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 3262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3260,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3263,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3266,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3282,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 3281,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 3275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3172,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3276,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3277,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3280,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3283,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3293,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 3292,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3178,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3291,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3295,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3178,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3176,
												"id": 3296,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 3170,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3298,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 3176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3298,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3478,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3332,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 3331,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															3310
														],
														"declarations": [
															{
																"constant": false,
																"id": 3310,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3331,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3309,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3314,
														"initialValue": {
															"arguments": [
																{
																	"id": 3312,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3301,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3311,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3298,
																	3333
																],
																"referencedDeclaration": 3298,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3315,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3310,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3317,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3304,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3316,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3477,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2435_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3319,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3320,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3310,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3322,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3301,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3308,
														"id": 3330,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3299,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2435",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3303,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3302,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2435,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2435,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2435",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3478,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3419,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													3342
												],
												"declarations": [
													{
														"constant": false,
														"id": 3342,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3419,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3344,
												"initialValue": {
													"hexValue": "30",
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3416,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3345,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3336,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3359,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3358,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3336,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3353,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3354,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3342,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3357,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3336,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3374,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3373,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3365,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3336,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3368,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3369,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3342,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3372,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3375,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3336,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3389,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3388,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3380,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3336,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3383,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3342,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3387,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3336,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3404,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3403,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3336,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3398,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3399,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3342,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3402,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3336,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3415,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3414,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3410,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3342,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3413,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3417,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3342,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3340,
												"id": 3418,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 3334,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 3340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3420,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3478,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3457,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3456,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3432
														],
														"declarations": [
															{
																"constant": false,
																"id": 3432,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3456,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3436,
														"initialValue": {
															"arguments": [
																{
																	"id": 3434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3423,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3433,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3420,
																	3458
																],
																"referencedDeclaration": 3420,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3437,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3432,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3439,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3426,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2435",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3438,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3477,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2435_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3441,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3444,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3442,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3432,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3443,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3445,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3447,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3423,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3430,
														"id": 3455,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3421,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3426,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2435",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3424,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2435,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2435,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2435",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3478,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3476,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3469,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3462,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2435",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2435",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3467,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3466,
												"id": 3475,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3459,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2435",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3460,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2435,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2435,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2435",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3478,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3479,
							"src": "203:14914:13",
							"usedErrors": [
								2430
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3583
						]
					},
					"id": 3584,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3481,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3583,
							"linearizedBaseContracts": [
								3583
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3498,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3491,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3484,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3492,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3486,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3495,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3486,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 3494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3490,
												"id": 3497,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 3482,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3499,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3483,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3499,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3485,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3499,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3488,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3583,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3516,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3502,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3504,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3504,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 3512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3502,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3508,
												"id": 3515,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 3500,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3501,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3503,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 3508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3506,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3583,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3560,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													3528
												],
												"declarations": [
													{
														"constant": false,
														"id": 3528,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3560,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3527,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3541,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3529,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3520,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3530,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3522,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3532,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3533,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3520,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3534,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3522,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3536,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3539,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3542,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3528,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3547,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3528,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3546,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3545,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3543,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3552,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3520,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3553,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3522,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3555,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3557,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3526,
												"id": 3559,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 3518,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3519,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3521,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3524,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3583,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3581,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3580,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3571,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3564,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3575,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3564,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3574,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3564,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3569,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3568,
														"id": 3579,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3562,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3564,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3582,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3563,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3582,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3583,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3584,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"contracts/TrainersERC721.sol": {
				"ast": {
					"absolutePath": "contracts/TrainersERC721.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							2133
						],
						"ERC165": [
							2412
						],
						"ERC721": [
							1524
						],
						"ERC721Enumerable": [
							2043
						],
						"IAccessControl": [
							378
						],
						"IERC165": [
							2424
						],
						"IERC721Enumerable": [
							2075
						],
						"Math": [
							3478
						],
						"SignedMath": [
							3583
						],
						"Strings": [
							2388
						],
						"TrainersERC721": [
							3761
						]
					},
					"id": 3762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3585,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 3586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3762,
							"sourceUnit": 2389,
							"src": "58:51:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 3587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3762,
							"sourceUnit": 296,
							"src": "110:58:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3762,
							"sourceUnit": 2044,
							"src": "169:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3589,
										"name": "AccessControl",
										"nameLocations": [
											"276:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "276:13:15"
									},
									"id": 3590,
									"nodeType": "InheritanceSpecifier",
									"src": "276:13:15"
								},
								{
									"baseName": {
										"id": 3591,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"291:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2043,
										"src": "291:16:15"
									},
									"id": 3592,
									"nodeType": "InheritanceSpecifier",
									"src": "291:16:15"
								}
							],
							"canonicalName": "TrainersERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3761,
							"linearizedBaseContracts": [
								3761,
								2043,
								2075,
								1524,
								468,
								2103,
								1641,
								295,
								2412,
								2424,
								378,
								2133
							],
							"name": "TrainersERC721",
							"nameLocation": "258:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "fcbd9479bb682193b3eb060a58134eda82cf0a141904328119cfb9c15e6e171e",
									"id": 3600,
									"name": "MintTrainer",
									"nameLocation": "320:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3594,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "332:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3593,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "332:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3596,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "340:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3598,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3600,
												"src": "349:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:26:15"
									},
									"src": "314:44:15"
								},
								{
									"global": false,
									"id": 3603,
									"libraryName": {
										"id": 3601,
										"name": "Strings",
										"nameLocations": [
											"370:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2388,
										"src": "370:7:15"
									},
									"nodeType": "UsingForDirective",
									"src": "364:26:15",
									"typeName": {
										"id": 3602,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "382:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 3606,
									"libraryName": {
										"id": 3604,
										"name": "Strings",
										"nameLocations": [
											"401:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2388,
										"src": "401:7:15"
									},
									"nodeType": "UsingForDirective",
									"src": "395:25:15",
									"typeName": {
										"id": 3605,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "413:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "2a0acc6a",
									"id": 3611,
									"mutability": "constant",
									"name": "ADMIN",
									"nameLocation": "450:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3761,
									"src": "426:50:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3607,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "426:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e",
												"id": 3609,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "468:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												},
												"value": "ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												}
											],
											"id": 3608,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "458:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3610,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "458:18:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6313bd30",
									"id": 3616,
									"mutability": "constant",
									"name": "DEP",
									"nameLocation": "506:3:15",
									"nodeType": "VariableDeclaration",
									"scope": 3761,
									"src": "482:46:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3612,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "444550",
												"id": 3614,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "522:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe2",
													"typeString": "literal_string \"DEP\""
												},
												"value": "DEP"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b4ce9f8311d4fdc9a4f41ed950639c1d793f5d19cd88a87b9ecec171f485afe2",
													"typeString": "literal_string \"DEP\""
												}
											],
											"id": 3613,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "512:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3615,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "512:16:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d2401fa4",
									"id": 3618,
									"mutability": "mutable",
									"name": "tokenURI_",
									"nameLocation": "549:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3761,
									"src": "535:23:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3617,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "535:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e1a6a9c",
									"id": 3621,
									"mutability": "mutable",
									"name": "tokenTraker_",
									"nameLocation": "579:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3761,
									"src": "564:31:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3619,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3620,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "594:1:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3625,
									"mutability": "mutable",
									"name": "modelTraker_",
									"nameLocation": "637:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3761,
									"src": "602:47:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint16_$",
										"typeString": "mapping(uint256 => uint16)"
									},
									"typeName": {
										"id": 3624,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3622,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "610:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "602:26:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint16_$",
											"typeString": "mapping(uint256 => uint16)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3623,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "621:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3642,
										"nodeType": "Block",
										"src": "757:61:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3637,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "778:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3638,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "798:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "798:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3636,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "767:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3641,
												"nodeType": "ExpressionStatement",
												"src": "767:44:15"
											}
										]
									},
									"id": 3643,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3632,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3627,
													"src": "741:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3633,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3629,
													"src": "748:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3634,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3631,
												"name": "ERC721",
												"nameLocations": [
													"734:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1524,
												"src": "734:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "734:22:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3627,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "691:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3643,
												"src": "677:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3629,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "720:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3643,
												"src": "706:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "706:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:66:15"
									},
									"returnParameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:15"
									},
									"scope": 3761,
									"src": "656:162:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 3651,
										"nodeType": "Block",
										"src": "899:33:15",
										"statements": [
											{
												"expression": {
													"id": 3649,
													"name": "tokenURI_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3618,
													"src": "916:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3648,
												"id": 3650,
												"nodeType": "Return",
												"src": "909:16:15"
											}
										]
									},
									"id": 3652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "833:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "866:8:15"
									},
									"parameters": {
										"id": 3644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:15"
									},
									"returnParameters": {
										"id": 3648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3652,
												"src": "884:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3646,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "884:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:15:15"
									},
									"scope": 3761,
									"src": "824:108:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3664,
										"nodeType": "Block",
										"src": "1012:31:15",
										"statements": [
											{
												"expression": {
													"id": 3662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3660,
														"name": "tokenURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3618,
														"src": "1022:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3661,
														"name": "_u",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3654,
														"src": "1034:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "1022:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3663,
												"nodeType": "ExpressionStatement",
												"src": "1022:14:15"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 3665,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3657,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "992:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3658,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3656,
												"name": "onlyRole",
												"nameLocations": [
													"983:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "983:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "983:28:15"
										}
									],
									"name": "setURI",
									"nameLocation": "947:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3654,
												"mutability": "mutable",
												"name": "_u",
												"nameLocation": "970:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "954:18:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "954:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:20:15"
									},
									"returnParameters": {
										"id": 3659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1012:0:15"
									},
									"scope": 3761,
									"src": "938:105:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3676,
										"nodeType": "Block",
										"src": "1114:41:15",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3672,
														"name": "modelTraker_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "1131:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint16_$",
															"typeString": "mapping(uint256 => uint16)"
														}
													},
													"id": 3674,
													"indexExpression": {
														"id": 3673,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3667,
														"src": "1144:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1131:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3671,
												"id": 3675,
												"nodeType": "Return",
												"src": "1124:24:15"
											}
										]
									},
									"functionSelector": "1b21c00a",
									"id": 3677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenModel",
									"nameLocation": "1058:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3667,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1077:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3677,
												"src": "1069:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:13:15"
									},
									"returnParameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3677,
												"src": "1105:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:9:15"
									},
									"scope": 3761,
									"src": "1049:106:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 3707,
										"nodeType": "Block",
										"src": "1259:286:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3686,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3679,
															"src": "1283:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3685,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "1269:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3688,
												"nodeType": "ExpressionStatement",
												"src": "1269:18:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3693,
																		"name": "_baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3652
																		],
																		"referencedDeclaration": 3652,
																		"src": "1379:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																			"typeString": "function () view returns (string memory)"
																		}
																	},
																	"id": 3694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1379:10:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 3695,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3679,
																			"src": "1411:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1415:8:15",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2201,
																		"src": "1411:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 3697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1411:14:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "3f6d6f64656c3d",
																	"id": 3698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1447:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8523dcddbe7af61b3782a4dca64823f2db585c4295a0c7e9d9daa0c13620fc2c",
																		"typeString": "literal_string \"?model=\""
																	},
																	"value": "?model="
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"baseExpression": {
																				"id": 3699,
																				"name": "modelTraker_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3625,
																				"src": "1478:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint16_$",
																					"typeString": "mapping(uint256 => uint16)"
																				}
																			},
																			"id": 3701,
																			"indexExpression": {
																				"id": 3700,
																				"name": "_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3679,
																				"src": "1491:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1478:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"id": 3702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1496:8:15",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2201,
																		"src": "1478:26:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 3703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1478:28:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_8523dcddbe7af61b3782a4dca64823f2db585c4295a0c7e9d9daa0c13620fc2c",
																		"typeString": "literal_string \"?model=\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 3691,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1341:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1345:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1341:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1341:183:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1317:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 3689,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1317:6:15",
															"typeDescriptions": {}
														}
													},
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1317:221:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3684,
												"id": 3706,
												"nodeType": "Return",
												"src": "1298:240:15"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1170:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3681,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1226:8:15"
									},
									"parameters": {
										"id": 3680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3679,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1196:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "1188:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:27:15"
									},
									"returnParameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3708,
												"src": "1244:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1244:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:15"
									},
									"scope": 3761,
									"src": "1161:384:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3743,
										"nodeType": "Block",
										"src": "1618:187:15",
										"statements": [
											{
												"assignments": [
													3719
												],
												"declarations": [
													{
														"constant": false,
														"id": 3719,
														"mutability": "mutable",
														"name": "_tokenId",
														"nameLocation": "1636:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 3743,
														"src": "1628:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1628:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3721,
												"initialValue": {
													"id": 3720,
													"name": "tokenTraker_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3621,
													"src": "1647:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1628:31:15"
											},
											{
												"expression": {
													"id": 3726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3722,
															"name": "modelTraker_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3625,
															"src": "1669:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint16_$",
																"typeString": "mapping(uint256 => uint16)"
															}
														},
														"id": 3724,
														"indexExpression": {
															"id": 3723,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3719,
															"src": "1682:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1669:22:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3725,
														"name": "_m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3712,
														"src": "1694:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1669:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 3727,
												"nodeType": "ExpressionStatement",
												"src": "1669:27:15"
											},
											{
												"expression": {
													"id": 3730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3728,
														"name": "tokenTraker_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3621,
														"src": "1706:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1722:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1706:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3731,
												"nodeType": "ExpressionStatement",
												"src": "1706:17:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3733,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3710,
															"src": "1739:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3734,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3719,
															"src": "1744:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3732,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "1733:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1733:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3736,
												"nodeType": "ExpressionStatement",
												"src": "1733:20:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3738,
															"name": "_m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3712,
															"src": "1780:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 3739,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3719,
															"src": "1784:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3740,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3710,
															"src": "1794:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3737,
														"name": "MintTrainer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3600,
														"src": "1768:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint16,uint256,address)"
														}
													},
													"id": 3741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3742,
												"nodeType": "EmitStatement",
												"src": "1763:35:15"
											}
										]
									},
									"functionSelector": "ad0be4bd",
									"id": 3744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3715,
													"name": "DEP",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3616,
													"src": "1613:3:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3714,
												"name": "onlyRole",
												"nameLocations": [
													"1604:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1604:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1604:13:15"
										}
									],
									"name": "mint",
									"nameLocation": "1560:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3710,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1573:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3744,
												"src": "1565:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3712,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "1585:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 3744,
												"src": "1578:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3711,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1578:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:24:15"
									},
									"returnParameters": {
										"id": 3717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:0:15"
									},
									"scope": 3761,
									"src": "1551:254:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										62,
										1723
									],
									"body": {
										"id": 3759,
										"nodeType": "Block",
										"src": "1993:60:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3756,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3746,
															"src": "2034:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3754,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2010:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TrainersERC721_$3761_$",
																"typeString": "type(contract super TrainersERC721)"
															}
														},
														"id": 3755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2016:17:15",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1723,
														"src": "2010:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3753,
												"id": 3758,
												"nodeType": "Return",
												"src": "2003:43:15"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1820:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3750,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3748,
												"name": "AccessControl",
												"nameLocations": [
													"1933:13:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 295,
												"src": "1933:13:15"
											},
											{
												"id": 3749,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"1948:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2043,
												"src": "1948:16:15"
											}
										],
										"src": "1924:41:15"
									},
									"parameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1854:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3760,
												"src": "1847:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3745,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1847:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:34:15"
									},
									"returnParameters": {
										"id": 3753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3760,
												"src": "1983:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1983:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:6:15"
									},
									"scope": 3761,
									"src": "1811:242:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3762,
							"src": "249:1806:15",
							"usedErrors": [
								305,
								308,
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467,
								1696,
								1699
							],
							"usedEvents": [
								317,
								326,
								335,
								1540,
								1549,
								1558,
								3600
							]
						}
					],
					"src": "33:2022:15"
				},
				"id": 15
			}
		}
	}
}